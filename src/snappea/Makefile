# Makefile.in generated by automake 1.10.2 from Makefile.am.
# src/snappea/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/snap
pkglibdir = $(libdir)/snap
pkgincludedir = $(includedir)/snap
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
subdir = src/snappea
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
libpsnap_a_AR = $(AR) $(ARFLAGS)
libpsnap_a_LIBADD =
am__objects_1 = libpsnap_a-Dehn_coefficients.$(OBJEXT) \
	libpsnap_a-Dirichlet.$(OBJEXT) \
	libpsnap_a-Dirichlet_basepoint.$(OBJEXT) \
	libpsnap_a-Dirichlet_construction.$(OBJEXT) \
	libpsnap_a-Dirichlet_extras.$(OBJEXT) \
	libpsnap_a-Dirichlet_precision.$(OBJEXT) \
	libpsnap_a-FGWord.$(OBJEXT) \
	libpsnap_a-Moebius_transformations.$(OBJEXT) \
	libpsnap_a-O31.$(OBJEXT) libpsnap_a-abelian_group.$(OBJEXT) \
	libpsnap_a-barycentric_subdivision.$(OBJEXT) \
	libpsnap_a-canonize.$(OBJEXT) \
	libpsnap_a-canonize_part_1.$(OBJEXT) \
	libpsnap_a-canonize_part_2.$(OBJEXT) \
	libpsnap_a-canonize_result.$(OBJEXT) \
	libpsnap_a-change_peripheral_curves.$(OBJEXT) \
	libpsnap_a-chern_simons.$(OBJEXT) \
	libpsnap_a-choose_generators.$(OBJEXT) \
	libpsnap_a-close_cusps.$(OBJEXT) libpsnap_a-complex.$(OBJEXT) \
	libpsnap_a-complex_length.$(OBJEXT) \
	libpsnap_a-continued_fractions.$(OBJEXT) \
	libpsnap_a-core_geodesics.$(OBJEXT) libpsnap_a-cover.$(OBJEXT) \
	libpsnap_a-current_curve_basis.$(OBJEXT) \
	libpsnap_a-cusp_cross_sections.$(OBJEXT) \
	libpsnap_a-cusp_neighborhoods.$(OBJEXT) \
	libpsnap_a-cusp_shapes.$(OBJEXT) libpsnap_a-cusps.$(OBJEXT) \
	libpsnap_a-decode_new_DT.$(OBJEXT) \
	libpsnap_a-diagnostic.$(OBJEXT) \
	libpsnap_a-direct_product.$(OBJEXT) \
	libpsnap_a-double_cover.$(OBJEXT) \
	libpsnap_a-drilling.$(OBJEXT) libpsnap_a-dual_curves.$(OBJEXT) \
	libpsnap_a-edge_classes.$(OBJEXT) \
	libpsnap_a-elements_generate_group.$(OBJEXT) \
	libpsnap_a-filling.$(OBJEXT) libpsnap_a-find_cusp.$(OBJEXT) \
	libpsnap_a-finite_vertices.$(OBJEXT) \
	libpsnap_a-fundamental_group.$(OBJEXT) \
	libpsnap_a-gcd.$(OBJEXT) libpsnap_a-gluing_equations.$(OBJEXT) \
	libpsnap_a-holonomy.$(OBJEXT) libpsnap_a-homology.$(OBJEXT) \
	libpsnap_a-hyperbolic_structure.$(OBJEXT) \
	libpsnap_a-identify_solution_type.$(OBJEXT) \
	libpsnap_a-index_to_hue.$(OBJEXT) \
	libpsnap_a-interface.$(OBJEXT) \
	libpsnap_a-intersection_numbers.$(OBJEXT) \
	libpsnap_a-isometry.$(OBJEXT) \
	libpsnap_a-isometry_closed.$(OBJEXT) \
	libpsnap_a-isometry_cusped.$(OBJEXT) \
	libpsnap_a-length_spectrum.$(OBJEXT) \
	libpsnap_a-link_complement.$(OBJEXT) \
	libpsnap_a-matrix_conversion.$(OBJEXT) \
	libpsnap_a-matrix_generators.$(OBJEXT) \
	libpsnap_a-my_malloc.$(OBJEXT) \
	libpsnap_a-normal_surface_construction.$(OBJEXT) \
	libpsnap_a-normal_surface_recognition.$(OBJEXT) \
	libpsnap_a-normal_surface_splitting.$(OBJEXT) \
	libpsnap_a-o31_matrices.$(OBJEXT) libpsnap_a-orient.$(OBJEXT) \
	libpsnap_a-peripheral_curves.$(OBJEXT) \
	libpsnap_a-polyhedral_group.$(OBJEXT) \
	libpsnap_a-positioned_tet.$(OBJEXT) \
	libpsnap_a-precision.$(OBJEXT) \
	libpsnap_a-punctured_torus_bundles.$(OBJEXT) \
	libpsnap_a-quotients.$(OBJEXT) \
	libpsnap_a-rehydrate_census.$(OBJEXT) \
	libpsnap_a-representations.$(OBJEXT) \
	libpsnap_a-shingling.$(OBJEXT) \
	libpsnap_a-shortest_cusp_basis.$(OBJEXT) \
	libpsnap_a-simplify_triangulation.$(OBJEXT) \
	libpsnap_a-sl2c_matrices.$(OBJEXT) \
	libpsnap_a-solve_equations.$(OBJEXT) \
	libpsnap_a-subdivide.$(OBJEXT) \
	libpsnap_a-symmetric_group.$(OBJEXT) \
	libpsnap_a-symmetry_group.$(OBJEXT) \
	libpsnap_a-symmetry_group_closed.$(OBJEXT) \
	libpsnap_a-symmetry_group_cusped.$(OBJEXT) \
	libpsnap_a-symmetry_group_info.$(OBJEXT) \
	libpsnap_a-tables.$(OBJEXT) \
	libpsnap_a-terse_triangulation.$(OBJEXT) \
	libpsnap_a-tersest_triangulation.$(OBJEXT) \
	libpsnap_a-tet_shapes.$(OBJEXT) \
	libpsnap_a-tidy_peripheral_curves.$(OBJEXT) \
	libpsnap_a-transcendentals.$(OBJEXT) \
	libpsnap_a-triangulations.$(OBJEXT) \
	libpsnap_a-two_bridge.$(OBJEXT) libpsnap_a-unix_io.$(OBJEXT) \
	libpsnap_a-update_shapes.$(OBJEXT) libpsnap_a-volume.$(OBJEXT)
am__objects_2 = libpsnap_a-Alg_matrices.$(OBJEXT) \
	libpsnap_a-Dirichlet2D.$(OBJEXT) \
	libpsnap_a-Dirichlet2D_construction.$(OBJEXT) \
	libpsnap_a-Dirichlet2D_extras.$(OBJEXT) \
	libpsnap_a-Dirichlet_basepoint2D.$(OBJEXT) \
	libpsnap_a-Dirichlet_precision2D.$(OBJEXT) \
	libpsnap_a-SL2RMatrix.$(OBJEXT)
am__objects_3 = libpsnap_a-dt2snap.$(OBJEXT) \
	libpsnap_a-crossing_signs.$(OBJEXT) \
	libpsnap_a-link_diagram.$(OBJEXT)
am__objects_4 = $(am__objects_1) $(am__objects_2) $(am__objects_3)
am_libpsnap_a_OBJECTS = $(am__objects_4)
libpsnap_a_OBJECTS = $(am_libpsnap_a_OBJECTS)
libsnap_a_AR = $(AR) $(ARFLAGS)
libsnap_a_LIBADD =
am__objects_5 = libsnap_a-Dehn_coefficients.$(OBJEXT) \
	libsnap_a-Dirichlet.$(OBJEXT) \
	libsnap_a-Dirichlet_basepoint.$(OBJEXT) \
	libsnap_a-Dirichlet_construction.$(OBJEXT) \
	libsnap_a-Dirichlet_extras.$(OBJEXT) \
	libsnap_a-Dirichlet_precision.$(OBJEXT) \
	libsnap_a-FGWord.$(OBJEXT) \
	libsnap_a-Moebius_transformations.$(OBJEXT) \
	libsnap_a-O31.$(OBJEXT) libsnap_a-abelian_group.$(OBJEXT) \
	libsnap_a-barycentric_subdivision.$(OBJEXT) \
	libsnap_a-canonize.$(OBJEXT) \
	libsnap_a-canonize_part_1.$(OBJEXT) \
	libsnap_a-canonize_part_2.$(OBJEXT) \
	libsnap_a-canonize_result.$(OBJEXT) \
	libsnap_a-change_peripheral_curves.$(OBJEXT) \
	libsnap_a-chern_simons.$(OBJEXT) \
	libsnap_a-choose_generators.$(OBJEXT) \
	libsnap_a-close_cusps.$(OBJEXT) libsnap_a-complex.$(OBJEXT) \
	libsnap_a-complex_length.$(OBJEXT) \
	libsnap_a-continued_fractions.$(OBJEXT) \
	libsnap_a-core_geodesics.$(OBJEXT) libsnap_a-cover.$(OBJEXT) \
	libsnap_a-current_curve_basis.$(OBJEXT) \
	libsnap_a-cusp_cross_sections.$(OBJEXT) \
	libsnap_a-cusp_neighborhoods.$(OBJEXT) \
	libsnap_a-cusp_shapes.$(OBJEXT) libsnap_a-cusps.$(OBJEXT) \
	libsnap_a-decode_new_DT.$(OBJEXT) \
	libsnap_a-diagnostic.$(OBJEXT) \
	libsnap_a-direct_product.$(OBJEXT) \
	libsnap_a-double_cover.$(OBJEXT) libsnap_a-drilling.$(OBJEXT) \
	libsnap_a-dual_curves.$(OBJEXT) \
	libsnap_a-edge_classes.$(OBJEXT) \
	libsnap_a-elements_generate_group.$(OBJEXT) \
	libsnap_a-filling.$(OBJEXT) libsnap_a-find_cusp.$(OBJEXT) \
	libsnap_a-finite_vertices.$(OBJEXT) \
	libsnap_a-fundamental_group.$(OBJEXT) libsnap_a-gcd.$(OBJEXT) \
	libsnap_a-gluing_equations.$(OBJEXT) \
	libsnap_a-holonomy.$(OBJEXT) libsnap_a-homology.$(OBJEXT) \
	libsnap_a-hyperbolic_structure.$(OBJEXT) \
	libsnap_a-identify_solution_type.$(OBJEXT) \
	libsnap_a-index_to_hue.$(OBJEXT) libsnap_a-interface.$(OBJEXT) \
	libsnap_a-intersection_numbers.$(OBJEXT) \
	libsnap_a-isometry.$(OBJEXT) \
	libsnap_a-isometry_closed.$(OBJEXT) \
	libsnap_a-isometry_cusped.$(OBJEXT) \
	libsnap_a-length_spectrum.$(OBJEXT) \
	libsnap_a-link_complement.$(OBJEXT) \
	libsnap_a-matrix_conversion.$(OBJEXT) \
	libsnap_a-matrix_generators.$(OBJEXT) \
	libsnap_a-my_malloc.$(OBJEXT) \
	libsnap_a-normal_surface_construction.$(OBJEXT) \
	libsnap_a-normal_surface_recognition.$(OBJEXT) \
	libsnap_a-normal_surface_splitting.$(OBJEXT) \
	libsnap_a-o31_matrices.$(OBJEXT) libsnap_a-orient.$(OBJEXT) \
	libsnap_a-peripheral_curves.$(OBJEXT) \
	libsnap_a-polyhedral_group.$(OBJEXT) \
	libsnap_a-positioned_tet.$(OBJEXT) \
	libsnap_a-precision.$(OBJEXT) \
	libsnap_a-punctured_torus_bundles.$(OBJEXT) \
	libsnap_a-quotients.$(OBJEXT) \
	libsnap_a-rehydrate_census.$(OBJEXT) \
	libsnap_a-representations.$(OBJEXT) \
	libsnap_a-shingling.$(OBJEXT) \
	libsnap_a-shortest_cusp_basis.$(OBJEXT) \
	libsnap_a-simplify_triangulation.$(OBJEXT) \
	libsnap_a-sl2c_matrices.$(OBJEXT) \
	libsnap_a-solve_equations.$(OBJEXT) \
	libsnap_a-subdivide.$(OBJEXT) \
	libsnap_a-symmetric_group.$(OBJEXT) \
	libsnap_a-symmetry_group.$(OBJEXT) \
	libsnap_a-symmetry_group_closed.$(OBJEXT) \
	libsnap_a-symmetry_group_cusped.$(OBJEXT) \
	libsnap_a-symmetry_group_info.$(OBJEXT) \
	libsnap_a-tables.$(OBJEXT) \
	libsnap_a-terse_triangulation.$(OBJEXT) \
	libsnap_a-tersest_triangulation.$(OBJEXT) \
	libsnap_a-tet_shapes.$(OBJEXT) \
	libsnap_a-tidy_peripheral_curves.$(OBJEXT) \
	libsnap_a-transcendentals.$(OBJEXT) \
	libsnap_a-triangulations.$(OBJEXT) \
	libsnap_a-two_bridge.$(OBJEXT) libsnap_a-unix_io.$(OBJEXT) \
	libsnap_a-update_shapes.$(OBJEXT) libsnap_a-volume.$(OBJEXT)
am__objects_6 = libsnap_a-Alg_matrices.$(OBJEXT) \
	libsnap_a-Dirichlet2D.$(OBJEXT) \
	libsnap_a-Dirichlet2D_construction.$(OBJEXT) \
	libsnap_a-Dirichlet2D_extras.$(OBJEXT) \
	libsnap_a-Dirichlet_basepoint2D.$(OBJEXT) \
	libsnap_a-Dirichlet_precision2D.$(OBJEXT) \
	libsnap_a-SL2RMatrix.$(OBJEXT)
am__objects_7 = libsnap_a-dt2snap.$(OBJEXT) \
	libsnap_a-crossing_signs.$(OBJEXT) \
	libsnap_a-link_diagram.$(OBJEXT)
am_libsnap_a_OBJECTS = $(am__objects_5) $(am__objects_6) \
	$(am__objects_7)
libsnap_a_OBJECTS = $(am_libsnap_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libpsnap_a_SOURCES) $(libsnap_a_SOURCES)
DIST_SOURCES = $(libpsnap_a_SOURCES) $(libsnap_a_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/yarmola/Source/snap-pari/missing --run aclocal-1.10
AMTAR = ${SHELL} /Users/yarmola/Source/snap-pari/missing --run tar
AUTOCONF = ${SHELL} /Users/yarmola/Source/snap-pari/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/yarmola/Source/snap-pari/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/yarmola/Source/snap-pari/missing --run automake-1.10
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = -I/usr/local/include
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FIX_PARI_HEADER = 
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS =  -lreadline -lpari
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/yarmola/Source/snap-pari/missing --run makeinfo
MKDIR_P = ../.././install-sh -c -d
OBJEXT = o
PACKAGE = snap
PACKAGE_BUGREPORT = 
PACKAGE_NAME = snap
PACKAGE_STRING = snap 1.11.3
PACKAGE_TARNAME = snap
PACKAGE_VERSION = 1.11.3
PARI_DIR = /usr/local
PATH_SEPARATOR = :
PWR_DIR = pariwrap
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
SIZEOF_LONG = 
STRIP = 
VERSION = 1.11.3
abs_builddir = /Users/yarmola/Source/snap-pari/src/snappea
abs_srcdir = /Users/yarmola/Source/snap-pari/src/snappea
abs_top_builddir = /Users/yarmola/Source/snap-pari
abs_top_srcdir = /Users/yarmola/Source/snap-pari
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /Users/yarmola/Source/snap-pari/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(top_builddir)/./install-sh -c -d
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
noinst_LIBRARIES = libsnap.a libpsnap.a
snappea = Dehn_coefficients.cc \
	Dirichlet.cc Dirichlet.h \
	Dirichlet_basepoint.cc \
	Dirichlet_construction.cc \
	Dirichlet_extras.cc \
	Dirichlet_precision.cc \
	FGWord.cc FGWord.h \
	Moebius_transformations.cc Moebius_transformations.h \
	O31.cc O31.h \
	SnapPea.h \
	abelian_group.cc \
	barycentric_subdivision.cc \
	canonize.cc canonize.h \
	canonize_part_1.cc \
	canonize_part_2.cc \
	canonize_result.cc \
	change_peripheral_curves.cc \
	chern_simons.cc \
	choose_generators.cc \
	close_cusps.cc \
	complex.cc complex.h \
	complex_length.cc \
	continued_fractions.cc \
	core_geodesics.cc \
	cover.cc covers.h \
	current_curve_basis.cc \
	cusp_cross_sections.cc \
	cusp_neighborhoods.cc \
	cusp_shapes.cc \
	cusps.cc \
	decode_new_DT.cc \
	diagnostic.cc \
	direct_product.cc \
	double_cover.cc \
	drilling.cc \
	dual_curves.cc \
	dual_one_skeleton_curve.h \
	edge_classes.cc \
	elements_generate_group.cc \
	filling.cc \
	find_cusp.cc \
	finite_vertices.cc \
	fundamental_group.cc fundamental_group.h \
	gcd.cc \
	gluing_equations.cc \
	holonomy.cc \
	homology.cc \
	hyperbolic_structure.cc \
	identify_solution_type.cc \
	index_to_hue.cc \
	interface.cc \
	intersection_numbers.cc \
	isometry.cc isometry.h \
	isometry_closed.cc \
	isometry_cusped.cc \
	kernel.h \
	kernel_prototypes.h \
	kernel_typedefs.h \
	length_spectrum.cc length_spectrum.h \
	link_complement.cc \
	link_projection.h \
	matrix_conversion.cc matrix_conversion.h \
	matrix_generators.cc \
	my_malloc.cc \
	normal_surface_construction.cc \
	normal_surface_recognition.cc \
	normal_surface_splitting.cc \
	normal_surfaces.h \
	o31_matrices.cc o31_matrices.h \
	orient.cc \
	peripheral_curves.cc peripheral_curves.h \
	polyhedral_group.cc \
	positioned_tet.cc positioned_tet.h \
	precision.cc \
	punctured_torus_bundles.cc \
	quotients.cc \
	rehydrate_census.cc \
	representations.cc \
	shingling.cc \
	shortest_cusp_basis.cc \
	simplify_triangulation.cc \
	sl2c_matrices.cc sl2c_matrices.h \
	solve_equations.cc \
	subdivide.cc \
	symmetric_group.cc \
	symmetry_group.cc symmetry_group.h \
	symmetry_group_closed.cc \
	symmetry_group_cusped.cc \
	symmetry_group_info.cc \
	tables.cc tables.h \
	terse_triangulation.cc terse_triangulation.h \
	tersest_triangulation.cc tersest_triangulation.h \
	tet_shapes.cc \
	tidy_peripheral_curves.cc \
	transcendentals.cc \
	triangulation.h \
	triangulation_io.h \
	triangulations.cc \
	two_bridge.cc \
	unix_io.cc unix_io.h \
	update_shapes.cc \
	volume.cc \
	winged_edge.h

d2d = Alg_matrices.cc Alg_matrices.h \
	Dirichlet2D.cc Dirichlet2D.h \
	Dirichlet2D_construction.cc \
	Dirichlet2D_extras.cc \
	Dirichlet2D_prototypes.h \
	Dirichlet_basepoint2D.cc \
	Dirichlet_precision2D.cc \
	SL2RMatrix.cc SL2RMatrix.h \
	polygon.h

dt = dt2snap.cc \
	crossing_signs.cc \
	link_diagram.cc link_diagram.h 

INCLUDES = -I.. -I/usr/local/include -I$(srcdir)/../pariwrap
AM_LDFLAGS = -L/usr/local/lib -L$(top_builddir)/pariwrap
libsnap_a_SOURCES = $(snappea) $(d2d) $(dt)
libsnap_a_CXXFLAGS = -DNOPARI
libpsnap_a_SOURCES = $(libsnap_a_SOURCES)
libpsnap_a_CXXFLAGS = 
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/snappea/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/snappea/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libpsnap.a: $(libpsnap_a_OBJECTS) $(libpsnap_a_DEPENDENCIES) 
	-rm -f libpsnap.a
	$(libpsnap_a_AR) libpsnap.a $(libpsnap_a_OBJECTS) $(libpsnap_a_LIBADD)
	$(RANLIB) libpsnap.a
libsnap.a: $(libsnap_a_OBJECTS) $(libsnap_a_DEPENDENCIES) 
	-rm -f libsnap.a
	$(libsnap_a_AR) libsnap.a $(libsnap_a_OBJECTS) $(libsnap_a_LIBADD)
	$(RANLIB) libsnap.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libpsnap_a-Alg_matrices.Po
include ./$(DEPDIR)/libpsnap_a-Dehn_coefficients.Po
include ./$(DEPDIR)/libpsnap_a-Dirichlet.Po
include ./$(DEPDIR)/libpsnap_a-Dirichlet2D.Po
include ./$(DEPDIR)/libpsnap_a-Dirichlet2D_construction.Po
include ./$(DEPDIR)/libpsnap_a-Dirichlet2D_extras.Po
include ./$(DEPDIR)/libpsnap_a-Dirichlet_basepoint.Po
include ./$(DEPDIR)/libpsnap_a-Dirichlet_basepoint2D.Po
include ./$(DEPDIR)/libpsnap_a-Dirichlet_construction.Po
include ./$(DEPDIR)/libpsnap_a-Dirichlet_extras.Po
include ./$(DEPDIR)/libpsnap_a-Dirichlet_precision.Po
include ./$(DEPDIR)/libpsnap_a-Dirichlet_precision2D.Po
include ./$(DEPDIR)/libpsnap_a-FGWord.Po
include ./$(DEPDIR)/libpsnap_a-Moebius_transformations.Po
include ./$(DEPDIR)/libpsnap_a-O31.Po
include ./$(DEPDIR)/libpsnap_a-SL2RMatrix.Po
include ./$(DEPDIR)/libpsnap_a-abelian_group.Po
include ./$(DEPDIR)/libpsnap_a-barycentric_subdivision.Po
include ./$(DEPDIR)/libpsnap_a-canonize.Po
include ./$(DEPDIR)/libpsnap_a-canonize_part_1.Po
include ./$(DEPDIR)/libpsnap_a-canonize_part_2.Po
include ./$(DEPDIR)/libpsnap_a-canonize_result.Po
include ./$(DEPDIR)/libpsnap_a-change_peripheral_curves.Po
include ./$(DEPDIR)/libpsnap_a-chern_simons.Po
include ./$(DEPDIR)/libpsnap_a-choose_generators.Po
include ./$(DEPDIR)/libpsnap_a-close_cusps.Po
include ./$(DEPDIR)/libpsnap_a-complex.Po
include ./$(DEPDIR)/libpsnap_a-complex_length.Po
include ./$(DEPDIR)/libpsnap_a-continued_fractions.Po
include ./$(DEPDIR)/libpsnap_a-core_geodesics.Po
include ./$(DEPDIR)/libpsnap_a-cover.Po
include ./$(DEPDIR)/libpsnap_a-crossing_signs.Po
include ./$(DEPDIR)/libpsnap_a-current_curve_basis.Po
include ./$(DEPDIR)/libpsnap_a-cusp_cross_sections.Po
include ./$(DEPDIR)/libpsnap_a-cusp_neighborhoods.Po
include ./$(DEPDIR)/libpsnap_a-cusp_shapes.Po
include ./$(DEPDIR)/libpsnap_a-cusps.Po
include ./$(DEPDIR)/libpsnap_a-decode_new_DT.Po
include ./$(DEPDIR)/libpsnap_a-diagnostic.Po
include ./$(DEPDIR)/libpsnap_a-direct_product.Po
include ./$(DEPDIR)/libpsnap_a-double_cover.Po
include ./$(DEPDIR)/libpsnap_a-drilling.Po
include ./$(DEPDIR)/libpsnap_a-dt2snap.Po
include ./$(DEPDIR)/libpsnap_a-dual_curves.Po
include ./$(DEPDIR)/libpsnap_a-edge_classes.Po
include ./$(DEPDIR)/libpsnap_a-elements_generate_group.Po
include ./$(DEPDIR)/libpsnap_a-filling.Po
include ./$(DEPDIR)/libpsnap_a-find_cusp.Po
include ./$(DEPDIR)/libpsnap_a-finite_vertices.Po
include ./$(DEPDIR)/libpsnap_a-fundamental_group.Po
include ./$(DEPDIR)/libpsnap_a-gcd.Po
include ./$(DEPDIR)/libpsnap_a-gluing_equations.Po
include ./$(DEPDIR)/libpsnap_a-holonomy.Po
include ./$(DEPDIR)/libpsnap_a-homology.Po
include ./$(DEPDIR)/libpsnap_a-hyperbolic_structure.Po
include ./$(DEPDIR)/libpsnap_a-identify_solution_type.Po
include ./$(DEPDIR)/libpsnap_a-index_to_hue.Po
include ./$(DEPDIR)/libpsnap_a-interface.Po
include ./$(DEPDIR)/libpsnap_a-intersection_numbers.Po
include ./$(DEPDIR)/libpsnap_a-isometry.Po
include ./$(DEPDIR)/libpsnap_a-isometry_closed.Po
include ./$(DEPDIR)/libpsnap_a-isometry_cusped.Po
include ./$(DEPDIR)/libpsnap_a-length_spectrum.Po
include ./$(DEPDIR)/libpsnap_a-link_complement.Po
include ./$(DEPDIR)/libpsnap_a-link_diagram.Po
include ./$(DEPDIR)/libpsnap_a-matrix_conversion.Po
include ./$(DEPDIR)/libpsnap_a-matrix_generators.Po
include ./$(DEPDIR)/libpsnap_a-my_malloc.Po
include ./$(DEPDIR)/libpsnap_a-normal_surface_construction.Po
include ./$(DEPDIR)/libpsnap_a-normal_surface_recognition.Po
include ./$(DEPDIR)/libpsnap_a-normal_surface_splitting.Po
include ./$(DEPDIR)/libpsnap_a-o31_matrices.Po
include ./$(DEPDIR)/libpsnap_a-orient.Po
include ./$(DEPDIR)/libpsnap_a-peripheral_curves.Po
include ./$(DEPDIR)/libpsnap_a-polyhedral_group.Po
include ./$(DEPDIR)/libpsnap_a-positioned_tet.Po
include ./$(DEPDIR)/libpsnap_a-precision.Po
include ./$(DEPDIR)/libpsnap_a-punctured_torus_bundles.Po
include ./$(DEPDIR)/libpsnap_a-quotients.Po
include ./$(DEPDIR)/libpsnap_a-rehydrate_census.Po
include ./$(DEPDIR)/libpsnap_a-representations.Po
include ./$(DEPDIR)/libpsnap_a-shingling.Po
include ./$(DEPDIR)/libpsnap_a-shortest_cusp_basis.Po
include ./$(DEPDIR)/libpsnap_a-simplify_triangulation.Po
include ./$(DEPDIR)/libpsnap_a-sl2c_matrices.Po
include ./$(DEPDIR)/libpsnap_a-solve_equations.Po
include ./$(DEPDIR)/libpsnap_a-subdivide.Po
include ./$(DEPDIR)/libpsnap_a-symmetric_group.Po
include ./$(DEPDIR)/libpsnap_a-symmetry_group.Po
include ./$(DEPDIR)/libpsnap_a-symmetry_group_closed.Po
include ./$(DEPDIR)/libpsnap_a-symmetry_group_cusped.Po
include ./$(DEPDIR)/libpsnap_a-symmetry_group_info.Po
include ./$(DEPDIR)/libpsnap_a-tables.Po
include ./$(DEPDIR)/libpsnap_a-terse_triangulation.Po
include ./$(DEPDIR)/libpsnap_a-tersest_triangulation.Po
include ./$(DEPDIR)/libpsnap_a-tet_shapes.Po
include ./$(DEPDIR)/libpsnap_a-tidy_peripheral_curves.Po
include ./$(DEPDIR)/libpsnap_a-transcendentals.Po
include ./$(DEPDIR)/libpsnap_a-triangulations.Po
include ./$(DEPDIR)/libpsnap_a-two_bridge.Po
include ./$(DEPDIR)/libpsnap_a-unix_io.Po
include ./$(DEPDIR)/libpsnap_a-update_shapes.Po
include ./$(DEPDIR)/libpsnap_a-volume.Po
include ./$(DEPDIR)/libsnap_a-Alg_matrices.Po
include ./$(DEPDIR)/libsnap_a-Dehn_coefficients.Po
include ./$(DEPDIR)/libsnap_a-Dirichlet.Po
include ./$(DEPDIR)/libsnap_a-Dirichlet2D.Po
include ./$(DEPDIR)/libsnap_a-Dirichlet2D_construction.Po
include ./$(DEPDIR)/libsnap_a-Dirichlet2D_extras.Po
include ./$(DEPDIR)/libsnap_a-Dirichlet_basepoint.Po
include ./$(DEPDIR)/libsnap_a-Dirichlet_basepoint2D.Po
include ./$(DEPDIR)/libsnap_a-Dirichlet_construction.Po
include ./$(DEPDIR)/libsnap_a-Dirichlet_extras.Po
include ./$(DEPDIR)/libsnap_a-Dirichlet_precision.Po
include ./$(DEPDIR)/libsnap_a-Dirichlet_precision2D.Po
include ./$(DEPDIR)/libsnap_a-FGWord.Po
include ./$(DEPDIR)/libsnap_a-Moebius_transformations.Po
include ./$(DEPDIR)/libsnap_a-O31.Po
include ./$(DEPDIR)/libsnap_a-SL2RMatrix.Po
include ./$(DEPDIR)/libsnap_a-abelian_group.Po
include ./$(DEPDIR)/libsnap_a-barycentric_subdivision.Po
include ./$(DEPDIR)/libsnap_a-canonize.Po
include ./$(DEPDIR)/libsnap_a-canonize_part_1.Po
include ./$(DEPDIR)/libsnap_a-canonize_part_2.Po
include ./$(DEPDIR)/libsnap_a-canonize_result.Po
include ./$(DEPDIR)/libsnap_a-change_peripheral_curves.Po
include ./$(DEPDIR)/libsnap_a-chern_simons.Po
include ./$(DEPDIR)/libsnap_a-choose_generators.Po
include ./$(DEPDIR)/libsnap_a-close_cusps.Po
include ./$(DEPDIR)/libsnap_a-complex.Po
include ./$(DEPDIR)/libsnap_a-complex_length.Po
include ./$(DEPDIR)/libsnap_a-continued_fractions.Po
include ./$(DEPDIR)/libsnap_a-core_geodesics.Po
include ./$(DEPDIR)/libsnap_a-cover.Po
include ./$(DEPDIR)/libsnap_a-crossing_signs.Po
include ./$(DEPDIR)/libsnap_a-current_curve_basis.Po
include ./$(DEPDIR)/libsnap_a-cusp_cross_sections.Po
include ./$(DEPDIR)/libsnap_a-cusp_neighborhoods.Po
include ./$(DEPDIR)/libsnap_a-cusp_shapes.Po
include ./$(DEPDIR)/libsnap_a-cusps.Po
include ./$(DEPDIR)/libsnap_a-decode_new_DT.Po
include ./$(DEPDIR)/libsnap_a-diagnostic.Po
include ./$(DEPDIR)/libsnap_a-direct_product.Po
include ./$(DEPDIR)/libsnap_a-double_cover.Po
include ./$(DEPDIR)/libsnap_a-drilling.Po
include ./$(DEPDIR)/libsnap_a-dt2snap.Po
include ./$(DEPDIR)/libsnap_a-dual_curves.Po
include ./$(DEPDIR)/libsnap_a-edge_classes.Po
include ./$(DEPDIR)/libsnap_a-elements_generate_group.Po
include ./$(DEPDIR)/libsnap_a-filling.Po
include ./$(DEPDIR)/libsnap_a-find_cusp.Po
include ./$(DEPDIR)/libsnap_a-finite_vertices.Po
include ./$(DEPDIR)/libsnap_a-fundamental_group.Po
include ./$(DEPDIR)/libsnap_a-gcd.Po
include ./$(DEPDIR)/libsnap_a-gluing_equations.Po
include ./$(DEPDIR)/libsnap_a-holonomy.Po
include ./$(DEPDIR)/libsnap_a-homology.Po
include ./$(DEPDIR)/libsnap_a-hyperbolic_structure.Po
include ./$(DEPDIR)/libsnap_a-identify_solution_type.Po
include ./$(DEPDIR)/libsnap_a-index_to_hue.Po
include ./$(DEPDIR)/libsnap_a-interface.Po
include ./$(DEPDIR)/libsnap_a-intersection_numbers.Po
include ./$(DEPDIR)/libsnap_a-isometry.Po
include ./$(DEPDIR)/libsnap_a-isometry_closed.Po
include ./$(DEPDIR)/libsnap_a-isometry_cusped.Po
include ./$(DEPDIR)/libsnap_a-length_spectrum.Po
include ./$(DEPDIR)/libsnap_a-link_complement.Po
include ./$(DEPDIR)/libsnap_a-link_diagram.Po
include ./$(DEPDIR)/libsnap_a-matrix_conversion.Po
include ./$(DEPDIR)/libsnap_a-matrix_generators.Po
include ./$(DEPDIR)/libsnap_a-my_malloc.Po
include ./$(DEPDIR)/libsnap_a-normal_surface_construction.Po
include ./$(DEPDIR)/libsnap_a-normal_surface_recognition.Po
include ./$(DEPDIR)/libsnap_a-normal_surface_splitting.Po
include ./$(DEPDIR)/libsnap_a-o31_matrices.Po
include ./$(DEPDIR)/libsnap_a-orient.Po
include ./$(DEPDIR)/libsnap_a-peripheral_curves.Po
include ./$(DEPDIR)/libsnap_a-polyhedral_group.Po
include ./$(DEPDIR)/libsnap_a-positioned_tet.Po
include ./$(DEPDIR)/libsnap_a-precision.Po
include ./$(DEPDIR)/libsnap_a-punctured_torus_bundles.Po
include ./$(DEPDIR)/libsnap_a-quotients.Po
include ./$(DEPDIR)/libsnap_a-rehydrate_census.Po
include ./$(DEPDIR)/libsnap_a-representations.Po
include ./$(DEPDIR)/libsnap_a-shingling.Po
include ./$(DEPDIR)/libsnap_a-shortest_cusp_basis.Po
include ./$(DEPDIR)/libsnap_a-simplify_triangulation.Po
include ./$(DEPDIR)/libsnap_a-sl2c_matrices.Po
include ./$(DEPDIR)/libsnap_a-solve_equations.Po
include ./$(DEPDIR)/libsnap_a-subdivide.Po
include ./$(DEPDIR)/libsnap_a-symmetric_group.Po
include ./$(DEPDIR)/libsnap_a-symmetry_group.Po
include ./$(DEPDIR)/libsnap_a-symmetry_group_closed.Po
include ./$(DEPDIR)/libsnap_a-symmetry_group_cusped.Po
include ./$(DEPDIR)/libsnap_a-symmetry_group_info.Po
include ./$(DEPDIR)/libsnap_a-tables.Po
include ./$(DEPDIR)/libsnap_a-terse_triangulation.Po
include ./$(DEPDIR)/libsnap_a-tersest_triangulation.Po
include ./$(DEPDIR)/libsnap_a-tet_shapes.Po
include ./$(DEPDIR)/libsnap_a-tidy_peripheral_curves.Po
include ./$(DEPDIR)/libsnap_a-transcendentals.Po
include ./$(DEPDIR)/libsnap_a-triangulations.Po
include ./$(DEPDIR)/libsnap_a-two_bridge.Po
include ./$(DEPDIR)/libsnap_a-unix_io.Po
include ./$(DEPDIR)/libsnap_a-update_shapes.Po
include ./$(DEPDIR)/libsnap_a-volume.Po

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libpsnap_a-Dehn_coefficients.o: Dehn_coefficients.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Dehn_coefficients.o -MD -MP -MF $(DEPDIR)/libpsnap_a-Dehn_coefficients.Tpo -c -o libpsnap_a-Dehn_coefficients.o `test -f 'Dehn_coefficients.cc' || echo '$(srcdir)/'`Dehn_coefficients.cc
	mv -f $(DEPDIR)/libpsnap_a-Dehn_coefficients.Tpo $(DEPDIR)/libpsnap_a-Dehn_coefficients.Po
#	source='Dehn_coefficients.cc' object='libpsnap_a-Dehn_coefficients.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Dehn_coefficients.o `test -f 'Dehn_coefficients.cc' || echo '$(srcdir)/'`Dehn_coefficients.cc

libpsnap_a-Dehn_coefficients.obj: Dehn_coefficients.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Dehn_coefficients.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-Dehn_coefficients.Tpo -c -o libpsnap_a-Dehn_coefficients.obj `if test -f 'Dehn_coefficients.cc'; then $(CYGPATH_W) 'Dehn_coefficients.cc'; else $(CYGPATH_W) '$(srcdir)/Dehn_coefficients.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-Dehn_coefficients.Tpo $(DEPDIR)/libpsnap_a-Dehn_coefficients.Po
#	source='Dehn_coefficients.cc' object='libpsnap_a-Dehn_coefficients.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Dehn_coefficients.obj `if test -f 'Dehn_coefficients.cc'; then $(CYGPATH_W) 'Dehn_coefficients.cc'; else $(CYGPATH_W) '$(srcdir)/Dehn_coefficients.cc'; fi`

libpsnap_a-Dirichlet.o: Dirichlet.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Dirichlet.o -MD -MP -MF $(DEPDIR)/libpsnap_a-Dirichlet.Tpo -c -o libpsnap_a-Dirichlet.o `test -f 'Dirichlet.cc' || echo '$(srcdir)/'`Dirichlet.cc
	mv -f $(DEPDIR)/libpsnap_a-Dirichlet.Tpo $(DEPDIR)/libpsnap_a-Dirichlet.Po
#	source='Dirichlet.cc' object='libpsnap_a-Dirichlet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Dirichlet.o `test -f 'Dirichlet.cc' || echo '$(srcdir)/'`Dirichlet.cc

libpsnap_a-Dirichlet.obj: Dirichlet.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Dirichlet.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-Dirichlet.Tpo -c -o libpsnap_a-Dirichlet.obj `if test -f 'Dirichlet.cc'; then $(CYGPATH_W) 'Dirichlet.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-Dirichlet.Tpo $(DEPDIR)/libpsnap_a-Dirichlet.Po
#	source='Dirichlet.cc' object='libpsnap_a-Dirichlet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Dirichlet.obj `if test -f 'Dirichlet.cc'; then $(CYGPATH_W) 'Dirichlet.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet.cc'; fi`

libpsnap_a-Dirichlet_basepoint.o: Dirichlet_basepoint.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Dirichlet_basepoint.o -MD -MP -MF $(DEPDIR)/libpsnap_a-Dirichlet_basepoint.Tpo -c -o libpsnap_a-Dirichlet_basepoint.o `test -f 'Dirichlet_basepoint.cc' || echo '$(srcdir)/'`Dirichlet_basepoint.cc
	mv -f $(DEPDIR)/libpsnap_a-Dirichlet_basepoint.Tpo $(DEPDIR)/libpsnap_a-Dirichlet_basepoint.Po
#	source='Dirichlet_basepoint.cc' object='libpsnap_a-Dirichlet_basepoint.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Dirichlet_basepoint.o `test -f 'Dirichlet_basepoint.cc' || echo '$(srcdir)/'`Dirichlet_basepoint.cc

libpsnap_a-Dirichlet_basepoint.obj: Dirichlet_basepoint.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Dirichlet_basepoint.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-Dirichlet_basepoint.Tpo -c -o libpsnap_a-Dirichlet_basepoint.obj `if test -f 'Dirichlet_basepoint.cc'; then $(CYGPATH_W) 'Dirichlet_basepoint.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet_basepoint.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-Dirichlet_basepoint.Tpo $(DEPDIR)/libpsnap_a-Dirichlet_basepoint.Po
#	source='Dirichlet_basepoint.cc' object='libpsnap_a-Dirichlet_basepoint.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Dirichlet_basepoint.obj `if test -f 'Dirichlet_basepoint.cc'; then $(CYGPATH_W) 'Dirichlet_basepoint.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet_basepoint.cc'; fi`

libpsnap_a-Dirichlet_construction.o: Dirichlet_construction.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Dirichlet_construction.o -MD -MP -MF $(DEPDIR)/libpsnap_a-Dirichlet_construction.Tpo -c -o libpsnap_a-Dirichlet_construction.o `test -f 'Dirichlet_construction.cc' || echo '$(srcdir)/'`Dirichlet_construction.cc
	mv -f $(DEPDIR)/libpsnap_a-Dirichlet_construction.Tpo $(DEPDIR)/libpsnap_a-Dirichlet_construction.Po
#	source='Dirichlet_construction.cc' object='libpsnap_a-Dirichlet_construction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Dirichlet_construction.o `test -f 'Dirichlet_construction.cc' || echo '$(srcdir)/'`Dirichlet_construction.cc

libpsnap_a-Dirichlet_construction.obj: Dirichlet_construction.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Dirichlet_construction.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-Dirichlet_construction.Tpo -c -o libpsnap_a-Dirichlet_construction.obj `if test -f 'Dirichlet_construction.cc'; then $(CYGPATH_W) 'Dirichlet_construction.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet_construction.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-Dirichlet_construction.Tpo $(DEPDIR)/libpsnap_a-Dirichlet_construction.Po
#	source='Dirichlet_construction.cc' object='libpsnap_a-Dirichlet_construction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Dirichlet_construction.obj `if test -f 'Dirichlet_construction.cc'; then $(CYGPATH_W) 'Dirichlet_construction.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet_construction.cc'; fi`

libpsnap_a-Dirichlet_extras.o: Dirichlet_extras.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Dirichlet_extras.o -MD -MP -MF $(DEPDIR)/libpsnap_a-Dirichlet_extras.Tpo -c -o libpsnap_a-Dirichlet_extras.o `test -f 'Dirichlet_extras.cc' || echo '$(srcdir)/'`Dirichlet_extras.cc
	mv -f $(DEPDIR)/libpsnap_a-Dirichlet_extras.Tpo $(DEPDIR)/libpsnap_a-Dirichlet_extras.Po
#	source='Dirichlet_extras.cc' object='libpsnap_a-Dirichlet_extras.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Dirichlet_extras.o `test -f 'Dirichlet_extras.cc' || echo '$(srcdir)/'`Dirichlet_extras.cc

libpsnap_a-Dirichlet_extras.obj: Dirichlet_extras.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Dirichlet_extras.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-Dirichlet_extras.Tpo -c -o libpsnap_a-Dirichlet_extras.obj `if test -f 'Dirichlet_extras.cc'; then $(CYGPATH_W) 'Dirichlet_extras.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet_extras.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-Dirichlet_extras.Tpo $(DEPDIR)/libpsnap_a-Dirichlet_extras.Po
#	source='Dirichlet_extras.cc' object='libpsnap_a-Dirichlet_extras.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Dirichlet_extras.obj `if test -f 'Dirichlet_extras.cc'; then $(CYGPATH_W) 'Dirichlet_extras.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet_extras.cc'; fi`

libpsnap_a-Dirichlet_precision.o: Dirichlet_precision.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Dirichlet_precision.o -MD -MP -MF $(DEPDIR)/libpsnap_a-Dirichlet_precision.Tpo -c -o libpsnap_a-Dirichlet_precision.o `test -f 'Dirichlet_precision.cc' || echo '$(srcdir)/'`Dirichlet_precision.cc
	mv -f $(DEPDIR)/libpsnap_a-Dirichlet_precision.Tpo $(DEPDIR)/libpsnap_a-Dirichlet_precision.Po
#	source='Dirichlet_precision.cc' object='libpsnap_a-Dirichlet_precision.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Dirichlet_precision.o `test -f 'Dirichlet_precision.cc' || echo '$(srcdir)/'`Dirichlet_precision.cc

libpsnap_a-Dirichlet_precision.obj: Dirichlet_precision.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Dirichlet_precision.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-Dirichlet_precision.Tpo -c -o libpsnap_a-Dirichlet_precision.obj `if test -f 'Dirichlet_precision.cc'; then $(CYGPATH_W) 'Dirichlet_precision.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet_precision.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-Dirichlet_precision.Tpo $(DEPDIR)/libpsnap_a-Dirichlet_precision.Po
#	source='Dirichlet_precision.cc' object='libpsnap_a-Dirichlet_precision.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Dirichlet_precision.obj `if test -f 'Dirichlet_precision.cc'; then $(CYGPATH_W) 'Dirichlet_precision.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet_precision.cc'; fi`

libpsnap_a-FGWord.o: FGWord.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-FGWord.o -MD -MP -MF $(DEPDIR)/libpsnap_a-FGWord.Tpo -c -o libpsnap_a-FGWord.o `test -f 'FGWord.cc' || echo '$(srcdir)/'`FGWord.cc
	mv -f $(DEPDIR)/libpsnap_a-FGWord.Tpo $(DEPDIR)/libpsnap_a-FGWord.Po
#	source='FGWord.cc' object='libpsnap_a-FGWord.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-FGWord.o `test -f 'FGWord.cc' || echo '$(srcdir)/'`FGWord.cc

libpsnap_a-FGWord.obj: FGWord.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-FGWord.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-FGWord.Tpo -c -o libpsnap_a-FGWord.obj `if test -f 'FGWord.cc'; then $(CYGPATH_W) 'FGWord.cc'; else $(CYGPATH_W) '$(srcdir)/FGWord.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-FGWord.Tpo $(DEPDIR)/libpsnap_a-FGWord.Po
#	source='FGWord.cc' object='libpsnap_a-FGWord.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-FGWord.obj `if test -f 'FGWord.cc'; then $(CYGPATH_W) 'FGWord.cc'; else $(CYGPATH_W) '$(srcdir)/FGWord.cc'; fi`

libpsnap_a-Moebius_transformations.o: Moebius_transformations.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Moebius_transformations.o -MD -MP -MF $(DEPDIR)/libpsnap_a-Moebius_transformations.Tpo -c -o libpsnap_a-Moebius_transformations.o `test -f 'Moebius_transformations.cc' || echo '$(srcdir)/'`Moebius_transformations.cc
	mv -f $(DEPDIR)/libpsnap_a-Moebius_transformations.Tpo $(DEPDIR)/libpsnap_a-Moebius_transformations.Po
#	source='Moebius_transformations.cc' object='libpsnap_a-Moebius_transformations.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Moebius_transformations.o `test -f 'Moebius_transformations.cc' || echo '$(srcdir)/'`Moebius_transformations.cc

libpsnap_a-Moebius_transformations.obj: Moebius_transformations.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Moebius_transformations.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-Moebius_transformations.Tpo -c -o libpsnap_a-Moebius_transformations.obj `if test -f 'Moebius_transformations.cc'; then $(CYGPATH_W) 'Moebius_transformations.cc'; else $(CYGPATH_W) '$(srcdir)/Moebius_transformations.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-Moebius_transformations.Tpo $(DEPDIR)/libpsnap_a-Moebius_transformations.Po
#	source='Moebius_transformations.cc' object='libpsnap_a-Moebius_transformations.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Moebius_transformations.obj `if test -f 'Moebius_transformations.cc'; then $(CYGPATH_W) 'Moebius_transformations.cc'; else $(CYGPATH_W) '$(srcdir)/Moebius_transformations.cc'; fi`

libpsnap_a-O31.o: O31.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-O31.o -MD -MP -MF $(DEPDIR)/libpsnap_a-O31.Tpo -c -o libpsnap_a-O31.o `test -f 'O31.cc' || echo '$(srcdir)/'`O31.cc
	mv -f $(DEPDIR)/libpsnap_a-O31.Tpo $(DEPDIR)/libpsnap_a-O31.Po
#	source='O31.cc' object='libpsnap_a-O31.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-O31.o `test -f 'O31.cc' || echo '$(srcdir)/'`O31.cc

libpsnap_a-O31.obj: O31.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-O31.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-O31.Tpo -c -o libpsnap_a-O31.obj `if test -f 'O31.cc'; then $(CYGPATH_W) 'O31.cc'; else $(CYGPATH_W) '$(srcdir)/O31.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-O31.Tpo $(DEPDIR)/libpsnap_a-O31.Po
#	source='O31.cc' object='libpsnap_a-O31.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-O31.obj `if test -f 'O31.cc'; then $(CYGPATH_W) 'O31.cc'; else $(CYGPATH_W) '$(srcdir)/O31.cc'; fi`

libpsnap_a-abelian_group.o: abelian_group.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-abelian_group.o -MD -MP -MF $(DEPDIR)/libpsnap_a-abelian_group.Tpo -c -o libpsnap_a-abelian_group.o `test -f 'abelian_group.cc' || echo '$(srcdir)/'`abelian_group.cc
	mv -f $(DEPDIR)/libpsnap_a-abelian_group.Tpo $(DEPDIR)/libpsnap_a-abelian_group.Po
#	source='abelian_group.cc' object='libpsnap_a-abelian_group.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-abelian_group.o `test -f 'abelian_group.cc' || echo '$(srcdir)/'`abelian_group.cc

libpsnap_a-abelian_group.obj: abelian_group.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-abelian_group.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-abelian_group.Tpo -c -o libpsnap_a-abelian_group.obj `if test -f 'abelian_group.cc'; then $(CYGPATH_W) 'abelian_group.cc'; else $(CYGPATH_W) '$(srcdir)/abelian_group.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-abelian_group.Tpo $(DEPDIR)/libpsnap_a-abelian_group.Po
#	source='abelian_group.cc' object='libpsnap_a-abelian_group.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-abelian_group.obj `if test -f 'abelian_group.cc'; then $(CYGPATH_W) 'abelian_group.cc'; else $(CYGPATH_W) '$(srcdir)/abelian_group.cc'; fi`

libpsnap_a-barycentric_subdivision.o: barycentric_subdivision.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-barycentric_subdivision.o -MD -MP -MF $(DEPDIR)/libpsnap_a-barycentric_subdivision.Tpo -c -o libpsnap_a-barycentric_subdivision.o `test -f 'barycentric_subdivision.cc' || echo '$(srcdir)/'`barycentric_subdivision.cc
	mv -f $(DEPDIR)/libpsnap_a-barycentric_subdivision.Tpo $(DEPDIR)/libpsnap_a-barycentric_subdivision.Po
#	source='barycentric_subdivision.cc' object='libpsnap_a-barycentric_subdivision.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-barycentric_subdivision.o `test -f 'barycentric_subdivision.cc' || echo '$(srcdir)/'`barycentric_subdivision.cc

libpsnap_a-barycentric_subdivision.obj: barycentric_subdivision.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-barycentric_subdivision.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-barycentric_subdivision.Tpo -c -o libpsnap_a-barycentric_subdivision.obj `if test -f 'barycentric_subdivision.cc'; then $(CYGPATH_W) 'barycentric_subdivision.cc'; else $(CYGPATH_W) '$(srcdir)/barycentric_subdivision.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-barycentric_subdivision.Tpo $(DEPDIR)/libpsnap_a-barycentric_subdivision.Po
#	source='barycentric_subdivision.cc' object='libpsnap_a-barycentric_subdivision.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-barycentric_subdivision.obj `if test -f 'barycentric_subdivision.cc'; then $(CYGPATH_W) 'barycentric_subdivision.cc'; else $(CYGPATH_W) '$(srcdir)/barycentric_subdivision.cc'; fi`

libpsnap_a-canonize.o: canonize.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-canonize.o -MD -MP -MF $(DEPDIR)/libpsnap_a-canonize.Tpo -c -o libpsnap_a-canonize.o `test -f 'canonize.cc' || echo '$(srcdir)/'`canonize.cc
	mv -f $(DEPDIR)/libpsnap_a-canonize.Tpo $(DEPDIR)/libpsnap_a-canonize.Po
#	source='canonize.cc' object='libpsnap_a-canonize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-canonize.o `test -f 'canonize.cc' || echo '$(srcdir)/'`canonize.cc

libpsnap_a-canonize.obj: canonize.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-canonize.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-canonize.Tpo -c -o libpsnap_a-canonize.obj `if test -f 'canonize.cc'; then $(CYGPATH_W) 'canonize.cc'; else $(CYGPATH_W) '$(srcdir)/canonize.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-canonize.Tpo $(DEPDIR)/libpsnap_a-canonize.Po
#	source='canonize.cc' object='libpsnap_a-canonize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-canonize.obj `if test -f 'canonize.cc'; then $(CYGPATH_W) 'canonize.cc'; else $(CYGPATH_W) '$(srcdir)/canonize.cc'; fi`

libpsnap_a-canonize_part_1.o: canonize_part_1.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-canonize_part_1.o -MD -MP -MF $(DEPDIR)/libpsnap_a-canonize_part_1.Tpo -c -o libpsnap_a-canonize_part_1.o `test -f 'canonize_part_1.cc' || echo '$(srcdir)/'`canonize_part_1.cc
	mv -f $(DEPDIR)/libpsnap_a-canonize_part_1.Tpo $(DEPDIR)/libpsnap_a-canonize_part_1.Po
#	source='canonize_part_1.cc' object='libpsnap_a-canonize_part_1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-canonize_part_1.o `test -f 'canonize_part_1.cc' || echo '$(srcdir)/'`canonize_part_1.cc

libpsnap_a-canonize_part_1.obj: canonize_part_1.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-canonize_part_1.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-canonize_part_1.Tpo -c -o libpsnap_a-canonize_part_1.obj `if test -f 'canonize_part_1.cc'; then $(CYGPATH_W) 'canonize_part_1.cc'; else $(CYGPATH_W) '$(srcdir)/canonize_part_1.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-canonize_part_1.Tpo $(DEPDIR)/libpsnap_a-canonize_part_1.Po
#	source='canonize_part_1.cc' object='libpsnap_a-canonize_part_1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-canonize_part_1.obj `if test -f 'canonize_part_1.cc'; then $(CYGPATH_W) 'canonize_part_1.cc'; else $(CYGPATH_W) '$(srcdir)/canonize_part_1.cc'; fi`

libpsnap_a-canonize_part_2.o: canonize_part_2.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-canonize_part_2.o -MD -MP -MF $(DEPDIR)/libpsnap_a-canonize_part_2.Tpo -c -o libpsnap_a-canonize_part_2.o `test -f 'canonize_part_2.cc' || echo '$(srcdir)/'`canonize_part_2.cc
	mv -f $(DEPDIR)/libpsnap_a-canonize_part_2.Tpo $(DEPDIR)/libpsnap_a-canonize_part_2.Po
#	source='canonize_part_2.cc' object='libpsnap_a-canonize_part_2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-canonize_part_2.o `test -f 'canonize_part_2.cc' || echo '$(srcdir)/'`canonize_part_2.cc

libpsnap_a-canonize_part_2.obj: canonize_part_2.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-canonize_part_2.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-canonize_part_2.Tpo -c -o libpsnap_a-canonize_part_2.obj `if test -f 'canonize_part_2.cc'; then $(CYGPATH_W) 'canonize_part_2.cc'; else $(CYGPATH_W) '$(srcdir)/canonize_part_2.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-canonize_part_2.Tpo $(DEPDIR)/libpsnap_a-canonize_part_2.Po
#	source='canonize_part_2.cc' object='libpsnap_a-canonize_part_2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-canonize_part_2.obj `if test -f 'canonize_part_2.cc'; then $(CYGPATH_W) 'canonize_part_2.cc'; else $(CYGPATH_W) '$(srcdir)/canonize_part_2.cc'; fi`

libpsnap_a-canonize_result.o: canonize_result.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-canonize_result.o -MD -MP -MF $(DEPDIR)/libpsnap_a-canonize_result.Tpo -c -o libpsnap_a-canonize_result.o `test -f 'canonize_result.cc' || echo '$(srcdir)/'`canonize_result.cc
	mv -f $(DEPDIR)/libpsnap_a-canonize_result.Tpo $(DEPDIR)/libpsnap_a-canonize_result.Po
#	source='canonize_result.cc' object='libpsnap_a-canonize_result.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-canonize_result.o `test -f 'canonize_result.cc' || echo '$(srcdir)/'`canonize_result.cc

libpsnap_a-canonize_result.obj: canonize_result.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-canonize_result.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-canonize_result.Tpo -c -o libpsnap_a-canonize_result.obj `if test -f 'canonize_result.cc'; then $(CYGPATH_W) 'canonize_result.cc'; else $(CYGPATH_W) '$(srcdir)/canonize_result.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-canonize_result.Tpo $(DEPDIR)/libpsnap_a-canonize_result.Po
#	source='canonize_result.cc' object='libpsnap_a-canonize_result.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-canonize_result.obj `if test -f 'canonize_result.cc'; then $(CYGPATH_W) 'canonize_result.cc'; else $(CYGPATH_W) '$(srcdir)/canonize_result.cc'; fi`

libpsnap_a-change_peripheral_curves.o: change_peripheral_curves.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-change_peripheral_curves.o -MD -MP -MF $(DEPDIR)/libpsnap_a-change_peripheral_curves.Tpo -c -o libpsnap_a-change_peripheral_curves.o `test -f 'change_peripheral_curves.cc' || echo '$(srcdir)/'`change_peripheral_curves.cc
	mv -f $(DEPDIR)/libpsnap_a-change_peripheral_curves.Tpo $(DEPDIR)/libpsnap_a-change_peripheral_curves.Po
#	source='change_peripheral_curves.cc' object='libpsnap_a-change_peripheral_curves.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-change_peripheral_curves.o `test -f 'change_peripheral_curves.cc' || echo '$(srcdir)/'`change_peripheral_curves.cc

libpsnap_a-change_peripheral_curves.obj: change_peripheral_curves.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-change_peripheral_curves.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-change_peripheral_curves.Tpo -c -o libpsnap_a-change_peripheral_curves.obj `if test -f 'change_peripheral_curves.cc'; then $(CYGPATH_W) 'change_peripheral_curves.cc'; else $(CYGPATH_W) '$(srcdir)/change_peripheral_curves.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-change_peripheral_curves.Tpo $(DEPDIR)/libpsnap_a-change_peripheral_curves.Po
#	source='change_peripheral_curves.cc' object='libpsnap_a-change_peripheral_curves.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-change_peripheral_curves.obj `if test -f 'change_peripheral_curves.cc'; then $(CYGPATH_W) 'change_peripheral_curves.cc'; else $(CYGPATH_W) '$(srcdir)/change_peripheral_curves.cc'; fi`

libpsnap_a-chern_simons.o: chern_simons.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-chern_simons.o -MD -MP -MF $(DEPDIR)/libpsnap_a-chern_simons.Tpo -c -o libpsnap_a-chern_simons.o `test -f 'chern_simons.cc' || echo '$(srcdir)/'`chern_simons.cc
	mv -f $(DEPDIR)/libpsnap_a-chern_simons.Tpo $(DEPDIR)/libpsnap_a-chern_simons.Po
#	source='chern_simons.cc' object='libpsnap_a-chern_simons.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-chern_simons.o `test -f 'chern_simons.cc' || echo '$(srcdir)/'`chern_simons.cc

libpsnap_a-chern_simons.obj: chern_simons.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-chern_simons.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-chern_simons.Tpo -c -o libpsnap_a-chern_simons.obj `if test -f 'chern_simons.cc'; then $(CYGPATH_W) 'chern_simons.cc'; else $(CYGPATH_W) '$(srcdir)/chern_simons.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-chern_simons.Tpo $(DEPDIR)/libpsnap_a-chern_simons.Po
#	source='chern_simons.cc' object='libpsnap_a-chern_simons.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-chern_simons.obj `if test -f 'chern_simons.cc'; then $(CYGPATH_W) 'chern_simons.cc'; else $(CYGPATH_W) '$(srcdir)/chern_simons.cc'; fi`

libpsnap_a-choose_generators.o: choose_generators.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-choose_generators.o -MD -MP -MF $(DEPDIR)/libpsnap_a-choose_generators.Tpo -c -o libpsnap_a-choose_generators.o `test -f 'choose_generators.cc' || echo '$(srcdir)/'`choose_generators.cc
	mv -f $(DEPDIR)/libpsnap_a-choose_generators.Tpo $(DEPDIR)/libpsnap_a-choose_generators.Po
#	source='choose_generators.cc' object='libpsnap_a-choose_generators.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-choose_generators.o `test -f 'choose_generators.cc' || echo '$(srcdir)/'`choose_generators.cc

libpsnap_a-choose_generators.obj: choose_generators.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-choose_generators.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-choose_generators.Tpo -c -o libpsnap_a-choose_generators.obj `if test -f 'choose_generators.cc'; then $(CYGPATH_W) 'choose_generators.cc'; else $(CYGPATH_W) '$(srcdir)/choose_generators.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-choose_generators.Tpo $(DEPDIR)/libpsnap_a-choose_generators.Po
#	source='choose_generators.cc' object='libpsnap_a-choose_generators.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-choose_generators.obj `if test -f 'choose_generators.cc'; then $(CYGPATH_W) 'choose_generators.cc'; else $(CYGPATH_W) '$(srcdir)/choose_generators.cc'; fi`

libpsnap_a-close_cusps.o: close_cusps.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-close_cusps.o -MD -MP -MF $(DEPDIR)/libpsnap_a-close_cusps.Tpo -c -o libpsnap_a-close_cusps.o `test -f 'close_cusps.cc' || echo '$(srcdir)/'`close_cusps.cc
	mv -f $(DEPDIR)/libpsnap_a-close_cusps.Tpo $(DEPDIR)/libpsnap_a-close_cusps.Po
#	source='close_cusps.cc' object='libpsnap_a-close_cusps.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-close_cusps.o `test -f 'close_cusps.cc' || echo '$(srcdir)/'`close_cusps.cc

libpsnap_a-close_cusps.obj: close_cusps.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-close_cusps.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-close_cusps.Tpo -c -o libpsnap_a-close_cusps.obj `if test -f 'close_cusps.cc'; then $(CYGPATH_W) 'close_cusps.cc'; else $(CYGPATH_W) '$(srcdir)/close_cusps.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-close_cusps.Tpo $(DEPDIR)/libpsnap_a-close_cusps.Po
#	source='close_cusps.cc' object='libpsnap_a-close_cusps.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-close_cusps.obj `if test -f 'close_cusps.cc'; then $(CYGPATH_W) 'close_cusps.cc'; else $(CYGPATH_W) '$(srcdir)/close_cusps.cc'; fi`

libpsnap_a-complex.o: complex.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-complex.o -MD -MP -MF $(DEPDIR)/libpsnap_a-complex.Tpo -c -o libpsnap_a-complex.o `test -f 'complex.cc' || echo '$(srcdir)/'`complex.cc
	mv -f $(DEPDIR)/libpsnap_a-complex.Tpo $(DEPDIR)/libpsnap_a-complex.Po
#	source='complex.cc' object='libpsnap_a-complex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-complex.o `test -f 'complex.cc' || echo '$(srcdir)/'`complex.cc

libpsnap_a-complex.obj: complex.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-complex.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-complex.Tpo -c -o libpsnap_a-complex.obj `if test -f 'complex.cc'; then $(CYGPATH_W) 'complex.cc'; else $(CYGPATH_W) '$(srcdir)/complex.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-complex.Tpo $(DEPDIR)/libpsnap_a-complex.Po
#	source='complex.cc' object='libpsnap_a-complex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-complex.obj `if test -f 'complex.cc'; then $(CYGPATH_W) 'complex.cc'; else $(CYGPATH_W) '$(srcdir)/complex.cc'; fi`

libpsnap_a-complex_length.o: complex_length.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-complex_length.o -MD -MP -MF $(DEPDIR)/libpsnap_a-complex_length.Tpo -c -o libpsnap_a-complex_length.o `test -f 'complex_length.cc' || echo '$(srcdir)/'`complex_length.cc
	mv -f $(DEPDIR)/libpsnap_a-complex_length.Tpo $(DEPDIR)/libpsnap_a-complex_length.Po
#	source='complex_length.cc' object='libpsnap_a-complex_length.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-complex_length.o `test -f 'complex_length.cc' || echo '$(srcdir)/'`complex_length.cc

libpsnap_a-complex_length.obj: complex_length.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-complex_length.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-complex_length.Tpo -c -o libpsnap_a-complex_length.obj `if test -f 'complex_length.cc'; then $(CYGPATH_W) 'complex_length.cc'; else $(CYGPATH_W) '$(srcdir)/complex_length.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-complex_length.Tpo $(DEPDIR)/libpsnap_a-complex_length.Po
#	source='complex_length.cc' object='libpsnap_a-complex_length.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-complex_length.obj `if test -f 'complex_length.cc'; then $(CYGPATH_W) 'complex_length.cc'; else $(CYGPATH_W) '$(srcdir)/complex_length.cc'; fi`

libpsnap_a-continued_fractions.o: continued_fractions.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-continued_fractions.o -MD -MP -MF $(DEPDIR)/libpsnap_a-continued_fractions.Tpo -c -o libpsnap_a-continued_fractions.o `test -f 'continued_fractions.cc' || echo '$(srcdir)/'`continued_fractions.cc
	mv -f $(DEPDIR)/libpsnap_a-continued_fractions.Tpo $(DEPDIR)/libpsnap_a-continued_fractions.Po
#	source='continued_fractions.cc' object='libpsnap_a-continued_fractions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-continued_fractions.o `test -f 'continued_fractions.cc' || echo '$(srcdir)/'`continued_fractions.cc

libpsnap_a-continued_fractions.obj: continued_fractions.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-continued_fractions.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-continued_fractions.Tpo -c -o libpsnap_a-continued_fractions.obj `if test -f 'continued_fractions.cc'; then $(CYGPATH_W) 'continued_fractions.cc'; else $(CYGPATH_W) '$(srcdir)/continued_fractions.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-continued_fractions.Tpo $(DEPDIR)/libpsnap_a-continued_fractions.Po
#	source='continued_fractions.cc' object='libpsnap_a-continued_fractions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-continued_fractions.obj `if test -f 'continued_fractions.cc'; then $(CYGPATH_W) 'continued_fractions.cc'; else $(CYGPATH_W) '$(srcdir)/continued_fractions.cc'; fi`

libpsnap_a-core_geodesics.o: core_geodesics.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-core_geodesics.o -MD -MP -MF $(DEPDIR)/libpsnap_a-core_geodesics.Tpo -c -o libpsnap_a-core_geodesics.o `test -f 'core_geodesics.cc' || echo '$(srcdir)/'`core_geodesics.cc
	mv -f $(DEPDIR)/libpsnap_a-core_geodesics.Tpo $(DEPDIR)/libpsnap_a-core_geodesics.Po
#	source='core_geodesics.cc' object='libpsnap_a-core_geodesics.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-core_geodesics.o `test -f 'core_geodesics.cc' || echo '$(srcdir)/'`core_geodesics.cc

libpsnap_a-core_geodesics.obj: core_geodesics.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-core_geodesics.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-core_geodesics.Tpo -c -o libpsnap_a-core_geodesics.obj `if test -f 'core_geodesics.cc'; then $(CYGPATH_W) 'core_geodesics.cc'; else $(CYGPATH_W) '$(srcdir)/core_geodesics.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-core_geodesics.Tpo $(DEPDIR)/libpsnap_a-core_geodesics.Po
#	source='core_geodesics.cc' object='libpsnap_a-core_geodesics.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-core_geodesics.obj `if test -f 'core_geodesics.cc'; then $(CYGPATH_W) 'core_geodesics.cc'; else $(CYGPATH_W) '$(srcdir)/core_geodesics.cc'; fi`

libpsnap_a-cover.o: cover.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-cover.o -MD -MP -MF $(DEPDIR)/libpsnap_a-cover.Tpo -c -o libpsnap_a-cover.o `test -f 'cover.cc' || echo '$(srcdir)/'`cover.cc
	mv -f $(DEPDIR)/libpsnap_a-cover.Tpo $(DEPDIR)/libpsnap_a-cover.Po
#	source='cover.cc' object='libpsnap_a-cover.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-cover.o `test -f 'cover.cc' || echo '$(srcdir)/'`cover.cc

libpsnap_a-cover.obj: cover.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-cover.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-cover.Tpo -c -o libpsnap_a-cover.obj `if test -f 'cover.cc'; then $(CYGPATH_W) 'cover.cc'; else $(CYGPATH_W) '$(srcdir)/cover.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-cover.Tpo $(DEPDIR)/libpsnap_a-cover.Po
#	source='cover.cc' object='libpsnap_a-cover.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-cover.obj `if test -f 'cover.cc'; then $(CYGPATH_W) 'cover.cc'; else $(CYGPATH_W) '$(srcdir)/cover.cc'; fi`

libpsnap_a-current_curve_basis.o: current_curve_basis.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-current_curve_basis.o -MD -MP -MF $(DEPDIR)/libpsnap_a-current_curve_basis.Tpo -c -o libpsnap_a-current_curve_basis.o `test -f 'current_curve_basis.cc' || echo '$(srcdir)/'`current_curve_basis.cc
	mv -f $(DEPDIR)/libpsnap_a-current_curve_basis.Tpo $(DEPDIR)/libpsnap_a-current_curve_basis.Po
#	source='current_curve_basis.cc' object='libpsnap_a-current_curve_basis.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-current_curve_basis.o `test -f 'current_curve_basis.cc' || echo '$(srcdir)/'`current_curve_basis.cc

libpsnap_a-current_curve_basis.obj: current_curve_basis.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-current_curve_basis.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-current_curve_basis.Tpo -c -o libpsnap_a-current_curve_basis.obj `if test -f 'current_curve_basis.cc'; then $(CYGPATH_W) 'current_curve_basis.cc'; else $(CYGPATH_W) '$(srcdir)/current_curve_basis.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-current_curve_basis.Tpo $(DEPDIR)/libpsnap_a-current_curve_basis.Po
#	source='current_curve_basis.cc' object='libpsnap_a-current_curve_basis.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-current_curve_basis.obj `if test -f 'current_curve_basis.cc'; then $(CYGPATH_W) 'current_curve_basis.cc'; else $(CYGPATH_W) '$(srcdir)/current_curve_basis.cc'; fi`

libpsnap_a-cusp_cross_sections.o: cusp_cross_sections.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-cusp_cross_sections.o -MD -MP -MF $(DEPDIR)/libpsnap_a-cusp_cross_sections.Tpo -c -o libpsnap_a-cusp_cross_sections.o `test -f 'cusp_cross_sections.cc' || echo '$(srcdir)/'`cusp_cross_sections.cc
	mv -f $(DEPDIR)/libpsnap_a-cusp_cross_sections.Tpo $(DEPDIR)/libpsnap_a-cusp_cross_sections.Po
#	source='cusp_cross_sections.cc' object='libpsnap_a-cusp_cross_sections.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-cusp_cross_sections.o `test -f 'cusp_cross_sections.cc' || echo '$(srcdir)/'`cusp_cross_sections.cc

libpsnap_a-cusp_cross_sections.obj: cusp_cross_sections.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-cusp_cross_sections.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-cusp_cross_sections.Tpo -c -o libpsnap_a-cusp_cross_sections.obj `if test -f 'cusp_cross_sections.cc'; then $(CYGPATH_W) 'cusp_cross_sections.cc'; else $(CYGPATH_W) '$(srcdir)/cusp_cross_sections.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-cusp_cross_sections.Tpo $(DEPDIR)/libpsnap_a-cusp_cross_sections.Po
#	source='cusp_cross_sections.cc' object='libpsnap_a-cusp_cross_sections.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-cusp_cross_sections.obj `if test -f 'cusp_cross_sections.cc'; then $(CYGPATH_W) 'cusp_cross_sections.cc'; else $(CYGPATH_W) '$(srcdir)/cusp_cross_sections.cc'; fi`

libpsnap_a-cusp_neighborhoods.o: cusp_neighborhoods.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-cusp_neighborhoods.o -MD -MP -MF $(DEPDIR)/libpsnap_a-cusp_neighborhoods.Tpo -c -o libpsnap_a-cusp_neighborhoods.o `test -f 'cusp_neighborhoods.cc' || echo '$(srcdir)/'`cusp_neighborhoods.cc
	mv -f $(DEPDIR)/libpsnap_a-cusp_neighborhoods.Tpo $(DEPDIR)/libpsnap_a-cusp_neighborhoods.Po
#	source='cusp_neighborhoods.cc' object='libpsnap_a-cusp_neighborhoods.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-cusp_neighborhoods.o `test -f 'cusp_neighborhoods.cc' || echo '$(srcdir)/'`cusp_neighborhoods.cc

libpsnap_a-cusp_neighborhoods.obj: cusp_neighborhoods.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-cusp_neighborhoods.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-cusp_neighborhoods.Tpo -c -o libpsnap_a-cusp_neighborhoods.obj `if test -f 'cusp_neighborhoods.cc'; then $(CYGPATH_W) 'cusp_neighborhoods.cc'; else $(CYGPATH_W) '$(srcdir)/cusp_neighborhoods.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-cusp_neighborhoods.Tpo $(DEPDIR)/libpsnap_a-cusp_neighborhoods.Po
#	source='cusp_neighborhoods.cc' object='libpsnap_a-cusp_neighborhoods.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-cusp_neighborhoods.obj `if test -f 'cusp_neighborhoods.cc'; then $(CYGPATH_W) 'cusp_neighborhoods.cc'; else $(CYGPATH_W) '$(srcdir)/cusp_neighborhoods.cc'; fi`

libpsnap_a-cusp_shapes.o: cusp_shapes.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-cusp_shapes.o -MD -MP -MF $(DEPDIR)/libpsnap_a-cusp_shapes.Tpo -c -o libpsnap_a-cusp_shapes.o `test -f 'cusp_shapes.cc' || echo '$(srcdir)/'`cusp_shapes.cc
	mv -f $(DEPDIR)/libpsnap_a-cusp_shapes.Tpo $(DEPDIR)/libpsnap_a-cusp_shapes.Po
#	source='cusp_shapes.cc' object='libpsnap_a-cusp_shapes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-cusp_shapes.o `test -f 'cusp_shapes.cc' || echo '$(srcdir)/'`cusp_shapes.cc

libpsnap_a-cusp_shapes.obj: cusp_shapes.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-cusp_shapes.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-cusp_shapes.Tpo -c -o libpsnap_a-cusp_shapes.obj `if test -f 'cusp_shapes.cc'; then $(CYGPATH_W) 'cusp_shapes.cc'; else $(CYGPATH_W) '$(srcdir)/cusp_shapes.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-cusp_shapes.Tpo $(DEPDIR)/libpsnap_a-cusp_shapes.Po
#	source='cusp_shapes.cc' object='libpsnap_a-cusp_shapes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-cusp_shapes.obj `if test -f 'cusp_shapes.cc'; then $(CYGPATH_W) 'cusp_shapes.cc'; else $(CYGPATH_W) '$(srcdir)/cusp_shapes.cc'; fi`

libpsnap_a-cusps.o: cusps.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-cusps.o -MD -MP -MF $(DEPDIR)/libpsnap_a-cusps.Tpo -c -o libpsnap_a-cusps.o `test -f 'cusps.cc' || echo '$(srcdir)/'`cusps.cc
	mv -f $(DEPDIR)/libpsnap_a-cusps.Tpo $(DEPDIR)/libpsnap_a-cusps.Po
#	source='cusps.cc' object='libpsnap_a-cusps.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-cusps.o `test -f 'cusps.cc' || echo '$(srcdir)/'`cusps.cc

libpsnap_a-cusps.obj: cusps.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-cusps.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-cusps.Tpo -c -o libpsnap_a-cusps.obj `if test -f 'cusps.cc'; then $(CYGPATH_W) 'cusps.cc'; else $(CYGPATH_W) '$(srcdir)/cusps.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-cusps.Tpo $(DEPDIR)/libpsnap_a-cusps.Po
#	source='cusps.cc' object='libpsnap_a-cusps.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-cusps.obj `if test -f 'cusps.cc'; then $(CYGPATH_W) 'cusps.cc'; else $(CYGPATH_W) '$(srcdir)/cusps.cc'; fi`

libpsnap_a-decode_new_DT.o: decode_new_DT.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-decode_new_DT.o -MD -MP -MF $(DEPDIR)/libpsnap_a-decode_new_DT.Tpo -c -o libpsnap_a-decode_new_DT.o `test -f 'decode_new_DT.cc' || echo '$(srcdir)/'`decode_new_DT.cc
	mv -f $(DEPDIR)/libpsnap_a-decode_new_DT.Tpo $(DEPDIR)/libpsnap_a-decode_new_DT.Po
#	source='decode_new_DT.cc' object='libpsnap_a-decode_new_DT.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-decode_new_DT.o `test -f 'decode_new_DT.cc' || echo '$(srcdir)/'`decode_new_DT.cc

libpsnap_a-decode_new_DT.obj: decode_new_DT.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-decode_new_DT.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-decode_new_DT.Tpo -c -o libpsnap_a-decode_new_DT.obj `if test -f 'decode_new_DT.cc'; then $(CYGPATH_W) 'decode_new_DT.cc'; else $(CYGPATH_W) '$(srcdir)/decode_new_DT.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-decode_new_DT.Tpo $(DEPDIR)/libpsnap_a-decode_new_DT.Po
#	source='decode_new_DT.cc' object='libpsnap_a-decode_new_DT.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-decode_new_DT.obj `if test -f 'decode_new_DT.cc'; then $(CYGPATH_W) 'decode_new_DT.cc'; else $(CYGPATH_W) '$(srcdir)/decode_new_DT.cc'; fi`

libpsnap_a-diagnostic.o: diagnostic.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-diagnostic.o -MD -MP -MF $(DEPDIR)/libpsnap_a-diagnostic.Tpo -c -o libpsnap_a-diagnostic.o `test -f 'diagnostic.cc' || echo '$(srcdir)/'`diagnostic.cc
	mv -f $(DEPDIR)/libpsnap_a-diagnostic.Tpo $(DEPDIR)/libpsnap_a-diagnostic.Po
#	source='diagnostic.cc' object='libpsnap_a-diagnostic.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-diagnostic.o `test -f 'diagnostic.cc' || echo '$(srcdir)/'`diagnostic.cc

libpsnap_a-diagnostic.obj: diagnostic.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-diagnostic.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-diagnostic.Tpo -c -o libpsnap_a-diagnostic.obj `if test -f 'diagnostic.cc'; then $(CYGPATH_W) 'diagnostic.cc'; else $(CYGPATH_W) '$(srcdir)/diagnostic.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-diagnostic.Tpo $(DEPDIR)/libpsnap_a-diagnostic.Po
#	source='diagnostic.cc' object='libpsnap_a-diagnostic.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-diagnostic.obj `if test -f 'diagnostic.cc'; then $(CYGPATH_W) 'diagnostic.cc'; else $(CYGPATH_W) '$(srcdir)/diagnostic.cc'; fi`

libpsnap_a-direct_product.o: direct_product.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-direct_product.o -MD -MP -MF $(DEPDIR)/libpsnap_a-direct_product.Tpo -c -o libpsnap_a-direct_product.o `test -f 'direct_product.cc' || echo '$(srcdir)/'`direct_product.cc
	mv -f $(DEPDIR)/libpsnap_a-direct_product.Tpo $(DEPDIR)/libpsnap_a-direct_product.Po
#	source='direct_product.cc' object='libpsnap_a-direct_product.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-direct_product.o `test -f 'direct_product.cc' || echo '$(srcdir)/'`direct_product.cc

libpsnap_a-direct_product.obj: direct_product.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-direct_product.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-direct_product.Tpo -c -o libpsnap_a-direct_product.obj `if test -f 'direct_product.cc'; then $(CYGPATH_W) 'direct_product.cc'; else $(CYGPATH_W) '$(srcdir)/direct_product.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-direct_product.Tpo $(DEPDIR)/libpsnap_a-direct_product.Po
#	source='direct_product.cc' object='libpsnap_a-direct_product.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-direct_product.obj `if test -f 'direct_product.cc'; then $(CYGPATH_W) 'direct_product.cc'; else $(CYGPATH_W) '$(srcdir)/direct_product.cc'; fi`

libpsnap_a-double_cover.o: double_cover.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-double_cover.o -MD -MP -MF $(DEPDIR)/libpsnap_a-double_cover.Tpo -c -o libpsnap_a-double_cover.o `test -f 'double_cover.cc' || echo '$(srcdir)/'`double_cover.cc
	mv -f $(DEPDIR)/libpsnap_a-double_cover.Tpo $(DEPDIR)/libpsnap_a-double_cover.Po
#	source='double_cover.cc' object='libpsnap_a-double_cover.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-double_cover.o `test -f 'double_cover.cc' || echo '$(srcdir)/'`double_cover.cc

libpsnap_a-double_cover.obj: double_cover.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-double_cover.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-double_cover.Tpo -c -o libpsnap_a-double_cover.obj `if test -f 'double_cover.cc'; then $(CYGPATH_W) 'double_cover.cc'; else $(CYGPATH_W) '$(srcdir)/double_cover.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-double_cover.Tpo $(DEPDIR)/libpsnap_a-double_cover.Po
#	source='double_cover.cc' object='libpsnap_a-double_cover.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-double_cover.obj `if test -f 'double_cover.cc'; then $(CYGPATH_W) 'double_cover.cc'; else $(CYGPATH_W) '$(srcdir)/double_cover.cc'; fi`

libpsnap_a-drilling.o: drilling.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-drilling.o -MD -MP -MF $(DEPDIR)/libpsnap_a-drilling.Tpo -c -o libpsnap_a-drilling.o `test -f 'drilling.cc' || echo '$(srcdir)/'`drilling.cc
	mv -f $(DEPDIR)/libpsnap_a-drilling.Tpo $(DEPDIR)/libpsnap_a-drilling.Po
#	source='drilling.cc' object='libpsnap_a-drilling.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-drilling.o `test -f 'drilling.cc' || echo '$(srcdir)/'`drilling.cc

libpsnap_a-drilling.obj: drilling.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-drilling.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-drilling.Tpo -c -o libpsnap_a-drilling.obj `if test -f 'drilling.cc'; then $(CYGPATH_W) 'drilling.cc'; else $(CYGPATH_W) '$(srcdir)/drilling.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-drilling.Tpo $(DEPDIR)/libpsnap_a-drilling.Po
#	source='drilling.cc' object='libpsnap_a-drilling.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-drilling.obj `if test -f 'drilling.cc'; then $(CYGPATH_W) 'drilling.cc'; else $(CYGPATH_W) '$(srcdir)/drilling.cc'; fi`

libpsnap_a-dual_curves.o: dual_curves.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-dual_curves.o -MD -MP -MF $(DEPDIR)/libpsnap_a-dual_curves.Tpo -c -o libpsnap_a-dual_curves.o `test -f 'dual_curves.cc' || echo '$(srcdir)/'`dual_curves.cc
	mv -f $(DEPDIR)/libpsnap_a-dual_curves.Tpo $(DEPDIR)/libpsnap_a-dual_curves.Po
#	source='dual_curves.cc' object='libpsnap_a-dual_curves.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-dual_curves.o `test -f 'dual_curves.cc' || echo '$(srcdir)/'`dual_curves.cc

libpsnap_a-dual_curves.obj: dual_curves.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-dual_curves.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-dual_curves.Tpo -c -o libpsnap_a-dual_curves.obj `if test -f 'dual_curves.cc'; then $(CYGPATH_W) 'dual_curves.cc'; else $(CYGPATH_W) '$(srcdir)/dual_curves.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-dual_curves.Tpo $(DEPDIR)/libpsnap_a-dual_curves.Po
#	source='dual_curves.cc' object='libpsnap_a-dual_curves.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-dual_curves.obj `if test -f 'dual_curves.cc'; then $(CYGPATH_W) 'dual_curves.cc'; else $(CYGPATH_W) '$(srcdir)/dual_curves.cc'; fi`

libpsnap_a-edge_classes.o: edge_classes.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-edge_classes.o -MD -MP -MF $(DEPDIR)/libpsnap_a-edge_classes.Tpo -c -o libpsnap_a-edge_classes.o `test -f 'edge_classes.cc' || echo '$(srcdir)/'`edge_classes.cc
	mv -f $(DEPDIR)/libpsnap_a-edge_classes.Tpo $(DEPDIR)/libpsnap_a-edge_classes.Po
#	source='edge_classes.cc' object='libpsnap_a-edge_classes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-edge_classes.o `test -f 'edge_classes.cc' || echo '$(srcdir)/'`edge_classes.cc

libpsnap_a-edge_classes.obj: edge_classes.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-edge_classes.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-edge_classes.Tpo -c -o libpsnap_a-edge_classes.obj `if test -f 'edge_classes.cc'; then $(CYGPATH_W) 'edge_classes.cc'; else $(CYGPATH_W) '$(srcdir)/edge_classes.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-edge_classes.Tpo $(DEPDIR)/libpsnap_a-edge_classes.Po
#	source='edge_classes.cc' object='libpsnap_a-edge_classes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-edge_classes.obj `if test -f 'edge_classes.cc'; then $(CYGPATH_W) 'edge_classes.cc'; else $(CYGPATH_W) '$(srcdir)/edge_classes.cc'; fi`

libpsnap_a-elements_generate_group.o: elements_generate_group.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-elements_generate_group.o -MD -MP -MF $(DEPDIR)/libpsnap_a-elements_generate_group.Tpo -c -o libpsnap_a-elements_generate_group.o `test -f 'elements_generate_group.cc' || echo '$(srcdir)/'`elements_generate_group.cc
	mv -f $(DEPDIR)/libpsnap_a-elements_generate_group.Tpo $(DEPDIR)/libpsnap_a-elements_generate_group.Po
#	source='elements_generate_group.cc' object='libpsnap_a-elements_generate_group.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-elements_generate_group.o `test -f 'elements_generate_group.cc' || echo '$(srcdir)/'`elements_generate_group.cc

libpsnap_a-elements_generate_group.obj: elements_generate_group.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-elements_generate_group.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-elements_generate_group.Tpo -c -o libpsnap_a-elements_generate_group.obj `if test -f 'elements_generate_group.cc'; then $(CYGPATH_W) 'elements_generate_group.cc'; else $(CYGPATH_W) '$(srcdir)/elements_generate_group.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-elements_generate_group.Tpo $(DEPDIR)/libpsnap_a-elements_generate_group.Po
#	source='elements_generate_group.cc' object='libpsnap_a-elements_generate_group.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-elements_generate_group.obj `if test -f 'elements_generate_group.cc'; then $(CYGPATH_W) 'elements_generate_group.cc'; else $(CYGPATH_W) '$(srcdir)/elements_generate_group.cc'; fi`

libpsnap_a-filling.o: filling.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-filling.o -MD -MP -MF $(DEPDIR)/libpsnap_a-filling.Tpo -c -o libpsnap_a-filling.o `test -f 'filling.cc' || echo '$(srcdir)/'`filling.cc
	mv -f $(DEPDIR)/libpsnap_a-filling.Tpo $(DEPDIR)/libpsnap_a-filling.Po
#	source='filling.cc' object='libpsnap_a-filling.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-filling.o `test -f 'filling.cc' || echo '$(srcdir)/'`filling.cc

libpsnap_a-filling.obj: filling.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-filling.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-filling.Tpo -c -o libpsnap_a-filling.obj `if test -f 'filling.cc'; then $(CYGPATH_W) 'filling.cc'; else $(CYGPATH_W) '$(srcdir)/filling.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-filling.Tpo $(DEPDIR)/libpsnap_a-filling.Po
#	source='filling.cc' object='libpsnap_a-filling.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-filling.obj `if test -f 'filling.cc'; then $(CYGPATH_W) 'filling.cc'; else $(CYGPATH_W) '$(srcdir)/filling.cc'; fi`

libpsnap_a-find_cusp.o: find_cusp.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-find_cusp.o -MD -MP -MF $(DEPDIR)/libpsnap_a-find_cusp.Tpo -c -o libpsnap_a-find_cusp.o `test -f 'find_cusp.cc' || echo '$(srcdir)/'`find_cusp.cc
	mv -f $(DEPDIR)/libpsnap_a-find_cusp.Tpo $(DEPDIR)/libpsnap_a-find_cusp.Po
#	source='find_cusp.cc' object='libpsnap_a-find_cusp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-find_cusp.o `test -f 'find_cusp.cc' || echo '$(srcdir)/'`find_cusp.cc

libpsnap_a-find_cusp.obj: find_cusp.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-find_cusp.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-find_cusp.Tpo -c -o libpsnap_a-find_cusp.obj `if test -f 'find_cusp.cc'; then $(CYGPATH_W) 'find_cusp.cc'; else $(CYGPATH_W) '$(srcdir)/find_cusp.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-find_cusp.Tpo $(DEPDIR)/libpsnap_a-find_cusp.Po
#	source='find_cusp.cc' object='libpsnap_a-find_cusp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-find_cusp.obj `if test -f 'find_cusp.cc'; then $(CYGPATH_W) 'find_cusp.cc'; else $(CYGPATH_W) '$(srcdir)/find_cusp.cc'; fi`

libpsnap_a-finite_vertices.o: finite_vertices.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-finite_vertices.o -MD -MP -MF $(DEPDIR)/libpsnap_a-finite_vertices.Tpo -c -o libpsnap_a-finite_vertices.o `test -f 'finite_vertices.cc' || echo '$(srcdir)/'`finite_vertices.cc
	mv -f $(DEPDIR)/libpsnap_a-finite_vertices.Tpo $(DEPDIR)/libpsnap_a-finite_vertices.Po
#	source='finite_vertices.cc' object='libpsnap_a-finite_vertices.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-finite_vertices.o `test -f 'finite_vertices.cc' || echo '$(srcdir)/'`finite_vertices.cc

libpsnap_a-finite_vertices.obj: finite_vertices.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-finite_vertices.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-finite_vertices.Tpo -c -o libpsnap_a-finite_vertices.obj `if test -f 'finite_vertices.cc'; then $(CYGPATH_W) 'finite_vertices.cc'; else $(CYGPATH_W) '$(srcdir)/finite_vertices.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-finite_vertices.Tpo $(DEPDIR)/libpsnap_a-finite_vertices.Po
#	source='finite_vertices.cc' object='libpsnap_a-finite_vertices.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-finite_vertices.obj `if test -f 'finite_vertices.cc'; then $(CYGPATH_W) 'finite_vertices.cc'; else $(CYGPATH_W) '$(srcdir)/finite_vertices.cc'; fi`

libpsnap_a-fundamental_group.o: fundamental_group.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-fundamental_group.o -MD -MP -MF $(DEPDIR)/libpsnap_a-fundamental_group.Tpo -c -o libpsnap_a-fundamental_group.o `test -f 'fundamental_group.cc' || echo '$(srcdir)/'`fundamental_group.cc
	mv -f $(DEPDIR)/libpsnap_a-fundamental_group.Tpo $(DEPDIR)/libpsnap_a-fundamental_group.Po
#	source='fundamental_group.cc' object='libpsnap_a-fundamental_group.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-fundamental_group.o `test -f 'fundamental_group.cc' || echo '$(srcdir)/'`fundamental_group.cc

libpsnap_a-fundamental_group.obj: fundamental_group.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-fundamental_group.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-fundamental_group.Tpo -c -o libpsnap_a-fundamental_group.obj `if test -f 'fundamental_group.cc'; then $(CYGPATH_W) 'fundamental_group.cc'; else $(CYGPATH_W) '$(srcdir)/fundamental_group.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-fundamental_group.Tpo $(DEPDIR)/libpsnap_a-fundamental_group.Po
#	source='fundamental_group.cc' object='libpsnap_a-fundamental_group.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-fundamental_group.obj `if test -f 'fundamental_group.cc'; then $(CYGPATH_W) 'fundamental_group.cc'; else $(CYGPATH_W) '$(srcdir)/fundamental_group.cc'; fi`

libpsnap_a-gcd.o: gcd.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-gcd.o -MD -MP -MF $(DEPDIR)/libpsnap_a-gcd.Tpo -c -o libpsnap_a-gcd.o `test -f 'gcd.cc' || echo '$(srcdir)/'`gcd.cc
	mv -f $(DEPDIR)/libpsnap_a-gcd.Tpo $(DEPDIR)/libpsnap_a-gcd.Po
#	source='gcd.cc' object='libpsnap_a-gcd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-gcd.o `test -f 'gcd.cc' || echo '$(srcdir)/'`gcd.cc

libpsnap_a-gcd.obj: gcd.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-gcd.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-gcd.Tpo -c -o libpsnap_a-gcd.obj `if test -f 'gcd.cc'; then $(CYGPATH_W) 'gcd.cc'; else $(CYGPATH_W) '$(srcdir)/gcd.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-gcd.Tpo $(DEPDIR)/libpsnap_a-gcd.Po
#	source='gcd.cc' object='libpsnap_a-gcd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-gcd.obj `if test -f 'gcd.cc'; then $(CYGPATH_W) 'gcd.cc'; else $(CYGPATH_W) '$(srcdir)/gcd.cc'; fi`

libpsnap_a-gluing_equations.o: gluing_equations.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-gluing_equations.o -MD -MP -MF $(DEPDIR)/libpsnap_a-gluing_equations.Tpo -c -o libpsnap_a-gluing_equations.o `test -f 'gluing_equations.cc' || echo '$(srcdir)/'`gluing_equations.cc
	mv -f $(DEPDIR)/libpsnap_a-gluing_equations.Tpo $(DEPDIR)/libpsnap_a-gluing_equations.Po
#	source='gluing_equations.cc' object='libpsnap_a-gluing_equations.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-gluing_equations.o `test -f 'gluing_equations.cc' || echo '$(srcdir)/'`gluing_equations.cc

libpsnap_a-gluing_equations.obj: gluing_equations.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-gluing_equations.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-gluing_equations.Tpo -c -o libpsnap_a-gluing_equations.obj `if test -f 'gluing_equations.cc'; then $(CYGPATH_W) 'gluing_equations.cc'; else $(CYGPATH_W) '$(srcdir)/gluing_equations.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-gluing_equations.Tpo $(DEPDIR)/libpsnap_a-gluing_equations.Po
#	source='gluing_equations.cc' object='libpsnap_a-gluing_equations.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-gluing_equations.obj `if test -f 'gluing_equations.cc'; then $(CYGPATH_W) 'gluing_equations.cc'; else $(CYGPATH_W) '$(srcdir)/gluing_equations.cc'; fi`

libpsnap_a-holonomy.o: holonomy.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-holonomy.o -MD -MP -MF $(DEPDIR)/libpsnap_a-holonomy.Tpo -c -o libpsnap_a-holonomy.o `test -f 'holonomy.cc' || echo '$(srcdir)/'`holonomy.cc
	mv -f $(DEPDIR)/libpsnap_a-holonomy.Tpo $(DEPDIR)/libpsnap_a-holonomy.Po
#	source='holonomy.cc' object='libpsnap_a-holonomy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-holonomy.o `test -f 'holonomy.cc' || echo '$(srcdir)/'`holonomy.cc

libpsnap_a-holonomy.obj: holonomy.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-holonomy.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-holonomy.Tpo -c -o libpsnap_a-holonomy.obj `if test -f 'holonomy.cc'; then $(CYGPATH_W) 'holonomy.cc'; else $(CYGPATH_W) '$(srcdir)/holonomy.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-holonomy.Tpo $(DEPDIR)/libpsnap_a-holonomy.Po
#	source='holonomy.cc' object='libpsnap_a-holonomy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-holonomy.obj `if test -f 'holonomy.cc'; then $(CYGPATH_W) 'holonomy.cc'; else $(CYGPATH_W) '$(srcdir)/holonomy.cc'; fi`

libpsnap_a-homology.o: homology.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-homology.o -MD -MP -MF $(DEPDIR)/libpsnap_a-homology.Tpo -c -o libpsnap_a-homology.o `test -f 'homology.cc' || echo '$(srcdir)/'`homology.cc
	mv -f $(DEPDIR)/libpsnap_a-homology.Tpo $(DEPDIR)/libpsnap_a-homology.Po
#	source='homology.cc' object='libpsnap_a-homology.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-homology.o `test -f 'homology.cc' || echo '$(srcdir)/'`homology.cc

libpsnap_a-homology.obj: homology.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-homology.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-homology.Tpo -c -o libpsnap_a-homology.obj `if test -f 'homology.cc'; then $(CYGPATH_W) 'homology.cc'; else $(CYGPATH_W) '$(srcdir)/homology.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-homology.Tpo $(DEPDIR)/libpsnap_a-homology.Po
#	source='homology.cc' object='libpsnap_a-homology.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-homology.obj `if test -f 'homology.cc'; then $(CYGPATH_W) 'homology.cc'; else $(CYGPATH_W) '$(srcdir)/homology.cc'; fi`

libpsnap_a-hyperbolic_structure.o: hyperbolic_structure.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-hyperbolic_structure.o -MD -MP -MF $(DEPDIR)/libpsnap_a-hyperbolic_structure.Tpo -c -o libpsnap_a-hyperbolic_structure.o `test -f 'hyperbolic_structure.cc' || echo '$(srcdir)/'`hyperbolic_structure.cc
	mv -f $(DEPDIR)/libpsnap_a-hyperbolic_structure.Tpo $(DEPDIR)/libpsnap_a-hyperbolic_structure.Po
#	source='hyperbolic_structure.cc' object='libpsnap_a-hyperbolic_structure.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-hyperbolic_structure.o `test -f 'hyperbolic_structure.cc' || echo '$(srcdir)/'`hyperbolic_structure.cc

libpsnap_a-hyperbolic_structure.obj: hyperbolic_structure.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-hyperbolic_structure.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-hyperbolic_structure.Tpo -c -o libpsnap_a-hyperbolic_structure.obj `if test -f 'hyperbolic_structure.cc'; then $(CYGPATH_W) 'hyperbolic_structure.cc'; else $(CYGPATH_W) '$(srcdir)/hyperbolic_structure.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-hyperbolic_structure.Tpo $(DEPDIR)/libpsnap_a-hyperbolic_structure.Po
#	source='hyperbolic_structure.cc' object='libpsnap_a-hyperbolic_structure.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-hyperbolic_structure.obj `if test -f 'hyperbolic_structure.cc'; then $(CYGPATH_W) 'hyperbolic_structure.cc'; else $(CYGPATH_W) '$(srcdir)/hyperbolic_structure.cc'; fi`

libpsnap_a-identify_solution_type.o: identify_solution_type.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-identify_solution_type.o -MD -MP -MF $(DEPDIR)/libpsnap_a-identify_solution_type.Tpo -c -o libpsnap_a-identify_solution_type.o `test -f 'identify_solution_type.cc' || echo '$(srcdir)/'`identify_solution_type.cc
	mv -f $(DEPDIR)/libpsnap_a-identify_solution_type.Tpo $(DEPDIR)/libpsnap_a-identify_solution_type.Po
#	source='identify_solution_type.cc' object='libpsnap_a-identify_solution_type.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-identify_solution_type.o `test -f 'identify_solution_type.cc' || echo '$(srcdir)/'`identify_solution_type.cc

libpsnap_a-identify_solution_type.obj: identify_solution_type.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-identify_solution_type.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-identify_solution_type.Tpo -c -o libpsnap_a-identify_solution_type.obj `if test -f 'identify_solution_type.cc'; then $(CYGPATH_W) 'identify_solution_type.cc'; else $(CYGPATH_W) '$(srcdir)/identify_solution_type.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-identify_solution_type.Tpo $(DEPDIR)/libpsnap_a-identify_solution_type.Po
#	source='identify_solution_type.cc' object='libpsnap_a-identify_solution_type.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-identify_solution_type.obj `if test -f 'identify_solution_type.cc'; then $(CYGPATH_W) 'identify_solution_type.cc'; else $(CYGPATH_W) '$(srcdir)/identify_solution_type.cc'; fi`

libpsnap_a-index_to_hue.o: index_to_hue.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-index_to_hue.o -MD -MP -MF $(DEPDIR)/libpsnap_a-index_to_hue.Tpo -c -o libpsnap_a-index_to_hue.o `test -f 'index_to_hue.cc' || echo '$(srcdir)/'`index_to_hue.cc
	mv -f $(DEPDIR)/libpsnap_a-index_to_hue.Tpo $(DEPDIR)/libpsnap_a-index_to_hue.Po
#	source='index_to_hue.cc' object='libpsnap_a-index_to_hue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-index_to_hue.o `test -f 'index_to_hue.cc' || echo '$(srcdir)/'`index_to_hue.cc

libpsnap_a-index_to_hue.obj: index_to_hue.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-index_to_hue.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-index_to_hue.Tpo -c -o libpsnap_a-index_to_hue.obj `if test -f 'index_to_hue.cc'; then $(CYGPATH_W) 'index_to_hue.cc'; else $(CYGPATH_W) '$(srcdir)/index_to_hue.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-index_to_hue.Tpo $(DEPDIR)/libpsnap_a-index_to_hue.Po
#	source='index_to_hue.cc' object='libpsnap_a-index_to_hue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-index_to_hue.obj `if test -f 'index_to_hue.cc'; then $(CYGPATH_W) 'index_to_hue.cc'; else $(CYGPATH_W) '$(srcdir)/index_to_hue.cc'; fi`

libpsnap_a-interface.o: interface.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-interface.o -MD -MP -MF $(DEPDIR)/libpsnap_a-interface.Tpo -c -o libpsnap_a-interface.o `test -f 'interface.cc' || echo '$(srcdir)/'`interface.cc
	mv -f $(DEPDIR)/libpsnap_a-interface.Tpo $(DEPDIR)/libpsnap_a-interface.Po
#	source='interface.cc' object='libpsnap_a-interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-interface.o `test -f 'interface.cc' || echo '$(srcdir)/'`interface.cc

libpsnap_a-interface.obj: interface.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-interface.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-interface.Tpo -c -o libpsnap_a-interface.obj `if test -f 'interface.cc'; then $(CYGPATH_W) 'interface.cc'; else $(CYGPATH_W) '$(srcdir)/interface.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-interface.Tpo $(DEPDIR)/libpsnap_a-interface.Po
#	source='interface.cc' object='libpsnap_a-interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-interface.obj `if test -f 'interface.cc'; then $(CYGPATH_W) 'interface.cc'; else $(CYGPATH_W) '$(srcdir)/interface.cc'; fi`

libpsnap_a-intersection_numbers.o: intersection_numbers.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-intersection_numbers.o -MD -MP -MF $(DEPDIR)/libpsnap_a-intersection_numbers.Tpo -c -o libpsnap_a-intersection_numbers.o `test -f 'intersection_numbers.cc' || echo '$(srcdir)/'`intersection_numbers.cc
	mv -f $(DEPDIR)/libpsnap_a-intersection_numbers.Tpo $(DEPDIR)/libpsnap_a-intersection_numbers.Po
#	source='intersection_numbers.cc' object='libpsnap_a-intersection_numbers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-intersection_numbers.o `test -f 'intersection_numbers.cc' || echo '$(srcdir)/'`intersection_numbers.cc

libpsnap_a-intersection_numbers.obj: intersection_numbers.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-intersection_numbers.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-intersection_numbers.Tpo -c -o libpsnap_a-intersection_numbers.obj `if test -f 'intersection_numbers.cc'; then $(CYGPATH_W) 'intersection_numbers.cc'; else $(CYGPATH_W) '$(srcdir)/intersection_numbers.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-intersection_numbers.Tpo $(DEPDIR)/libpsnap_a-intersection_numbers.Po
#	source='intersection_numbers.cc' object='libpsnap_a-intersection_numbers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-intersection_numbers.obj `if test -f 'intersection_numbers.cc'; then $(CYGPATH_W) 'intersection_numbers.cc'; else $(CYGPATH_W) '$(srcdir)/intersection_numbers.cc'; fi`

libpsnap_a-isometry.o: isometry.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-isometry.o -MD -MP -MF $(DEPDIR)/libpsnap_a-isometry.Tpo -c -o libpsnap_a-isometry.o `test -f 'isometry.cc' || echo '$(srcdir)/'`isometry.cc
	mv -f $(DEPDIR)/libpsnap_a-isometry.Tpo $(DEPDIR)/libpsnap_a-isometry.Po
#	source='isometry.cc' object='libpsnap_a-isometry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-isometry.o `test -f 'isometry.cc' || echo '$(srcdir)/'`isometry.cc

libpsnap_a-isometry.obj: isometry.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-isometry.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-isometry.Tpo -c -o libpsnap_a-isometry.obj `if test -f 'isometry.cc'; then $(CYGPATH_W) 'isometry.cc'; else $(CYGPATH_W) '$(srcdir)/isometry.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-isometry.Tpo $(DEPDIR)/libpsnap_a-isometry.Po
#	source='isometry.cc' object='libpsnap_a-isometry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-isometry.obj `if test -f 'isometry.cc'; then $(CYGPATH_W) 'isometry.cc'; else $(CYGPATH_W) '$(srcdir)/isometry.cc'; fi`

libpsnap_a-isometry_closed.o: isometry_closed.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-isometry_closed.o -MD -MP -MF $(DEPDIR)/libpsnap_a-isometry_closed.Tpo -c -o libpsnap_a-isometry_closed.o `test -f 'isometry_closed.cc' || echo '$(srcdir)/'`isometry_closed.cc
	mv -f $(DEPDIR)/libpsnap_a-isometry_closed.Tpo $(DEPDIR)/libpsnap_a-isometry_closed.Po
#	source='isometry_closed.cc' object='libpsnap_a-isometry_closed.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-isometry_closed.o `test -f 'isometry_closed.cc' || echo '$(srcdir)/'`isometry_closed.cc

libpsnap_a-isometry_closed.obj: isometry_closed.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-isometry_closed.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-isometry_closed.Tpo -c -o libpsnap_a-isometry_closed.obj `if test -f 'isometry_closed.cc'; then $(CYGPATH_W) 'isometry_closed.cc'; else $(CYGPATH_W) '$(srcdir)/isometry_closed.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-isometry_closed.Tpo $(DEPDIR)/libpsnap_a-isometry_closed.Po
#	source='isometry_closed.cc' object='libpsnap_a-isometry_closed.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-isometry_closed.obj `if test -f 'isometry_closed.cc'; then $(CYGPATH_W) 'isometry_closed.cc'; else $(CYGPATH_W) '$(srcdir)/isometry_closed.cc'; fi`

libpsnap_a-isometry_cusped.o: isometry_cusped.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-isometry_cusped.o -MD -MP -MF $(DEPDIR)/libpsnap_a-isometry_cusped.Tpo -c -o libpsnap_a-isometry_cusped.o `test -f 'isometry_cusped.cc' || echo '$(srcdir)/'`isometry_cusped.cc
	mv -f $(DEPDIR)/libpsnap_a-isometry_cusped.Tpo $(DEPDIR)/libpsnap_a-isometry_cusped.Po
#	source='isometry_cusped.cc' object='libpsnap_a-isometry_cusped.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-isometry_cusped.o `test -f 'isometry_cusped.cc' || echo '$(srcdir)/'`isometry_cusped.cc

libpsnap_a-isometry_cusped.obj: isometry_cusped.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-isometry_cusped.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-isometry_cusped.Tpo -c -o libpsnap_a-isometry_cusped.obj `if test -f 'isometry_cusped.cc'; then $(CYGPATH_W) 'isometry_cusped.cc'; else $(CYGPATH_W) '$(srcdir)/isometry_cusped.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-isometry_cusped.Tpo $(DEPDIR)/libpsnap_a-isometry_cusped.Po
#	source='isometry_cusped.cc' object='libpsnap_a-isometry_cusped.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-isometry_cusped.obj `if test -f 'isometry_cusped.cc'; then $(CYGPATH_W) 'isometry_cusped.cc'; else $(CYGPATH_W) '$(srcdir)/isometry_cusped.cc'; fi`

libpsnap_a-length_spectrum.o: length_spectrum.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-length_spectrum.o -MD -MP -MF $(DEPDIR)/libpsnap_a-length_spectrum.Tpo -c -o libpsnap_a-length_spectrum.o `test -f 'length_spectrum.cc' || echo '$(srcdir)/'`length_spectrum.cc
	mv -f $(DEPDIR)/libpsnap_a-length_spectrum.Tpo $(DEPDIR)/libpsnap_a-length_spectrum.Po
#	source='length_spectrum.cc' object='libpsnap_a-length_spectrum.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-length_spectrum.o `test -f 'length_spectrum.cc' || echo '$(srcdir)/'`length_spectrum.cc

libpsnap_a-length_spectrum.obj: length_spectrum.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-length_spectrum.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-length_spectrum.Tpo -c -o libpsnap_a-length_spectrum.obj `if test -f 'length_spectrum.cc'; then $(CYGPATH_W) 'length_spectrum.cc'; else $(CYGPATH_W) '$(srcdir)/length_spectrum.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-length_spectrum.Tpo $(DEPDIR)/libpsnap_a-length_spectrum.Po
#	source='length_spectrum.cc' object='libpsnap_a-length_spectrum.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-length_spectrum.obj `if test -f 'length_spectrum.cc'; then $(CYGPATH_W) 'length_spectrum.cc'; else $(CYGPATH_W) '$(srcdir)/length_spectrum.cc'; fi`

libpsnap_a-link_complement.o: link_complement.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-link_complement.o -MD -MP -MF $(DEPDIR)/libpsnap_a-link_complement.Tpo -c -o libpsnap_a-link_complement.o `test -f 'link_complement.cc' || echo '$(srcdir)/'`link_complement.cc
	mv -f $(DEPDIR)/libpsnap_a-link_complement.Tpo $(DEPDIR)/libpsnap_a-link_complement.Po
#	source='link_complement.cc' object='libpsnap_a-link_complement.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-link_complement.o `test -f 'link_complement.cc' || echo '$(srcdir)/'`link_complement.cc

libpsnap_a-link_complement.obj: link_complement.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-link_complement.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-link_complement.Tpo -c -o libpsnap_a-link_complement.obj `if test -f 'link_complement.cc'; then $(CYGPATH_W) 'link_complement.cc'; else $(CYGPATH_W) '$(srcdir)/link_complement.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-link_complement.Tpo $(DEPDIR)/libpsnap_a-link_complement.Po
#	source='link_complement.cc' object='libpsnap_a-link_complement.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-link_complement.obj `if test -f 'link_complement.cc'; then $(CYGPATH_W) 'link_complement.cc'; else $(CYGPATH_W) '$(srcdir)/link_complement.cc'; fi`

libpsnap_a-matrix_conversion.o: matrix_conversion.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-matrix_conversion.o -MD -MP -MF $(DEPDIR)/libpsnap_a-matrix_conversion.Tpo -c -o libpsnap_a-matrix_conversion.o `test -f 'matrix_conversion.cc' || echo '$(srcdir)/'`matrix_conversion.cc
	mv -f $(DEPDIR)/libpsnap_a-matrix_conversion.Tpo $(DEPDIR)/libpsnap_a-matrix_conversion.Po
#	source='matrix_conversion.cc' object='libpsnap_a-matrix_conversion.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-matrix_conversion.o `test -f 'matrix_conversion.cc' || echo '$(srcdir)/'`matrix_conversion.cc

libpsnap_a-matrix_conversion.obj: matrix_conversion.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-matrix_conversion.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-matrix_conversion.Tpo -c -o libpsnap_a-matrix_conversion.obj `if test -f 'matrix_conversion.cc'; then $(CYGPATH_W) 'matrix_conversion.cc'; else $(CYGPATH_W) '$(srcdir)/matrix_conversion.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-matrix_conversion.Tpo $(DEPDIR)/libpsnap_a-matrix_conversion.Po
#	source='matrix_conversion.cc' object='libpsnap_a-matrix_conversion.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-matrix_conversion.obj `if test -f 'matrix_conversion.cc'; then $(CYGPATH_W) 'matrix_conversion.cc'; else $(CYGPATH_W) '$(srcdir)/matrix_conversion.cc'; fi`

libpsnap_a-matrix_generators.o: matrix_generators.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-matrix_generators.o -MD -MP -MF $(DEPDIR)/libpsnap_a-matrix_generators.Tpo -c -o libpsnap_a-matrix_generators.o `test -f 'matrix_generators.cc' || echo '$(srcdir)/'`matrix_generators.cc
	mv -f $(DEPDIR)/libpsnap_a-matrix_generators.Tpo $(DEPDIR)/libpsnap_a-matrix_generators.Po
#	source='matrix_generators.cc' object='libpsnap_a-matrix_generators.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-matrix_generators.o `test -f 'matrix_generators.cc' || echo '$(srcdir)/'`matrix_generators.cc

libpsnap_a-matrix_generators.obj: matrix_generators.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-matrix_generators.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-matrix_generators.Tpo -c -o libpsnap_a-matrix_generators.obj `if test -f 'matrix_generators.cc'; then $(CYGPATH_W) 'matrix_generators.cc'; else $(CYGPATH_W) '$(srcdir)/matrix_generators.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-matrix_generators.Tpo $(DEPDIR)/libpsnap_a-matrix_generators.Po
#	source='matrix_generators.cc' object='libpsnap_a-matrix_generators.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-matrix_generators.obj `if test -f 'matrix_generators.cc'; then $(CYGPATH_W) 'matrix_generators.cc'; else $(CYGPATH_W) '$(srcdir)/matrix_generators.cc'; fi`

libpsnap_a-my_malloc.o: my_malloc.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-my_malloc.o -MD -MP -MF $(DEPDIR)/libpsnap_a-my_malloc.Tpo -c -o libpsnap_a-my_malloc.o `test -f 'my_malloc.cc' || echo '$(srcdir)/'`my_malloc.cc
	mv -f $(DEPDIR)/libpsnap_a-my_malloc.Tpo $(DEPDIR)/libpsnap_a-my_malloc.Po
#	source='my_malloc.cc' object='libpsnap_a-my_malloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-my_malloc.o `test -f 'my_malloc.cc' || echo '$(srcdir)/'`my_malloc.cc

libpsnap_a-my_malloc.obj: my_malloc.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-my_malloc.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-my_malloc.Tpo -c -o libpsnap_a-my_malloc.obj `if test -f 'my_malloc.cc'; then $(CYGPATH_W) 'my_malloc.cc'; else $(CYGPATH_W) '$(srcdir)/my_malloc.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-my_malloc.Tpo $(DEPDIR)/libpsnap_a-my_malloc.Po
#	source='my_malloc.cc' object='libpsnap_a-my_malloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-my_malloc.obj `if test -f 'my_malloc.cc'; then $(CYGPATH_W) 'my_malloc.cc'; else $(CYGPATH_W) '$(srcdir)/my_malloc.cc'; fi`

libpsnap_a-normal_surface_construction.o: normal_surface_construction.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-normal_surface_construction.o -MD -MP -MF $(DEPDIR)/libpsnap_a-normal_surface_construction.Tpo -c -o libpsnap_a-normal_surface_construction.o `test -f 'normal_surface_construction.cc' || echo '$(srcdir)/'`normal_surface_construction.cc
	mv -f $(DEPDIR)/libpsnap_a-normal_surface_construction.Tpo $(DEPDIR)/libpsnap_a-normal_surface_construction.Po
#	source='normal_surface_construction.cc' object='libpsnap_a-normal_surface_construction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-normal_surface_construction.o `test -f 'normal_surface_construction.cc' || echo '$(srcdir)/'`normal_surface_construction.cc

libpsnap_a-normal_surface_construction.obj: normal_surface_construction.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-normal_surface_construction.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-normal_surface_construction.Tpo -c -o libpsnap_a-normal_surface_construction.obj `if test -f 'normal_surface_construction.cc'; then $(CYGPATH_W) 'normal_surface_construction.cc'; else $(CYGPATH_W) '$(srcdir)/normal_surface_construction.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-normal_surface_construction.Tpo $(DEPDIR)/libpsnap_a-normal_surface_construction.Po
#	source='normal_surface_construction.cc' object='libpsnap_a-normal_surface_construction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-normal_surface_construction.obj `if test -f 'normal_surface_construction.cc'; then $(CYGPATH_W) 'normal_surface_construction.cc'; else $(CYGPATH_W) '$(srcdir)/normal_surface_construction.cc'; fi`

libpsnap_a-normal_surface_recognition.o: normal_surface_recognition.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-normal_surface_recognition.o -MD -MP -MF $(DEPDIR)/libpsnap_a-normal_surface_recognition.Tpo -c -o libpsnap_a-normal_surface_recognition.o `test -f 'normal_surface_recognition.cc' || echo '$(srcdir)/'`normal_surface_recognition.cc
	mv -f $(DEPDIR)/libpsnap_a-normal_surface_recognition.Tpo $(DEPDIR)/libpsnap_a-normal_surface_recognition.Po
#	source='normal_surface_recognition.cc' object='libpsnap_a-normal_surface_recognition.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-normal_surface_recognition.o `test -f 'normal_surface_recognition.cc' || echo '$(srcdir)/'`normal_surface_recognition.cc

libpsnap_a-normal_surface_recognition.obj: normal_surface_recognition.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-normal_surface_recognition.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-normal_surface_recognition.Tpo -c -o libpsnap_a-normal_surface_recognition.obj `if test -f 'normal_surface_recognition.cc'; then $(CYGPATH_W) 'normal_surface_recognition.cc'; else $(CYGPATH_W) '$(srcdir)/normal_surface_recognition.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-normal_surface_recognition.Tpo $(DEPDIR)/libpsnap_a-normal_surface_recognition.Po
#	source='normal_surface_recognition.cc' object='libpsnap_a-normal_surface_recognition.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-normal_surface_recognition.obj `if test -f 'normal_surface_recognition.cc'; then $(CYGPATH_W) 'normal_surface_recognition.cc'; else $(CYGPATH_W) '$(srcdir)/normal_surface_recognition.cc'; fi`

libpsnap_a-normal_surface_splitting.o: normal_surface_splitting.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-normal_surface_splitting.o -MD -MP -MF $(DEPDIR)/libpsnap_a-normal_surface_splitting.Tpo -c -o libpsnap_a-normal_surface_splitting.o `test -f 'normal_surface_splitting.cc' || echo '$(srcdir)/'`normal_surface_splitting.cc
	mv -f $(DEPDIR)/libpsnap_a-normal_surface_splitting.Tpo $(DEPDIR)/libpsnap_a-normal_surface_splitting.Po
#	source='normal_surface_splitting.cc' object='libpsnap_a-normal_surface_splitting.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-normal_surface_splitting.o `test -f 'normal_surface_splitting.cc' || echo '$(srcdir)/'`normal_surface_splitting.cc

libpsnap_a-normal_surface_splitting.obj: normal_surface_splitting.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-normal_surface_splitting.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-normal_surface_splitting.Tpo -c -o libpsnap_a-normal_surface_splitting.obj `if test -f 'normal_surface_splitting.cc'; then $(CYGPATH_W) 'normal_surface_splitting.cc'; else $(CYGPATH_W) '$(srcdir)/normal_surface_splitting.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-normal_surface_splitting.Tpo $(DEPDIR)/libpsnap_a-normal_surface_splitting.Po
#	source='normal_surface_splitting.cc' object='libpsnap_a-normal_surface_splitting.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-normal_surface_splitting.obj `if test -f 'normal_surface_splitting.cc'; then $(CYGPATH_W) 'normal_surface_splitting.cc'; else $(CYGPATH_W) '$(srcdir)/normal_surface_splitting.cc'; fi`

libpsnap_a-o31_matrices.o: o31_matrices.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-o31_matrices.o -MD -MP -MF $(DEPDIR)/libpsnap_a-o31_matrices.Tpo -c -o libpsnap_a-o31_matrices.o `test -f 'o31_matrices.cc' || echo '$(srcdir)/'`o31_matrices.cc
	mv -f $(DEPDIR)/libpsnap_a-o31_matrices.Tpo $(DEPDIR)/libpsnap_a-o31_matrices.Po
#	source='o31_matrices.cc' object='libpsnap_a-o31_matrices.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-o31_matrices.o `test -f 'o31_matrices.cc' || echo '$(srcdir)/'`o31_matrices.cc

libpsnap_a-o31_matrices.obj: o31_matrices.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-o31_matrices.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-o31_matrices.Tpo -c -o libpsnap_a-o31_matrices.obj `if test -f 'o31_matrices.cc'; then $(CYGPATH_W) 'o31_matrices.cc'; else $(CYGPATH_W) '$(srcdir)/o31_matrices.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-o31_matrices.Tpo $(DEPDIR)/libpsnap_a-o31_matrices.Po
#	source='o31_matrices.cc' object='libpsnap_a-o31_matrices.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-o31_matrices.obj `if test -f 'o31_matrices.cc'; then $(CYGPATH_W) 'o31_matrices.cc'; else $(CYGPATH_W) '$(srcdir)/o31_matrices.cc'; fi`

libpsnap_a-orient.o: orient.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-orient.o -MD -MP -MF $(DEPDIR)/libpsnap_a-orient.Tpo -c -o libpsnap_a-orient.o `test -f 'orient.cc' || echo '$(srcdir)/'`orient.cc
	mv -f $(DEPDIR)/libpsnap_a-orient.Tpo $(DEPDIR)/libpsnap_a-orient.Po
#	source='orient.cc' object='libpsnap_a-orient.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-orient.o `test -f 'orient.cc' || echo '$(srcdir)/'`orient.cc

libpsnap_a-orient.obj: orient.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-orient.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-orient.Tpo -c -o libpsnap_a-orient.obj `if test -f 'orient.cc'; then $(CYGPATH_W) 'orient.cc'; else $(CYGPATH_W) '$(srcdir)/orient.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-orient.Tpo $(DEPDIR)/libpsnap_a-orient.Po
#	source='orient.cc' object='libpsnap_a-orient.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-orient.obj `if test -f 'orient.cc'; then $(CYGPATH_W) 'orient.cc'; else $(CYGPATH_W) '$(srcdir)/orient.cc'; fi`

libpsnap_a-peripheral_curves.o: peripheral_curves.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-peripheral_curves.o -MD -MP -MF $(DEPDIR)/libpsnap_a-peripheral_curves.Tpo -c -o libpsnap_a-peripheral_curves.o `test -f 'peripheral_curves.cc' || echo '$(srcdir)/'`peripheral_curves.cc
	mv -f $(DEPDIR)/libpsnap_a-peripheral_curves.Tpo $(DEPDIR)/libpsnap_a-peripheral_curves.Po
#	source='peripheral_curves.cc' object='libpsnap_a-peripheral_curves.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-peripheral_curves.o `test -f 'peripheral_curves.cc' || echo '$(srcdir)/'`peripheral_curves.cc

libpsnap_a-peripheral_curves.obj: peripheral_curves.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-peripheral_curves.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-peripheral_curves.Tpo -c -o libpsnap_a-peripheral_curves.obj `if test -f 'peripheral_curves.cc'; then $(CYGPATH_W) 'peripheral_curves.cc'; else $(CYGPATH_W) '$(srcdir)/peripheral_curves.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-peripheral_curves.Tpo $(DEPDIR)/libpsnap_a-peripheral_curves.Po
#	source='peripheral_curves.cc' object='libpsnap_a-peripheral_curves.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-peripheral_curves.obj `if test -f 'peripheral_curves.cc'; then $(CYGPATH_W) 'peripheral_curves.cc'; else $(CYGPATH_W) '$(srcdir)/peripheral_curves.cc'; fi`

libpsnap_a-polyhedral_group.o: polyhedral_group.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-polyhedral_group.o -MD -MP -MF $(DEPDIR)/libpsnap_a-polyhedral_group.Tpo -c -o libpsnap_a-polyhedral_group.o `test -f 'polyhedral_group.cc' || echo '$(srcdir)/'`polyhedral_group.cc
	mv -f $(DEPDIR)/libpsnap_a-polyhedral_group.Tpo $(DEPDIR)/libpsnap_a-polyhedral_group.Po
#	source='polyhedral_group.cc' object='libpsnap_a-polyhedral_group.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-polyhedral_group.o `test -f 'polyhedral_group.cc' || echo '$(srcdir)/'`polyhedral_group.cc

libpsnap_a-polyhedral_group.obj: polyhedral_group.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-polyhedral_group.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-polyhedral_group.Tpo -c -o libpsnap_a-polyhedral_group.obj `if test -f 'polyhedral_group.cc'; then $(CYGPATH_W) 'polyhedral_group.cc'; else $(CYGPATH_W) '$(srcdir)/polyhedral_group.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-polyhedral_group.Tpo $(DEPDIR)/libpsnap_a-polyhedral_group.Po
#	source='polyhedral_group.cc' object='libpsnap_a-polyhedral_group.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-polyhedral_group.obj `if test -f 'polyhedral_group.cc'; then $(CYGPATH_W) 'polyhedral_group.cc'; else $(CYGPATH_W) '$(srcdir)/polyhedral_group.cc'; fi`

libpsnap_a-positioned_tet.o: positioned_tet.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-positioned_tet.o -MD -MP -MF $(DEPDIR)/libpsnap_a-positioned_tet.Tpo -c -o libpsnap_a-positioned_tet.o `test -f 'positioned_tet.cc' || echo '$(srcdir)/'`positioned_tet.cc
	mv -f $(DEPDIR)/libpsnap_a-positioned_tet.Tpo $(DEPDIR)/libpsnap_a-positioned_tet.Po
#	source='positioned_tet.cc' object='libpsnap_a-positioned_tet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-positioned_tet.o `test -f 'positioned_tet.cc' || echo '$(srcdir)/'`positioned_tet.cc

libpsnap_a-positioned_tet.obj: positioned_tet.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-positioned_tet.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-positioned_tet.Tpo -c -o libpsnap_a-positioned_tet.obj `if test -f 'positioned_tet.cc'; then $(CYGPATH_W) 'positioned_tet.cc'; else $(CYGPATH_W) '$(srcdir)/positioned_tet.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-positioned_tet.Tpo $(DEPDIR)/libpsnap_a-positioned_tet.Po
#	source='positioned_tet.cc' object='libpsnap_a-positioned_tet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-positioned_tet.obj `if test -f 'positioned_tet.cc'; then $(CYGPATH_W) 'positioned_tet.cc'; else $(CYGPATH_W) '$(srcdir)/positioned_tet.cc'; fi`

libpsnap_a-precision.o: precision.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-precision.o -MD -MP -MF $(DEPDIR)/libpsnap_a-precision.Tpo -c -o libpsnap_a-precision.o `test -f 'precision.cc' || echo '$(srcdir)/'`precision.cc
	mv -f $(DEPDIR)/libpsnap_a-precision.Tpo $(DEPDIR)/libpsnap_a-precision.Po
#	source='precision.cc' object='libpsnap_a-precision.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-precision.o `test -f 'precision.cc' || echo '$(srcdir)/'`precision.cc

libpsnap_a-precision.obj: precision.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-precision.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-precision.Tpo -c -o libpsnap_a-precision.obj `if test -f 'precision.cc'; then $(CYGPATH_W) 'precision.cc'; else $(CYGPATH_W) '$(srcdir)/precision.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-precision.Tpo $(DEPDIR)/libpsnap_a-precision.Po
#	source='precision.cc' object='libpsnap_a-precision.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-precision.obj `if test -f 'precision.cc'; then $(CYGPATH_W) 'precision.cc'; else $(CYGPATH_W) '$(srcdir)/precision.cc'; fi`

libpsnap_a-punctured_torus_bundles.o: punctured_torus_bundles.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-punctured_torus_bundles.o -MD -MP -MF $(DEPDIR)/libpsnap_a-punctured_torus_bundles.Tpo -c -o libpsnap_a-punctured_torus_bundles.o `test -f 'punctured_torus_bundles.cc' || echo '$(srcdir)/'`punctured_torus_bundles.cc
	mv -f $(DEPDIR)/libpsnap_a-punctured_torus_bundles.Tpo $(DEPDIR)/libpsnap_a-punctured_torus_bundles.Po
#	source='punctured_torus_bundles.cc' object='libpsnap_a-punctured_torus_bundles.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-punctured_torus_bundles.o `test -f 'punctured_torus_bundles.cc' || echo '$(srcdir)/'`punctured_torus_bundles.cc

libpsnap_a-punctured_torus_bundles.obj: punctured_torus_bundles.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-punctured_torus_bundles.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-punctured_torus_bundles.Tpo -c -o libpsnap_a-punctured_torus_bundles.obj `if test -f 'punctured_torus_bundles.cc'; then $(CYGPATH_W) 'punctured_torus_bundles.cc'; else $(CYGPATH_W) '$(srcdir)/punctured_torus_bundles.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-punctured_torus_bundles.Tpo $(DEPDIR)/libpsnap_a-punctured_torus_bundles.Po
#	source='punctured_torus_bundles.cc' object='libpsnap_a-punctured_torus_bundles.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-punctured_torus_bundles.obj `if test -f 'punctured_torus_bundles.cc'; then $(CYGPATH_W) 'punctured_torus_bundles.cc'; else $(CYGPATH_W) '$(srcdir)/punctured_torus_bundles.cc'; fi`

libpsnap_a-quotients.o: quotients.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-quotients.o -MD -MP -MF $(DEPDIR)/libpsnap_a-quotients.Tpo -c -o libpsnap_a-quotients.o `test -f 'quotients.cc' || echo '$(srcdir)/'`quotients.cc
	mv -f $(DEPDIR)/libpsnap_a-quotients.Tpo $(DEPDIR)/libpsnap_a-quotients.Po
#	source='quotients.cc' object='libpsnap_a-quotients.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-quotients.o `test -f 'quotients.cc' || echo '$(srcdir)/'`quotients.cc

libpsnap_a-quotients.obj: quotients.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-quotients.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-quotients.Tpo -c -o libpsnap_a-quotients.obj `if test -f 'quotients.cc'; then $(CYGPATH_W) 'quotients.cc'; else $(CYGPATH_W) '$(srcdir)/quotients.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-quotients.Tpo $(DEPDIR)/libpsnap_a-quotients.Po
#	source='quotients.cc' object='libpsnap_a-quotients.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-quotients.obj `if test -f 'quotients.cc'; then $(CYGPATH_W) 'quotients.cc'; else $(CYGPATH_W) '$(srcdir)/quotients.cc'; fi`

libpsnap_a-rehydrate_census.o: rehydrate_census.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-rehydrate_census.o -MD -MP -MF $(DEPDIR)/libpsnap_a-rehydrate_census.Tpo -c -o libpsnap_a-rehydrate_census.o `test -f 'rehydrate_census.cc' || echo '$(srcdir)/'`rehydrate_census.cc
	mv -f $(DEPDIR)/libpsnap_a-rehydrate_census.Tpo $(DEPDIR)/libpsnap_a-rehydrate_census.Po
#	source='rehydrate_census.cc' object='libpsnap_a-rehydrate_census.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-rehydrate_census.o `test -f 'rehydrate_census.cc' || echo '$(srcdir)/'`rehydrate_census.cc

libpsnap_a-rehydrate_census.obj: rehydrate_census.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-rehydrate_census.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-rehydrate_census.Tpo -c -o libpsnap_a-rehydrate_census.obj `if test -f 'rehydrate_census.cc'; then $(CYGPATH_W) 'rehydrate_census.cc'; else $(CYGPATH_W) '$(srcdir)/rehydrate_census.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-rehydrate_census.Tpo $(DEPDIR)/libpsnap_a-rehydrate_census.Po
#	source='rehydrate_census.cc' object='libpsnap_a-rehydrate_census.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-rehydrate_census.obj `if test -f 'rehydrate_census.cc'; then $(CYGPATH_W) 'rehydrate_census.cc'; else $(CYGPATH_W) '$(srcdir)/rehydrate_census.cc'; fi`

libpsnap_a-representations.o: representations.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-representations.o -MD -MP -MF $(DEPDIR)/libpsnap_a-representations.Tpo -c -o libpsnap_a-representations.o `test -f 'representations.cc' || echo '$(srcdir)/'`representations.cc
	mv -f $(DEPDIR)/libpsnap_a-representations.Tpo $(DEPDIR)/libpsnap_a-representations.Po
#	source='representations.cc' object='libpsnap_a-representations.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-representations.o `test -f 'representations.cc' || echo '$(srcdir)/'`representations.cc

libpsnap_a-representations.obj: representations.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-representations.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-representations.Tpo -c -o libpsnap_a-representations.obj `if test -f 'representations.cc'; then $(CYGPATH_W) 'representations.cc'; else $(CYGPATH_W) '$(srcdir)/representations.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-representations.Tpo $(DEPDIR)/libpsnap_a-representations.Po
#	source='representations.cc' object='libpsnap_a-representations.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-representations.obj `if test -f 'representations.cc'; then $(CYGPATH_W) 'representations.cc'; else $(CYGPATH_W) '$(srcdir)/representations.cc'; fi`

libpsnap_a-shingling.o: shingling.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-shingling.o -MD -MP -MF $(DEPDIR)/libpsnap_a-shingling.Tpo -c -o libpsnap_a-shingling.o `test -f 'shingling.cc' || echo '$(srcdir)/'`shingling.cc
	mv -f $(DEPDIR)/libpsnap_a-shingling.Tpo $(DEPDIR)/libpsnap_a-shingling.Po
#	source='shingling.cc' object='libpsnap_a-shingling.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-shingling.o `test -f 'shingling.cc' || echo '$(srcdir)/'`shingling.cc

libpsnap_a-shingling.obj: shingling.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-shingling.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-shingling.Tpo -c -o libpsnap_a-shingling.obj `if test -f 'shingling.cc'; then $(CYGPATH_W) 'shingling.cc'; else $(CYGPATH_W) '$(srcdir)/shingling.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-shingling.Tpo $(DEPDIR)/libpsnap_a-shingling.Po
#	source='shingling.cc' object='libpsnap_a-shingling.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-shingling.obj `if test -f 'shingling.cc'; then $(CYGPATH_W) 'shingling.cc'; else $(CYGPATH_W) '$(srcdir)/shingling.cc'; fi`

libpsnap_a-shortest_cusp_basis.o: shortest_cusp_basis.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-shortest_cusp_basis.o -MD -MP -MF $(DEPDIR)/libpsnap_a-shortest_cusp_basis.Tpo -c -o libpsnap_a-shortest_cusp_basis.o `test -f 'shortest_cusp_basis.cc' || echo '$(srcdir)/'`shortest_cusp_basis.cc
	mv -f $(DEPDIR)/libpsnap_a-shortest_cusp_basis.Tpo $(DEPDIR)/libpsnap_a-shortest_cusp_basis.Po
#	source='shortest_cusp_basis.cc' object='libpsnap_a-shortest_cusp_basis.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-shortest_cusp_basis.o `test -f 'shortest_cusp_basis.cc' || echo '$(srcdir)/'`shortest_cusp_basis.cc

libpsnap_a-shortest_cusp_basis.obj: shortest_cusp_basis.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-shortest_cusp_basis.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-shortest_cusp_basis.Tpo -c -o libpsnap_a-shortest_cusp_basis.obj `if test -f 'shortest_cusp_basis.cc'; then $(CYGPATH_W) 'shortest_cusp_basis.cc'; else $(CYGPATH_W) '$(srcdir)/shortest_cusp_basis.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-shortest_cusp_basis.Tpo $(DEPDIR)/libpsnap_a-shortest_cusp_basis.Po
#	source='shortest_cusp_basis.cc' object='libpsnap_a-shortest_cusp_basis.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-shortest_cusp_basis.obj `if test -f 'shortest_cusp_basis.cc'; then $(CYGPATH_W) 'shortest_cusp_basis.cc'; else $(CYGPATH_W) '$(srcdir)/shortest_cusp_basis.cc'; fi`

libpsnap_a-simplify_triangulation.o: simplify_triangulation.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-simplify_triangulation.o -MD -MP -MF $(DEPDIR)/libpsnap_a-simplify_triangulation.Tpo -c -o libpsnap_a-simplify_triangulation.o `test -f 'simplify_triangulation.cc' || echo '$(srcdir)/'`simplify_triangulation.cc
	mv -f $(DEPDIR)/libpsnap_a-simplify_triangulation.Tpo $(DEPDIR)/libpsnap_a-simplify_triangulation.Po
#	source='simplify_triangulation.cc' object='libpsnap_a-simplify_triangulation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-simplify_triangulation.o `test -f 'simplify_triangulation.cc' || echo '$(srcdir)/'`simplify_triangulation.cc

libpsnap_a-simplify_triangulation.obj: simplify_triangulation.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-simplify_triangulation.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-simplify_triangulation.Tpo -c -o libpsnap_a-simplify_triangulation.obj `if test -f 'simplify_triangulation.cc'; then $(CYGPATH_W) 'simplify_triangulation.cc'; else $(CYGPATH_W) '$(srcdir)/simplify_triangulation.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-simplify_triangulation.Tpo $(DEPDIR)/libpsnap_a-simplify_triangulation.Po
#	source='simplify_triangulation.cc' object='libpsnap_a-simplify_triangulation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-simplify_triangulation.obj `if test -f 'simplify_triangulation.cc'; then $(CYGPATH_W) 'simplify_triangulation.cc'; else $(CYGPATH_W) '$(srcdir)/simplify_triangulation.cc'; fi`

libpsnap_a-sl2c_matrices.o: sl2c_matrices.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-sl2c_matrices.o -MD -MP -MF $(DEPDIR)/libpsnap_a-sl2c_matrices.Tpo -c -o libpsnap_a-sl2c_matrices.o `test -f 'sl2c_matrices.cc' || echo '$(srcdir)/'`sl2c_matrices.cc
	mv -f $(DEPDIR)/libpsnap_a-sl2c_matrices.Tpo $(DEPDIR)/libpsnap_a-sl2c_matrices.Po
#	source='sl2c_matrices.cc' object='libpsnap_a-sl2c_matrices.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-sl2c_matrices.o `test -f 'sl2c_matrices.cc' || echo '$(srcdir)/'`sl2c_matrices.cc

libpsnap_a-sl2c_matrices.obj: sl2c_matrices.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-sl2c_matrices.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-sl2c_matrices.Tpo -c -o libpsnap_a-sl2c_matrices.obj `if test -f 'sl2c_matrices.cc'; then $(CYGPATH_W) 'sl2c_matrices.cc'; else $(CYGPATH_W) '$(srcdir)/sl2c_matrices.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-sl2c_matrices.Tpo $(DEPDIR)/libpsnap_a-sl2c_matrices.Po
#	source='sl2c_matrices.cc' object='libpsnap_a-sl2c_matrices.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-sl2c_matrices.obj `if test -f 'sl2c_matrices.cc'; then $(CYGPATH_W) 'sl2c_matrices.cc'; else $(CYGPATH_W) '$(srcdir)/sl2c_matrices.cc'; fi`

libpsnap_a-solve_equations.o: solve_equations.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-solve_equations.o -MD -MP -MF $(DEPDIR)/libpsnap_a-solve_equations.Tpo -c -o libpsnap_a-solve_equations.o `test -f 'solve_equations.cc' || echo '$(srcdir)/'`solve_equations.cc
	mv -f $(DEPDIR)/libpsnap_a-solve_equations.Tpo $(DEPDIR)/libpsnap_a-solve_equations.Po
#	source='solve_equations.cc' object='libpsnap_a-solve_equations.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-solve_equations.o `test -f 'solve_equations.cc' || echo '$(srcdir)/'`solve_equations.cc

libpsnap_a-solve_equations.obj: solve_equations.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-solve_equations.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-solve_equations.Tpo -c -o libpsnap_a-solve_equations.obj `if test -f 'solve_equations.cc'; then $(CYGPATH_W) 'solve_equations.cc'; else $(CYGPATH_W) '$(srcdir)/solve_equations.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-solve_equations.Tpo $(DEPDIR)/libpsnap_a-solve_equations.Po
#	source='solve_equations.cc' object='libpsnap_a-solve_equations.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-solve_equations.obj `if test -f 'solve_equations.cc'; then $(CYGPATH_W) 'solve_equations.cc'; else $(CYGPATH_W) '$(srcdir)/solve_equations.cc'; fi`

libpsnap_a-subdivide.o: subdivide.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-subdivide.o -MD -MP -MF $(DEPDIR)/libpsnap_a-subdivide.Tpo -c -o libpsnap_a-subdivide.o `test -f 'subdivide.cc' || echo '$(srcdir)/'`subdivide.cc
	mv -f $(DEPDIR)/libpsnap_a-subdivide.Tpo $(DEPDIR)/libpsnap_a-subdivide.Po
#	source='subdivide.cc' object='libpsnap_a-subdivide.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-subdivide.o `test -f 'subdivide.cc' || echo '$(srcdir)/'`subdivide.cc

libpsnap_a-subdivide.obj: subdivide.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-subdivide.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-subdivide.Tpo -c -o libpsnap_a-subdivide.obj `if test -f 'subdivide.cc'; then $(CYGPATH_W) 'subdivide.cc'; else $(CYGPATH_W) '$(srcdir)/subdivide.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-subdivide.Tpo $(DEPDIR)/libpsnap_a-subdivide.Po
#	source='subdivide.cc' object='libpsnap_a-subdivide.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-subdivide.obj `if test -f 'subdivide.cc'; then $(CYGPATH_W) 'subdivide.cc'; else $(CYGPATH_W) '$(srcdir)/subdivide.cc'; fi`

libpsnap_a-symmetric_group.o: symmetric_group.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-symmetric_group.o -MD -MP -MF $(DEPDIR)/libpsnap_a-symmetric_group.Tpo -c -o libpsnap_a-symmetric_group.o `test -f 'symmetric_group.cc' || echo '$(srcdir)/'`symmetric_group.cc
	mv -f $(DEPDIR)/libpsnap_a-symmetric_group.Tpo $(DEPDIR)/libpsnap_a-symmetric_group.Po
#	source='symmetric_group.cc' object='libpsnap_a-symmetric_group.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-symmetric_group.o `test -f 'symmetric_group.cc' || echo '$(srcdir)/'`symmetric_group.cc

libpsnap_a-symmetric_group.obj: symmetric_group.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-symmetric_group.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-symmetric_group.Tpo -c -o libpsnap_a-symmetric_group.obj `if test -f 'symmetric_group.cc'; then $(CYGPATH_W) 'symmetric_group.cc'; else $(CYGPATH_W) '$(srcdir)/symmetric_group.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-symmetric_group.Tpo $(DEPDIR)/libpsnap_a-symmetric_group.Po
#	source='symmetric_group.cc' object='libpsnap_a-symmetric_group.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-symmetric_group.obj `if test -f 'symmetric_group.cc'; then $(CYGPATH_W) 'symmetric_group.cc'; else $(CYGPATH_W) '$(srcdir)/symmetric_group.cc'; fi`

libpsnap_a-symmetry_group.o: symmetry_group.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-symmetry_group.o -MD -MP -MF $(DEPDIR)/libpsnap_a-symmetry_group.Tpo -c -o libpsnap_a-symmetry_group.o `test -f 'symmetry_group.cc' || echo '$(srcdir)/'`symmetry_group.cc
	mv -f $(DEPDIR)/libpsnap_a-symmetry_group.Tpo $(DEPDIR)/libpsnap_a-symmetry_group.Po
#	source='symmetry_group.cc' object='libpsnap_a-symmetry_group.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-symmetry_group.o `test -f 'symmetry_group.cc' || echo '$(srcdir)/'`symmetry_group.cc

libpsnap_a-symmetry_group.obj: symmetry_group.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-symmetry_group.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-symmetry_group.Tpo -c -o libpsnap_a-symmetry_group.obj `if test -f 'symmetry_group.cc'; then $(CYGPATH_W) 'symmetry_group.cc'; else $(CYGPATH_W) '$(srcdir)/symmetry_group.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-symmetry_group.Tpo $(DEPDIR)/libpsnap_a-symmetry_group.Po
#	source='symmetry_group.cc' object='libpsnap_a-symmetry_group.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-symmetry_group.obj `if test -f 'symmetry_group.cc'; then $(CYGPATH_W) 'symmetry_group.cc'; else $(CYGPATH_W) '$(srcdir)/symmetry_group.cc'; fi`

libpsnap_a-symmetry_group_closed.o: symmetry_group_closed.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-symmetry_group_closed.o -MD -MP -MF $(DEPDIR)/libpsnap_a-symmetry_group_closed.Tpo -c -o libpsnap_a-symmetry_group_closed.o `test -f 'symmetry_group_closed.cc' || echo '$(srcdir)/'`symmetry_group_closed.cc
	mv -f $(DEPDIR)/libpsnap_a-symmetry_group_closed.Tpo $(DEPDIR)/libpsnap_a-symmetry_group_closed.Po
#	source='symmetry_group_closed.cc' object='libpsnap_a-symmetry_group_closed.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-symmetry_group_closed.o `test -f 'symmetry_group_closed.cc' || echo '$(srcdir)/'`symmetry_group_closed.cc

libpsnap_a-symmetry_group_closed.obj: symmetry_group_closed.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-symmetry_group_closed.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-symmetry_group_closed.Tpo -c -o libpsnap_a-symmetry_group_closed.obj `if test -f 'symmetry_group_closed.cc'; then $(CYGPATH_W) 'symmetry_group_closed.cc'; else $(CYGPATH_W) '$(srcdir)/symmetry_group_closed.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-symmetry_group_closed.Tpo $(DEPDIR)/libpsnap_a-symmetry_group_closed.Po
#	source='symmetry_group_closed.cc' object='libpsnap_a-symmetry_group_closed.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-symmetry_group_closed.obj `if test -f 'symmetry_group_closed.cc'; then $(CYGPATH_W) 'symmetry_group_closed.cc'; else $(CYGPATH_W) '$(srcdir)/symmetry_group_closed.cc'; fi`

libpsnap_a-symmetry_group_cusped.o: symmetry_group_cusped.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-symmetry_group_cusped.o -MD -MP -MF $(DEPDIR)/libpsnap_a-symmetry_group_cusped.Tpo -c -o libpsnap_a-symmetry_group_cusped.o `test -f 'symmetry_group_cusped.cc' || echo '$(srcdir)/'`symmetry_group_cusped.cc
	mv -f $(DEPDIR)/libpsnap_a-symmetry_group_cusped.Tpo $(DEPDIR)/libpsnap_a-symmetry_group_cusped.Po
#	source='symmetry_group_cusped.cc' object='libpsnap_a-symmetry_group_cusped.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-symmetry_group_cusped.o `test -f 'symmetry_group_cusped.cc' || echo '$(srcdir)/'`symmetry_group_cusped.cc

libpsnap_a-symmetry_group_cusped.obj: symmetry_group_cusped.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-symmetry_group_cusped.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-symmetry_group_cusped.Tpo -c -o libpsnap_a-symmetry_group_cusped.obj `if test -f 'symmetry_group_cusped.cc'; then $(CYGPATH_W) 'symmetry_group_cusped.cc'; else $(CYGPATH_W) '$(srcdir)/symmetry_group_cusped.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-symmetry_group_cusped.Tpo $(DEPDIR)/libpsnap_a-symmetry_group_cusped.Po
#	source='symmetry_group_cusped.cc' object='libpsnap_a-symmetry_group_cusped.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-symmetry_group_cusped.obj `if test -f 'symmetry_group_cusped.cc'; then $(CYGPATH_W) 'symmetry_group_cusped.cc'; else $(CYGPATH_W) '$(srcdir)/symmetry_group_cusped.cc'; fi`

libpsnap_a-symmetry_group_info.o: symmetry_group_info.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-symmetry_group_info.o -MD -MP -MF $(DEPDIR)/libpsnap_a-symmetry_group_info.Tpo -c -o libpsnap_a-symmetry_group_info.o `test -f 'symmetry_group_info.cc' || echo '$(srcdir)/'`symmetry_group_info.cc
	mv -f $(DEPDIR)/libpsnap_a-symmetry_group_info.Tpo $(DEPDIR)/libpsnap_a-symmetry_group_info.Po
#	source='symmetry_group_info.cc' object='libpsnap_a-symmetry_group_info.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-symmetry_group_info.o `test -f 'symmetry_group_info.cc' || echo '$(srcdir)/'`symmetry_group_info.cc

libpsnap_a-symmetry_group_info.obj: symmetry_group_info.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-symmetry_group_info.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-symmetry_group_info.Tpo -c -o libpsnap_a-symmetry_group_info.obj `if test -f 'symmetry_group_info.cc'; then $(CYGPATH_W) 'symmetry_group_info.cc'; else $(CYGPATH_W) '$(srcdir)/symmetry_group_info.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-symmetry_group_info.Tpo $(DEPDIR)/libpsnap_a-symmetry_group_info.Po
#	source='symmetry_group_info.cc' object='libpsnap_a-symmetry_group_info.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-symmetry_group_info.obj `if test -f 'symmetry_group_info.cc'; then $(CYGPATH_W) 'symmetry_group_info.cc'; else $(CYGPATH_W) '$(srcdir)/symmetry_group_info.cc'; fi`

libpsnap_a-tables.o: tables.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-tables.o -MD -MP -MF $(DEPDIR)/libpsnap_a-tables.Tpo -c -o libpsnap_a-tables.o `test -f 'tables.cc' || echo '$(srcdir)/'`tables.cc
	mv -f $(DEPDIR)/libpsnap_a-tables.Tpo $(DEPDIR)/libpsnap_a-tables.Po
#	source='tables.cc' object='libpsnap_a-tables.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-tables.o `test -f 'tables.cc' || echo '$(srcdir)/'`tables.cc

libpsnap_a-tables.obj: tables.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-tables.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-tables.Tpo -c -o libpsnap_a-tables.obj `if test -f 'tables.cc'; then $(CYGPATH_W) 'tables.cc'; else $(CYGPATH_W) '$(srcdir)/tables.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-tables.Tpo $(DEPDIR)/libpsnap_a-tables.Po
#	source='tables.cc' object='libpsnap_a-tables.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-tables.obj `if test -f 'tables.cc'; then $(CYGPATH_W) 'tables.cc'; else $(CYGPATH_W) '$(srcdir)/tables.cc'; fi`

libpsnap_a-terse_triangulation.o: terse_triangulation.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-terse_triangulation.o -MD -MP -MF $(DEPDIR)/libpsnap_a-terse_triangulation.Tpo -c -o libpsnap_a-terse_triangulation.o `test -f 'terse_triangulation.cc' || echo '$(srcdir)/'`terse_triangulation.cc
	mv -f $(DEPDIR)/libpsnap_a-terse_triangulation.Tpo $(DEPDIR)/libpsnap_a-terse_triangulation.Po
#	source='terse_triangulation.cc' object='libpsnap_a-terse_triangulation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-terse_triangulation.o `test -f 'terse_triangulation.cc' || echo '$(srcdir)/'`terse_triangulation.cc

libpsnap_a-terse_triangulation.obj: terse_triangulation.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-terse_triangulation.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-terse_triangulation.Tpo -c -o libpsnap_a-terse_triangulation.obj `if test -f 'terse_triangulation.cc'; then $(CYGPATH_W) 'terse_triangulation.cc'; else $(CYGPATH_W) '$(srcdir)/terse_triangulation.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-terse_triangulation.Tpo $(DEPDIR)/libpsnap_a-terse_triangulation.Po
#	source='terse_triangulation.cc' object='libpsnap_a-terse_triangulation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-terse_triangulation.obj `if test -f 'terse_triangulation.cc'; then $(CYGPATH_W) 'terse_triangulation.cc'; else $(CYGPATH_W) '$(srcdir)/terse_triangulation.cc'; fi`

libpsnap_a-tersest_triangulation.o: tersest_triangulation.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-tersest_triangulation.o -MD -MP -MF $(DEPDIR)/libpsnap_a-tersest_triangulation.Tpo -c -o libpsnap_a-tersest_triangulation.o `test -f 'tersest_triangulation.cc' || echo '$(srcdir)/'`tersest_triangulation.cc
	mv -f $(DEPDIR)/libpsnap_a-tersest_triangulation.Tpo $(DEPDIR)/libpsnap_a-tersest_triangulation.Po
#	source='tersest_triangulation.cc' object='libpsnap_a-tersest_triangulation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-tersest_triangulation.o `test -f 'tersest_triangulation.cc' || echo '$(srcdir)/'`tersest_triangulation.cc

libpsnap_a-tersest_triangulation.obj: tersest_triangulation.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-tersest_triangulation.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-tersest_triangulation.Tpo -c -o libpsnap_a-tersest_triangulation.obj `if test -f 'tersest_triangulation.cc'; then $(CYGPATH_W) 'tersest_triangulation.cc'; else $(CYGPATH_W) '$(srcdir)/tersest_triangulation.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-tersest_triangulation.Tpo $(DEPDIR)/libpsnap_a-tersest_triangulation.Po
#	source='tersest_triangulation.cc' object='libpsnap_a-tersest_triangulation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-tersest_triangulation.obj `if test -f 'tersest_triangulation.cc'; then $(CYGPATH_W) 'tersest_triangulation.cc'; else $(CYGPATH_W) '$(srcdir)/tersest_triangulation.cc'; fi`

libpsnap_a-tet_shapes.o: tet_shapes.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-tet_shapes.o -MD -MP -MF $(DEPDIR)/libpsnap_a-tet_shapes.Tpo -c -o libpsnap_a-tet_shapes.o `test -f 'tet_shapes.cc' || echo '$(srcdir)/'`tet_shapes.cc
	mv -f $(DEPDIR)/libpsnap_a-tet_shapes.Tpo $(DEPDIR)/libpsnap_a-tet_shapes.Po
#	source='tet_shapes.cc' object='libpsnap_a-tet_shapes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-tet_shapes.o `test -f 'tet_shapes.cc' || echo '$(srcdir)/'`tet_shapes.cc

libpsnap_a-tet_shapes.obj: tet_shapes.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-tet_shapes.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-tet_shapes.Tpo -c -o libpsnap_a-tet_shapes.obj `if test -f 'tet_shapes.cc'; then $(CYGPATH_W) 'tet_shapes.cc'; else $(CYGPATH_W) '$(srcdir)/tet_shapes.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-tet_shapes.Tpo $(DEPDIR)/libpsnap_a-tet_shapes.Po
#	source='tet_shapes.cc' object='libpsnap_a-tet_shapes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-tet_shapes.obj `if test -f 'tet_shapes.cc'; then $(CYGPATH_W) 'tet_shapes.cc'; else $(CYGPATH_W) '$(srcdir)/tet_shapes.cc'; fi`

libpsnap_a-tidy_peripheral_curves.o: tidy_peripheral_curves.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-tidy_peripheral_curves.o -MD -MP -MF $(DEPDIR)/libpsnap_a-tidy_peripheral_curves.Tpo -c -o libpsnap_a-tidy_peripheral_curves.o `test -f 'tidy_peripheral_curves.cc' || echo '$(srcdir)/'`tidy_peripheral_curves.cc
	mv -f $(DEPDIR)/libpsnap_a-tidy_peripheral_curves.Tpo $(DEPDIR)/libpsnap_a-tidy_peripheral_curves.Po
#	source='tidy_peripheral_curves.cc' object='libpsnap_a-tidy_peripheral_curves.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-tidy_peripheral_curves.o `test -f 'tidy_peripheral_curves.cc' || echo '$(srcdir)/'`tidy_peripheral_curves.cc

libpsnap_a-tidy_peripheral_curves.obj: tidy_peripheral_curves.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-tidy_peripheral_curves.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-tidy_peripheral_curves.Tpo -c -o libpsnap_a-tidy_peripheral_curves.obj `if test -f 'tidy_peripheral_curves.cc'; then $(CYGPATH_W) 'tidy_peripheral_curves.cc'; else $(CYGPATH_W) '$(srcdir)/tidy_peripheral_curves.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-tidy_peripheral_curves.Tpo $(DEPDIR)/libpsnap_a-tidy_peripheral_curves.Po
#	source='tidy_peripheral_curves.cc' object='libpsnap_a-tidy_peripheral_curves.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-tidy_peripheral_curves.obj `if test -f 'tidy_peripheral_curves.cc'; then $(CYGPATH_W) 'tidy_peripheral_curves.cc'; else $(CYGPATH_W) '$(srcdir)/tidy_peripheral_curves.cc'; fi`

libpsnap_a-transcendentals.o: transcendentals.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-transcendentals.o -MD -MP -MF $(DEPDIR)/libpsnap_a-transcendentals.Tpo -c -o libpsnap_a-transcendentals.o `test -f 'transcendentals.cc' || echo '$(srcdir)/'`transcendentals.cc
	mv -f $(DEPDIR)/libpsnap_a-transcendentals.Tpo $(DEPDIR)/libpsnap_a-transcendentals.Po
#	source='transcendentals.cc' object='libpsnap_a-transcendentals.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-transcendentals.o `test -f 'transcendentals.cc' || echo '$(srcdir)/'`transcendentals.cc

libpsnap_a-transcendentals.obj: transcendentals.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-transcendentals.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-transcendentals.Tpo -c -o libpsnap_a-transcendentals.obj `if test -f 'transcendentals.cc'; then $(CYGPATH_W) 'transcendentals.cc'; else $(CYGPATH_W) '$(srcdir)/transcendentals.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-transcendentals.Tpo $(DEPDIR)/libpsnap_a-transcendentals.Po
#	source='transcendentals.cc' object='libpsnap_a-transcendentals.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-transcendentals.obj `if test -f 'transcendentals.cc'; then $(CYGPATH_W) 'transcendentals.cc'; else $(CYGPATH_W) '$(srcdir)/transcendentals.cc'; fi`

libpsnap_a-triangulations.o: triangulations.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-triangulations.o -MD -MP -MF $(DEPDIR)/libpsnap_a-triangulations.Tpo -c -o libpsnap_a-triangulations.o `test -f 'triangulations.cc' || echo '$(srcdir)/'`triangulations.cc
	mv -f $(DEPDIR)/libpsnap_a-triangulations.Tpo $(DEPDIR)/libpsnap_a-triangulations.Po
#	source='triangulations.cc' object='libpsnap_a-triangulations.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-triangulations.o `test -f 'triangulations.cc' || echo '$(srcdir)/'`triangulations.cc

libpsnap_a-triangulations.obj: triangulations.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-triangulations.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-triangulations.Tpo -c -o libpsnap_a-triangulations.obj `if test -f 'triangulations.cc'; then $(CYGPATH_W) 'triangulations.cc'; else $(CYGPATH_W) '$(srcdir)/triangulations.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-triangulations.Tpo $(DEPDIR)/libpsnap_a-triangulations.Po
#	source='triangulations.cc' object='libpsnap_a-triangulations.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-triangulations.obj `if test -f 'triangulations.cc'; then $(CYGPATH_W) 'triangulations.cc'; else $(CYGPATH_W) '$(srcdir)/triangulations.cc'; fi`

libpsnap_a-two_bridge.o: two_bridge.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-two_bridge.o -MD -MP -MF $(DEPDIR)/libpsnap_a-two_bridge.Tpo -c -o libpsnap_a-two_bridge.o `test -f 'two_bridge.cc' || echo '$(srcdir)/'`two_bridge.cc
	mv -f $(DEPDIR)/libpsnap_a-two_bridge.Tpo $(DEPDIR)/libpsnap_a-two_bridge.Po
#	source='two_bridge.cc' object='libpsnap_a-two_bridge.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-two_bridge.o `test -f 'two_bridge.cc' || echo '$(srcdir)/'`two_bridge.cc

libpsnap_a-two_bridge.obj: two_bridge.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-two_bridge.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-two_bridge.Tpo -c -o libpsnap_a-two_bridge.obj `if test -f 'two_bridge.cc'; then $(CYGPATH_W) 'two_bridge.cc'; else $(CYGPATH_W) '$(srcdir)/two_bridge.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-two_bridge.Tpo $(DEPDIR)/libpsnap_a-two_bridge.Po
#	source='two_bridge.cc' object='libpsnap_a-two_bridge.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-two_bridge.obj `if test -f 'two_bridge.cc'; then $(CYGPATH_W) 'two_bridge.cc'; else $(CYGPATH_W) '$(srcdir)/two_bridge.cc'; fi`

libpsnap_a-unix_io.o: unix_io.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-unix_io.o -MD -MP -MF $(DEPDIR)/libpsnap_a-unix_io.Tpo -c -o libpsnap_a-unix_io.o `test -f 'unix_io.cc' || echo '$(srcdir)/'`unix_io.cc
	mv -f $(DEPDIR)/libpsnap_a-unix_io.Tpo $(DEPDIR)/libpsnap_a-unix_io.Po
#	source='unix_io.cc' object='libpsnap_a-unix_io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-unix_io.o `test -f 'unix_io.cc' || echo '$(srcdir)/'`unix_io.cc

libpsnap_a-unix_io.obj: unix_io.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-unix_io.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-unix_io.Tpo -c -o libpsnap_a-unix_io.obj `if test -f 'unix_io.cc'; then $(CYGPATH_W) 'unix_io.cc'; else $(CYGPATH_W) '$(srcdir)/unix_io.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-unix_io.Tpo $(DEPDIR)/libpsnap_a-unix_io.Po
#	source='unix_io.cc' object='libpsnap_a-unix_io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-unix_io.obj `if test -f 'unix_io.cc'; then $(CYGPATH_W) 'unix_io.cc'; else $(CYGPATH_W) '$(srcdir)/unix_io.cc'; fi`

libpsnap_a-update_shapes.o: update_shapes.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-update_shapes.o -MD -MP -MF $(DEPDIR)/libpsnap_a-update_shapes.Tpo -c -o libpsnap_a-update_shapes.o `test -f 'update_shapes.cc' || echo '$(srcdir)/'`update_shapes.cc
	mv -f $(DEPDIR)/libpsnap_a-update_shapes.Tpo $(DEPDIR)/libpsnap_a-update_shapes.Po
#	source='update_shapes.cc' object='libpsnap_a-update_shapes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-update_shapes.o `test -f 'update_shapes.cc' || echo '$(srcdir)/'`update_shapes.cc

libpsnap_a-update_shapes.obj: update_shapes.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-update_shapes.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-update_shapes.Tpo -c -o libpsnap_a-update_shapes.obj `if test -f 'update_shapes.cc'; then $(CYGPATH_W) 'update_shapes.cc'; else $(CYGPATH_W) '$(srcdir)/update_shapes.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-update_shapes.Tpo $(DEPDIR)/libpsnap_a-update_shapes.Po
#	source='update_shapes.cc' object='libpsnap_a-update_shapes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-update_shapes.obj `if test -f 'update_shapes.cc'; then $(CYGPATH_W) 'update_shapes.cc'; else $(CYGPATH_W) '$(srcdir)/update_shapes.cc'; fi`

libpsnap_a-volume.o: volume.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-volume.o -MD -MP -MF $(DEPDIR)/libpsnap_a-volume.Tpo -c -o libpsnap_a-volume.o `test -f 'volume.cc' || echo '$(srcdir)/'`volume.cc
	mv -f $(DEPDIR)/libpsnap_a-volume.Tpo $(DEPDIR)/libpsnap_a-volume.Po
#	source='volume.cc' object='libpsnap_a-volume.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-volume.o `test -f 'volume.cc' || echo '$(srcdir)/'`volume.cc

libpsnap_a-volume.obj: volume.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-volume.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-volume.Tpo -c -o libpsnap_a-volume.obj `if test -f 'volume.cc'; then $(CYGPATH_W) 'volume.cc'; else $(CYGPATH_W) '$(srcdir)/volume.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-volume.Tpo $(DEPDIR)/libpsnap_a-volume.Po
#	source='volume.cc' object='libpsnap_a-volume.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-volume.obj `if test -f 'volume.cc'; then $(CYGPATH_W) 'volume.cc'; else $(CYGPATH_W) '$(srcdir)/volume.cc'; fi`

libpsnap_a-Alg_matrices.o: Alg_matrices.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Alg_matrices.o -MD -MP -MF $(DEPDIR)/libpsnap_a-Alg_matrices.Tpo -c -o libpsnap_a-Alg_matrices.o `test -f 'Alg_matrices.cc' || echo '$(srcdir)/'`Alg_matrices.cc
	mv -f $(DEPDIR)/libpsnap_a-Alg_matrices.Tpo $(DEPDIR)/libpsnap_a-Alg_matrices.Po
#	source='Alg_matrices.cc' object='libpsnap_a-Alg_matrices.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Alg_matrices.o `test -f 'Alg_matrices.cc' || echo '$(srcdir)/'`Alg_matrices.cc

libpsnap_a-Alg_matrices.obj: Alg_matrices.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Alg_matrices.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-Alg_matrices.Tpo -c -o libpsnap_a-Alg_matrices.obj `if test -f 'Alg_matrices.cc'; then $(CYGPATH_W) 'Alg_matrices.cc'; else $(CYGPATH_W) '$(srcdir)/Alg_matrices.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-Alg_matrices.Tpo $(DEPDIR)/libpsnap_a-Alg_matrices.Po
#	source='Alg_matrices.cc' object='libpsnap_a-Alg_matrices.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Alg_matrices.obj `if test -f 'Alg_matrices.cc'; then $(CYGPATH_W) 'Alg_matrices.cc'; else $(CYGPATH_W) '$(srcdir)/Alg_matrices.cc'; fi`

libpsnap_a-Dirichlet2D.o: Dirichlet2D.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Dirichlet2D.o -MD -MP -MF $(DEPDIR)/libpsnap_a-Dirichlet2D.Tpo -c -o libpsnap_a-Dirichlet2D.o `test -f 'Dirichlet2D.cc' || echo '$(srcdir)/'`Dirichlet2D.cc
	mv -f $(DEPDIR)/libpsnap_a-Dirichlet2D.Tpo $(DEPDIR)/libpsnap_a-Dirichlet2D.Po
#	source='Dirichlet2D.cc' object='libpsnap_a-Dirichlet2D.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Dirichlet2D.o `test -f 'Dirichlet2D.cc' || echo '$(srcdir)/'`Dirichlet2D.cc

libpsnap_a-Dirichlet2D.obj: Dirichlet2D.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Dirichlet2D.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-Dirichlet2D.Tpo -c -o libpsnap_a-Dirichlet2D.obj `if test -f 'Dirichlet2D.cc'; then $(CYGPATH_W) 'Dirichlet2D.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet2D.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-Dirichlet2D.Tpo $(DEPDIR)/libpsnap_a-Dirichlet2D.Po
#	source='Dirichlet2D.cc' object='libpsnap_a-Dirichlet2D.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Dirichlet2D.obj `if test -f 'Dirichlet2D.cc'; then $(CYGPATH_W) 'Dirichlet2D.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet2D.cc'; fi`

libpsnap_a-Dirichlet2D_construction.o: Dirichlet2D_construction.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Dirichlet2D_construction.o -MD -MP -MF $(DEPDIR)/libpsnap_a-Dirichlet2D_construction.Tpo -c -o libpsnap_a-Dirichlet2D_construction.o `test -f 'Dirichlet2D_construction.cc' || echo '$(srcdir)/'`Dirichlet2D_construction.cc
	mv -f $(DEPDIR)/libpsnap_a-Dirichlet2D_construction.Tpo $(DEPDIR)/libpsnap_a-Dirichlet2D_construction.Po
#	source='Dirichlet2D_construction.cc' object='libpsnap_a-Dirichlet2D_construction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Dirichlet2D_construction.o `test -f 'Dirichlet2D_construction.cc' || echo '$(srcdir)/'`Dirichlet2D_construction.cc

libpsnap_a-Dirichlet2D_construction.obj: Dirichlet2D_construction.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Dirichlet2D_construction.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-Dirichlet2D_construction.Tpo -c -o libpsnap_a-Dirichlet2D_construction.obj `if test -f 'Dirichlet2D_construction.cc'; then $(CYGPATH_W) 'Dirichlet2D_construction.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet2D_construction.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-Dirichlet2D_construction.Tpo $(DEPDIR)/libpsnap_a-Dirichlet2D_construction.Po
#	source='Dirichlet2D_construction.cc' object='libpsnap_a-Dirichlet2D_construction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Dirichlet2D_construction.obj `if test -f 'Dirichlet2D_construction.cc'; then $(CYGPATH_W) 'Dirichlet2D_construction.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet2D_construction.cc'; fi`

libpsnap_a-Dirichlet2D_extras.o: Dirichlet2D_extras.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Dirichlet2D_extras.o -MD -MP -MF $(DEPDIR)/libpsnap_a-Dirichlet2D_extras.Tpo -c -o libpsnap_a-Dirichlet2D_extras.o `test -f 'Dirichlet2D_extras.cc' || echo '$(srcdir)/'`Dirichlet2D_extras.cc
	mv -f $(DEPDIR)/libpsnap_a-Dirichlet2D_extras.Tpo $(DEPDIR)/libpsnap_a-Dirichlet2D_extras.Po
#	source='Dirichlet2D_extras.cc' object='libpsnap_a-Dirichlet2D_extras.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Dirichlet2D_extras.o `test -f 'Dirichlet2D_extras.cc' || echo '$(srcdir)/'`Dirichlet2D_extras.cc

libpsnap_a-Dirichlet2D_extras.obj: Dirichlet2D_extras.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Dirichlet2D_extras.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-Dirichlet2D_extras.Tpo -c -o libpsnap_a-Dirichlet2D_extras.obj `if test -f 'Dirichlet2D_extras.cc'; then $(CYGPATH_W) 'Dirichlet2D_extras.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet2D_extras.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-Dirichlet2D_extras.Tpo $(DEPDIR)/libpsnap_a-Dirichlet2D_extras.Po
#	source='Dirichlet2D_extras.cc' object='libpsnap_a-Dirichlet2D_extras.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Dirichlet2D_extras.obj `if test -f 'Dirichlet2D_extras.cc'; then $(CYGPATH_W) 'Dirichlet2D_extras.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet2D_extras.cc'; fi`

libpsnap_a-Dirichlet_basepoint2D.o: Dirichlet_basepoint2D.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Dirichlet_basepoint2D.o -MD -MP -MF $(DEPDIR)/libpsnap_a-Dirichlet_basepoint2D.Tpo -c -o libpsnap_a-Dirichlet_basepoint2D.o `test -f 'Dirichlet_basepoint2D.cc' || echo '$(srcdir)/'`Dirichlet_basepoint2D.cc
	mv -f $(DEPDIR)/libpsnap_a-Dirichlet_basepoint2D.Tpo $(DEPDIR)/libpsnap_a-Dirichlet_basepoint2D.Po
#	source='Dirichlet_basepoint2D.cc' object='libpsnap_a-Dirichlet_basepoint2D.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Dirichlet_basepoint2D.o `test -f 'Dirichlet_basepoint2D.cc' || echo '$(srcdir)/'`Dirichlet_basepoint2D.cc

libpsnap_a-Dirichlet_basepoint2D.obj: Dirichlet_basepoint2D.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Dirichlet_basepoint2D.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-Dirichlet_basepoint2D.Tpo -c -o libpsnap_a-Dirichlet_basepoint2D.obj `if test -f 'Dirichlet_basepoint2D.cc'; then $(CYGPATH_W) 'Dirichlet_basepoint2D.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet_basepoint2D.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-Dirichlet_basepoint2D.Tpo $(DEPDIR)/libpsnap_a-Dirichlet_basepoint2D.Po
#	source='Dirichlet_basepoint2D.cc' object='libpsnap_a-Dirichlet_basepoint2D.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Dirichlet_basepoint2D.obj `if test -f 'Dirichlet_basepoint2D.cc'; then $(CYGPATH_W) 'Dirichlet_basepoint2D.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet_basepoint2D.cc'; fi`

libpsnap_a-Dirichlet_precision2D.o: Dirichlet_precision2D.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Dirichlet_precision2D.o -MD -MP -MF $(DEPDIR)/libpsnap_a-Dirichlet_precision2D.Tpo -c -o libpsnap_a-Dirichlet_precision2D.o `test -f 'Dirichlet_precision2D.cc' || echo '$(srcdir)/'`Dirichlet_precision2D.cc
	mv -f $(DEPDIR)/libpsnap_a-Dirichlet_precision2D.Tpo $(DEPDIR)/libpsnap_a-Dirichlet_precision2D.Po
#	source='Dirichlet_precision2D.cc' object='libpsnap_a-Dirichlet_precision2D.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Dirichlet_precision2D.o `test -f 'Dirichlet_precision2D.cc' || echo '$(srcdir)/'`Dirichlet_precision2D.cc

libpsnap_a-Dirichlet_precision2D.obj: Dirichlet_precision2D.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-Dirichlet_precision2D.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-Dirichlet_precision2D.Tpo -c -o libpsnap_a-Dirichlet_precision2D.obj `if test -f 'Dirichlet_precision2D.cc'; then $(CYGPATH_W) 'Dirichlet_precision2D.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet_precision2D.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-Dirichlet_precision2D.Tpo $(DEPDIR)/libpsnap_a-Dirichlet_precision2D.Po
#	source='Dirichlet_precision2D.cc' object='libpsnap_a-Dirichlet_precision2D.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-Dirichlet_precision2D.obj `if test -f 'Dirichlet_precision2D.cc'; then $(CYGPATH_W) 'Dirichlet_precision2D.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet_precision2D.cc'; fi`

libpsnap_a-SL2RMatrix.o: SL2RMatrix.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-SL2RMatrix.o -MD -MP -MF $(DEPDIR)/libpsnap_a-SL2RMatrix.Tpo -c -o libpsnap_a-SL2RMatrix.o `test -f 'SL2RMatrix.cc' || echo '$(srcdir)/'`SL2RMatrix.cc
	mv -f $(DEPDIR)/libpsnap_a-SL2RMatrix.Tpo $(DEPDIR)/libpsnap_a-SL2RMatrix.Po
#	source='SL2RMatrix.cc' object='libpsnap_a-SL2RMatrix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-SL2RMatrix.o `test -f 'SL2RMatrix.cc' || echo '$(srcdir)/'`SL2RMatrix.cc

libpsnap_a-SL2RMatrix.obj: SL2RMatrix.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-SL2RMatrix.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-SL2RMatrix.Tpo -c -o libpsnap_a-SL2RMatrix.obj `if test -f 'SL2RMatrix.cc'; then $(CYGPATH_W) 'SL2RMatrix.cc'; else $(CYGPATH_W) '$(srcdir)/SL2RMatrix.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-SL2RMatrix.Tpo $(DEPDIR)/libpsnap_a-SL2RMatrix.Po
#	source='SL2RMatrix.cc' object='libpsnap_a-SL2RMatrix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-SL2RMatrix.obj `if test -f 'SL2RMatrix.cc'; then $(CYGPATH_W) 'SL2RMatrix.cc'; else $(CYGPATH_W) '$(srcdir)/SL2RMatrix.cc'; fi`

libpsnap_a-dt2snap.o: dt2snap.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-dt2snap.o -MD -MP -MF $(DEPDIR)/libpsnap_a-dt2snap.Tpo -c -o libpsnap_a-dt2snap.o `test -f 'dt2snap.cc' || echo '$(srcdir)/'`dt2snap.cc
	mv -f $(DEPDIR)/libpsnap_a-dt2snap.Tpo $(DEPDIR)/libpsnap_a-dt2snap.Po
#	source='dt2snap.cc' object='libpsnap_a-dt2snap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-dt2snap.o `test -f 'dt2snap.cc' || echo '$(srcdir)/'`dt2snap.cc

libpsnap_a-dt2snap.obj: dt2snap.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-dt2snap.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-dt2snap.Tpo -c -o libpsnap_a-dt2snap.obj `if test -f 'dt2snap.cc'; then $(CYGPATH_W) 'dt2snap.cc'; else $(CYGPATH_W) '$(srcdir)/dt2snap.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-dt2snap.Tpo $(DEPDIR)/libpsnap_a-dt2snap.Po
#	source='dt2snap.cc' object='libpsnap_a-dt2snap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-dt2snap.obj `if test -f 'dt2snap.cc'; then $(CYGPATH_W) 'dt2snap.cc'; else $(CYGPATH_W) '$(srcdir)/dt2snap.cc'; fi`

libpsnap_a-crossing_signs.o: crossing_signs.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-crossing_signs.o -MD -MP -MF $(DEPDIR)/libpsnap_a-crossing_signs.Tpo -c -o libpsnap_a-crossing_signs.o `test -f 'crossing_signs.cc' || echo '$(srcdir)/'`crossing_signs.cc
	mv -f $(DEPDIR)/libpsnap_a-crossing_signs.Tpo $(DEPDIR)/libpsnap_a-crossing_signs.Po
#	source='crossing_signs.cc' object='libpsnap_a-crossing_signs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-crossing_signs.o `test -f 'crossing_signs.cc' || echo '$(srcdir)/'`crossing_signs.cc

libpsnap_a-crossing_signs.obj: crossing_signs.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-crossing_signs.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-crossing_signs.Tpo -c -o libpsnap_a-crossing_signs.obj `if test -f 'crossing_signs.cc'; then $(CYGPATH_W) 'crossing_signs.cc'; else $(CYGPATH_W) '$(srcdir)/crossing_signs.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-crossing_signs.Tpo $(DEPDIR)/libpsnap_a-crossing_signs.Po
#	source='crossing_signs.cc' object='libpsnap_a-crossing_signs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-crossing_signs.obj `if test -f 'crossing_signs.cc'; then $(CYGPATH_W) 'crossing_signs.cc'; else $(CYGPATH_W) '$(srcdir)/crossing_signs.cc'; fi`

libpsnap_a-link_diagram.o: link_diagram.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-link_diagram.o -MD -MP -MF $(DEPDIR)/libpsnap_a-link_diagram.Tpo -c -o libpsnap_a-link_diagram.o `test -f 'link_diagram.cc' || echo '$(srcdir)/'`link_diagram.cc
	mv -f $(DEPDIR)/libpsnap_a-link_diagram.Tpo $(DEPDIR)/libpsnap_a-link_diagram.Po
#	source='link_diagram.cc' object='libpsnap_a-link_diagram.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-link_diagram.o `test -f 'link_diagram.cc' || echo '$(srcdir)/'`link_diagram.cc

libpsnap_a-link_diagram.obj: link_diagram.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libpsnap_a-link_diagram.obj -MD -MP -MF $(DEPDIR)/libpsnap_a-link_diagram.Tpo -c -o libpsnap_a-link_diagram.obj `if test -f 'link_diagram.cc'; then $(CYGPATH_W) 'link_diagram.cc'; else $(CYGPATH_W) '$(srcdir)/link_diagram.cc'; fi`
	mv -f $(DEPDIR)/libpsnap_a-link_diagram.Tpo $(DEPDIR)/libpsnap_a-link_diagram.Po
#	source='link_diagram.cc' object='libpsnap_a-link_diagram.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libpsnap_a-link_diagram.obj `if test -f 'link_diagram.cc'; then $(CYGPATH_W) 'link_diagram.cc'; else $(CYGPATH_W) '$(srcdir)/link_diagram.cc'; fi`

libsnap_a-Dehn_coefficients.o: Dehn_coefficients.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Dehn_coefficients.o -MD -MP -MF $(DEPDIR)/libsnap_a-Dehn_coefficients.Tpo -c -o libsnap_a-Dehn_coefficients.o `test -f 'Dehn_coefficients.cc' || echo '$(srcdir)/'`Dehn_coefficients.cc
	mv -f $(DEPDIR)/libsnap_a-Dehn_coefficients.Tpo $(DEPDIR)/libsnap_a-Dehn_coefficients.Po
#	source='Dehn_coefficients.cc' object='libsnap_a-Dehn_coefficients.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Dehn_coefficients.o `test -f 'Dehn_coefficients.cc' || echo '$(srcdir)/'`Dehn_coefficients.cc

libsnap_a-Dehn_coefficients.obj: Dehn_coefficients.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Dehn_coefficients.obj -MD -MP -MF $(DEPDIR)/libsnap_a-Dehn_coefficients.Tpo -c -o libsnap_a-Dehn_coefficients.obj `if test -f 'Dehn_coefficients.cc'; then $(CYGPATH_W) 'Dehn_coefficients.cc'; else $(CYGPATH_W) '$(srcdir)/Dehn_coefficients.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-Dehn_coefficients.Tpo $(DEPDIR)/libsnap_a-Dehn_coefficients.Po
#	source='Dehn_coefficients.cc' object='libsnap_a-Dehn_coefficients.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Dehn_coefficients.obj `if test -f 'Dehn_coefficients.cc'; then $(CYGPATH_W) 'Dehn_coefficients.cc'; else $(CYGPATH_W) '$(srcdir)/Dehn_coefficients.cc'; fi`

libsnap_a-Dirichlet.o: Dirichlet.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Dirichlet.o -MD -MP -MF $(DEPDIR)/libsnap_a-Dirichlet.Tpo -c -o libsnap_a-Dirichlet.o `test -f 'Dirichlet.cc' || echo '$(srcdir)/'`Dirichlet.cc
	mv -f $(DEPDIR)/libsnap_a-Dirichlet.Tpo $(DEPDIR)/libsnap_a-Dirichlet.Po
#	source='Dirichlet.cc' object='libsnap_a-Dirichlet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Dirichlet.o `test -f 'Dirichlet.cc' || echo '$(srcdir)/'`Dirichlet.cc

libsnap_a-Dirichlet.obj: Dirichlet.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Dirichlet.obj -MD -MP -MF $(DEPDIR)/libsnap_a-Dirichlet.Tpo -c -o libsnap_a-Dirichlet.obj `if test -f 'Dirichlet.cc'; then $(CYGPATH_W) 'Dirichlet.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-Dirichlet.Tpo $(DEPDIR)/libsnap_a-Dirichlet.Po
#	source='Dirichlet.cc' object='libsnap_a-Dirichlet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Dirichlet.obj `if test -f 'Dirichlet.cc'; then $(CYGPATH_W) 'Dirichlet.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet.cc'; fi`

libsnap_a-Dirichlet_basepoint.o: Dirichlet_basepoint.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Dirichlet_basepoint.o -MD -MP -MF $(DEPDIR)/libsnap_a-Dirichlet_basepoint.Tpo -c -o libsnap_a-Dirichlet_basepoint.o `test -f 'Dirichlet_basepoint.cc' || echo '$(srcdir)/'`Dirichlet_basepoint.cc
	mv -f $(DEPDIR)/libsnap_a-Dirichlet_basepoint.Tpo $(DEPDIR)/libsnap_a-Dirichlet_basepoint.Po
#	source='Dirichlet_basepoint.cc' object='libsnap_a-Dirichlet_basepoint.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Dirichlet_basepoint.o `test -f 'Dirichlet_basepoint.cc' || echo '$(srcdir)/'`Dirichlet_basepoint.cc

libsnap_a-Dirichlet_basepoint.obj: Dirichlet_basepoint.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Dirichlet_basepoint.obj -MD -MP -MF $(DEPDIR)/libsnap_a-Dirichlet_basepoint.Tpo -c -o libsnap_a-Dirichlet_basepoint.obj `if test -f 'Dirichlet_basepoint.cc'; then $(CYGPATH_W) 'Dirichlet_basepoint.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet_basepoint.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-Dirichlet_basepoint.Tpo $(DEPDIR)/libsnap_a-Dirichlet_basepoint.Po
#	source='Dirichlet_basepoint.cc' object='libsnap_a-Dirichlet_basepoint.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Dirichlet_basepoint.obj `if test -f 'Dirichlet_basepoint.cc'; then $(CYGPATH_W) 'Dirichlet_basepoint.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet_basepoint.cc'; fi`

libsnap_a-Dirichlet_construction.o: Dirichlet_construction.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Dirichlet_construction.o -MD -MP -MF $(DEPDIR)/libsnap_a-Dirichlet_construction.Tpo -c -o libsnap_a-Dirichlet_construction.o `test -f 'Dirichlet_construction.cc' || echo '$(srcdir)/'`Dirichlet_construction.cc
	mv -f $(DEPDIR)/libsnap_a-Dirichlet_construction.Tpo $(DEPDIR)/libsnap_a-Dirichlet_construction.Po
#	source='Dirichlet_construction.cc' object='libsnap_a-Dirichlet_construction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Dirichlet_construction.o `test -f 'Dirichlet_construction.cc' || echo '$(srcdir)/'`Dirichlet_construction.cc

libsnap_a-Dirichlet_construction.obj: Dirichlet_construction.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Dirichlet_construction.obj -MD -MP -MF $(DEPDIR)/libsnap_a-Dirichlet_construction.Tpo -c -o libsnap_a-Dirichlet_construction.obj `if test -f 'Dirichlet_construction.cc'; then $(CYGPATH_W) 'Dirichlet_construction.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet_construction.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-Dirichlet_construction.Tpo $(DEPDIR)/libsnap_a-Dirichlet_construction.Po
#	source='Dirichlet_construction.cc' object='libsnap_a-Dirichlet_construction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Dirichlet_construction.obj `if test -f 'Dirichlet_construction.cc'; then $(CYGPATH_W) 'Dirichlet_construction.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet_construction.cc'; fi`

libsnap_a-Dirichlet_extras.o: Dirichlet_extras.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Dirichlet_extras.o -MD -MP -MF $(DEPDIR)/libsnap_a-Dirichlet_extras.Tpo -c -o libsnap_a-Dirichlet_extras.o `test -f 'Dirichlet_extras.cc' || echo '$(srcdir)/'`Dirichlet_extras.cc
	mv -f $(DEPDIR)/libsnap_a-Dirichlet_extras.Tpo $(DEPDIR)/libsnap_a-Dirichlet_extras.Po
#	source='Dirichlet_extras.cc' object='libsnap_a-Dirichlet_extras.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Dirichlet_extras.o `test -f 'Dirichlet_extras.cc' || echo '$(srcdir)/'`Dirichlet_extras.cc

libsnap_a-Dirichlet_extras.obj: Dirichlet_extras.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Dirichlet_extras.obj -MD -MP -MF $(DEPDIR)/libsnap_a-Dirichlet_extras.Tpo -c -o libsnap_a-Dirichlet_extras.obj `if test -f 'Dirichlet_extras.cc'; then $(CYGPATH_W) 'Dirichlet_extras.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet_extras.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-Dirichlet_extras.Tpo $(DEPDIR)/libsnap_a-Dirichlet_extras.Po
#	source='Dirichlet_extras.cc' object='libsnap_a-Dirichlet_extras.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Dirichlet_extras.obj `if test -f 'Dirichlet_extras.cc'; then $(CYGPATH_W) 'Dirichlet_extras.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet_extras.cc'; fi`

libsnap_a-Dirichlet_precision.o: Dirichlet_precision.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Dirichlet_precision.o -MD -MP -MF $(DEPDIR)/libsnap_a-Dirichlet_precision.Tpo -c -o libsnap_a-Dirichlet_precision.o `test -f 'Dirichlet_precision.cc' || echo '$(srcdir)/'`Dirichlet_precision.cc
	mv -f $(DEPDIR)/libsnap_a-Dirichlet_precision.Tpo $(DEPDIR)/libsnap_a-Dirichlet_precision.Po
#	source='Dirichlet_precision.cc' object='libsnap_a-Dirichlet_precision.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Dirichlet_precision.o `test -f 'Dirichlet_precision.cc' || echo '$(srcdir)/'`Dirichlet_precision.cc

libsnap_a-Dirichlet_precision.obj: Dirichlet_precision.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Dirichlet_precision.obj -MD -MP -MF $(DEPDIR)/libsnap_a-Dirichlet_precision.Tpo -c -o libsnap_a-Dirichlet_precision.obj `if test -f 'Dirichlet_precision.cc'; then $(CYGPATH_W) 'Dirichlet_precision.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet_precision.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-Dirichlet_precision.Tpo $(DEPDIR)/libsnap_a-Dirichlet_precision.Po
#	source='Dirichlet_precision.cc' object='libsnap_a-Dirichlet_precision.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Dirichlet_precision.obj `if test -f 'Dirichlet_precision.cc'; then $(CYGPATH_W) 'Dirichlet_precision.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet_precision.cc'; fi`

libsnap_a-FGWord.o: FGWord.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-FGWord.o -MD -MP -MF $(DEPDIR)/libsnap_a-FGWord.Tpo -c -o libsnap_a-FGWord.o `test -f 'FGWord.cc' || echo '$(srcdir)/'`FGWord.cc
	mv -f $(DEPDIR)/libsnap_a-FGWord.Tpo $(DEPDIR)/libsnap_a-FGWord.Po
#	source='FGWord.cc' object='libsnap_a-FGWord.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-FGWord.o `test -f 'FGWord.cc' || echo '$(srcdir)/'`FGWord.cc

libsnap_a-FGWord.obj: FGWord.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-FGWord.obj -MD -MP -MF $(DEPDIR)/libsnap_a-FGWord.Tpo -c -o libsnap_a-FGWord.obj `if test -f 'FGWord.cc'; then $(CYGPATH_W) 'FGWord.cc'; else $(CYGPATH_W) '$(srcdir)/FGWord.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-FGWord.Tpo $(DEPDIR)/libsnap_a-FGWord.Po
#	source='FGWord.cc' object='libsnap_a-FGWord.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-FGWord.obj `if test -f 'FGWord.cc'; then $(CYGPATH_W) 'FGWord.cc'; else $(CYGPATH_W) '$(srcdir)/FGWord.cc'; fi`

libsnap_a-Moebius_transformations.o: Moebius_transformations.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Moebius_transformations.o -MD -MP -MF $(DEPDIR)/libsnap_a-Moebius_transformations.Tpo -c -o libsnap_a-Moebius_transformations.o `test -f 'Moebius_transformations.cc' || echo '$(srcdir)/'`Moebius_transformations.cc
	mv -f $(DEPDIR)/libsnap_a-Moebius_transformations.Tpo $(DEPDIR)/libsnap_a-Moebius_transformations.Po
#	source='Moebius_transformations.cc' object='libsnap_a-Moebius_transformations.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Moebius_transformations.o `test -f 'Moebius_transformations.cc' || echo '$(srcdir)/'`Moebius_transformations.cc

libsnap_a-Moebius_transformations.obj: Moebius_transformations.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Moebius_transformations.obj -MD -MP -MF $(DEPDIR)/libsnap_a-Moebius_transformations.Tpo -c -o libsnap_a-Moebius_transformations.obj `if test -f 'Moebius_transformations.cc'; then $(CYGPATH_W) 'Moebius_transformations.cc'; else $(CYGPATH_W) '$(srcdir)/Moebius_transformations.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-Moebius_transformations.Tpo $(DEPDIR)/libsnap_a-Moebius_transformations.Po
#	source='Moebius_transformations.cc' object='libsnap_a-Moebius_transformations.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Moebius_transformations.obj `if test -f 'Moebius_transformations.cc'; then $(CYGPATH_W) 'Moebius_transformations.cc'; else $(CYGPATH_W) '$(srcdir)/Moebius_transformations.cc'; fi`

libsnap_a-O31.o: O31.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-O31.o -MD -MP -MF $(DEPDIR)/libsnap_a-O31.Tpo -c -o libsnap_a-O31.o `test -f 'O31.cc' || echo '$(srcdir)/'`O31.cc
	mv -f $(DEPDIR)/libsnap_a-O31.Tpo $(DEPDIR)/libsnap_a-O31.Po
#	source='O31.cc' object='libsnap_a-O31.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-O31.o `test -f 'O31.cc' || echo '$(srcdir)/'`O31.cc

libsnap_a-O31.obj: O31.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-O31.obj -MD -MP -MF $(DEPDIR)/libsnap_a-O31.Tpo -c -o libsnap_a-O31.obj `if test -f 'O31.cc'; then $(CYGPATH_W) 'O31.cc'; else $(CYGPATH_W) '$(srcdir)/O31.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-O31.Tpo $(DEPDIR)/libsnap_a-O31.Po
#	source='O31.cc' object='libsnap_a-O31.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-O31.obj `if test -f 'O31.cc'; then $(CYGPATH_W) 'O31.cc'; else $(CYGPATH_W) '$(srcdir)/O31.cc'; fi`

libsnap_a-abelian_group.o: abelian_group.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-abelian_group.o -MD -MP -MF $(DEPDIR)/libsnap_a-abelian_group.Tpo -c -o libsnap_a-abelian_group.o `test -f 'abelian_group.cc' || echo '$(srcdir)/'`abelian_group.cc
	mv -f $(DEPDIR)/libsnap_a-abelian_group.Tpo $(DEPDIR)/libsnap_a-abelian_group.Po
#	source='abelian_group.cc' object='libsnap_a-abelian_group.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-abelian_group.o `test -f 'abelian_group.cc' || echo '$(srcdir)/'`abelian_group.cc

libsnap_a-abelian_group.obj: abelian_group.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-abelian_group.obj -MD -MP -MF $(DEPDIR)/libsnap_a-abelian_group.Tpo -c -o libsnap_a-abelian_group.obj `if test -f 'abelian_group.cc'; then $(CYGPATH_W) 'abelian_group.cc'; else $(CYGPATH_W) '$(srcdir)/abelian_group.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-abelian_group.Tpo $(DEPDIR)/libsnap_a-abelian_group.Po
#	source='abelian_group.cc' object='libsnap_a-abelian_group.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-abelian_group.obj `if test -f 'abelian_group.cc'; then $(CYGPATH_W) 'abelian_group.cc'; else $(CYGPATH_W) '$(srcdir)/abelian_group.cc'; fi`

libsnap_a-barycentric_subdivision.o: barycentric_subdivision.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-barycentric_subdivision.o -MD -MP -MF $(DEPDIR)/libsnap_a-barycentric_subdivision.Tpo -c -o libsnap_a-barycentric_subdivision.o `test -f 'barycentric_subdivision.cc' || echo '$(srcdir)/'`barycentric_subdivision.cc
	mv -f $(DEPDIR)/libsnap_a-barycentric_subdivision.Tpo $(DEPDIR)/libsnap_a-barycentric_subdivision.Po
#	source='barycentric_subdivision.cc' object='libsnap_a-barycentric_subdivision.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-barycentric_subdivision.o `test -f 'barycentric_subdivision.cc' || echo '$(srcdir)/'`barycentric_subdivision.cc

libsnap_a-barycentric_subdivision.obj: barycentric_subdivision.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-barycentric_subdivision.obj -MD -MP -MF $(DEPDIR)/libsnap_a-barycentric_subdivision.Tpo -c -o libsnap_a-barycentric_subdivision.obj `if test -f 'barycentric_subdivision.cc'; then $(CYGPATH_W) 'barycentric_subdivision.cc'; else $(CYGPATH_W) '$(srcdir)/barycentric_subdivision.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-barycentric_subdivision.Tpo $(DEPDIR)/libsnap_a-barycentric_subdivision.Po
#	source='barycentric_subdivision.cc' object='libsnap_a-barycentric_subdivision.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-barycentric_subdivision.obj `if test -f 'barycentric_subdivision.cc'; then $(CYGPATH_W) 'barycentric_subdivision.cc'; else $(CYGPATH_W) '$(srcdir)/barycentric_subdivision.cc'; fi`

libsnap_a-canonize.o: canonize.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-canonize.o -MD -MP -MF $(DEPDIR)/libsnap_a-canonize.Tpo -c -o libsnap_a-canonize.o `test -f 'canonize.cc' || echo '$(srcdir)/'`canonize.cc
	mv -f $(DEPDIR)/libsnap_a-canonize.Tpo $(DEPDIR)/libsnap_a-canonize.Po
#	source='canonize.cc' object='libsnap_a-canonize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-canonize.o `test -f 'canonize.cc' || echo '$(srcdir)/'`canonize.cc

libsnap_a-canonize.obj: canonize.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-canonize.obj -MD -MP -MF $(DEPDIR)/libsnap_a-canonize.Tpo -c -o libsnap_a-canonize.obj `if test -f 'canonize.cc'; then $(CYGPATH_W) 'canonize.cc'; else $(CYGPATH_W) '$(srcdir)/canonize.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-canonize.Tpo $(DEPDIR)/libsnap_a-canonize.Po
#	source='canonize.cc' object='libsnap_a-canonize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-canonize.obj `if test -f 'canonize.cc'; then $(CYGPATH_W) 'canonize.cc'; else $(CYGPATH_W) '$(srcdir)/canonize.cc'; fi`

libsnap_a-canonize_part_1.o: canonize_part_1.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-canonize_part_1.o -MD -MP -MF $(DEPDIR)/libsnap_a-canonize_part_1.Tpo -c -o libsnap_a-canonize_part_1.o `test -f 'canonize_part_1.cc' || echo '$(srcdir)/'`canonize_part_1.cc
	mv -f $(DEPDIR)/libsnap_a-canonize_part_1.Tpo $(DEPDIR)/libsnap_a-canonize_part_1.Po
#	source='canonize_part_1.cc' object='libsnap_a-canonize_part_1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-canonize_part_1.o `test -f 'canonize_part_1.cc' || echo '$(srcdir)/'`canonize_part_1.cc

libsnap_a-canonize_part_1.obj: canonize_part_1.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-canonize_part_1.obj -MD -MP -MF $(DEPDIR)/libsnap_a-canonize_part_1.Tpo -c -o libsnap_a-canonize_part_1.obj `if test -f 'canonize_part_1.cc'; then $(CYGPATH_W) 'canonize_part_1.cc'; else $(CYGPATH_W) '$(srcdir)/canonize_part_1.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-canonize_part_1.Tpo $(DEPDIR)/libsnap_a-canonize_part_1.Po
#	source='canonize_part_1.cc' object='libsnap_a-canonize_part_1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-canonize_part_1.obj `if test -f 'canonize_part_1.cc'; then $(CYGPATH_W) 'canonize_part_1.cc'; else $(CYGPATH_W) '$(srcdir)/canonize_part_1.cc'; fi`

libsnap_a-canonize_part_2.o: canonize_part_2.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-canonize_part_2.o -MD -MP -MF $(DEPDIR)/libsnap_a-canonize_part_2.Tpo -c -o libsnap_a-canonize_part_2.o `test -f 'canonize_part_2.cc' || echo '$(srcdir)/'`canonize_part_2.cc
	mv -f $(DEPDIR)/libsnap_a-canonize_part_2.Tpo $(DEPDIR)/libsnap_a-canonize_part_2.Po
#	source='canonize_part_2.cc' object='libsnap_a-canonize_part_2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-canonize_part_2.o `test -f 'canonize_part_2.cc' || echo '$(srcdir)/'`canonize_part_2.cc

libsnap_a-canonize_part_2.obj: canonize_part_2.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-canonize_part_2.obj -MD -MP -MF $(DEPDIR)/libsnap_a-canonize_part_2.Tpo -c -o libsnap_a-canonize_part_2.obj `if test -f 'canonize_part_2.cc'; then $(CYGPATH_W) 'canonize_part_2.cc'; else $(CYGPATH_W) '$(srcdir)/canonize_part_2.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-canonize_part_2.Tpo $(DEPDIR)/libsnap_a-canonize_part_2.Po
#	source='canonize_part_2.cc' object='libsnap_a-canonize_part_2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-canonize_part_2.obj `if test -f 'canonize_part_2.cc'; then $(CYGPATH_W) 'canonize_part_2.cc'; else $(CYGPATH_W) '$(srcdir)/canonize_part_2.cc'; fi`

libsnap_a-canonize_result.o: canonize_result.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-canonize_result.o -MD -MP -MF $(DEPDIR)/libsnap_a-canonize_result.Tpo -c -o libsnap_a-canonize_result.o `test -f 'canonize_result.cc' || echo '$(srcdir)/'`canonize_result.cc
	mv -f $(DEPDIR)/libsnap_a-canonize_result.Tpo $(DEPDIR)/libsnap_a-canonize_result.Po
#	source='canonize_result.cc' object='libsnap_a-canonize_result.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-canonize_result.o `test -f 'canonize_result.cc' || echo '$(srcdir)/'`canonize_result.cc

libsnap_a-canonize_result.obj: canonize_result.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-canonize_result.obj -MD -MP -MF $(DEPDIR)/libsnap_a-canonize_result.Tpo -c -o libsnap_a-canonize_result.obj `if test -f 'canonize_result.cc'; then $(CYGPATH_W) 'canonize_result.cc'; else $(CYGPATH_W) '$(srcdir)/canonize_result.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-canonize_result.Tpo $(DEPDIR)/libsnap_a-canonize_result.Po
#	source='canonize_result.cc' object='libsnap_a-canonize_result.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-canonize_result.obj `if test -f 'canonize_result.cc'; then $(CYGPATH_W) 'canonize_result.cc'; else $(CYGPATH_W) '$(srcdir)/canonize_result.cc'; fi`

libsnap_a-change_peripheral_curves.o: change_peripheral_curves.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-change_peripheral_curves.o -MD -MP -MF $(DEPDIR)/libsnap_a-change_peripheral_curves.Tpo -c -o libsnap_a-change_peripheral_curves.o `test -f 'change_peripheral_curves.cc' || echo '$(srcdir)/'`change_peripheral_curves.cc
	mv -f $(DEPDIR)/libsnap_a-change_peripheral_curves.Tpo $(DEPDIR)/libsnap_a-change_peripheral_curves.Po
#	source='change_peripheral_curves.cc' object='libsnap_a-change_peripheral_curves.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-change_peripheral_curves.o `test -f 'change_peripheral_curves.cc' || echo '$(srcdir)/'`change_peripheral_curves.cc

libsnap_a-change_peripheral_curves.obj: change_peripheral_curves.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-change_peripheral_curves.obj -MD -MP -MF $(DEPDIR)/libsnap_a-change_peripheral_curves.Tpo -c -o libsnap_a-change_peripheral_curves.obj `if test -f 'change_peripheral_curves.cc'; then $(CYGPATH_W) 'change_peripheral_curves.cc'; else $(CYGPATH_W) '$(srcdir)/change_peripheral_curves.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-change_peripheral_curves.Tpo $(DEPDIR)/libsnap_a-change_peripheral_curves.Po
#	source='change_peripheral_curves.cc' object='libsnap_a-change_peripheral_curves.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-change_peripheral_curves.obj `if test -f 'change_peripheral_curves.cc'; then $(CYGPATH_W) 'change_peripheral_curves.cc'; else $(CYGPATH_W) '$(srcdir)/change_peripheral_curves.cc'; fi`

libsnap_a-chern_simons.o: chern_simons.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-chern_simons.o -MD -MP -MF $(DEPDIR)/libsnap_a-chern_simons.Tpo -c -o libsnap_a-chern_simons.o `test -f 'chern_simons.cc' || echo '$(srcdir)/'`chern_simons.cc
	mv -f $(DEPDIR)/libsnap_a-chern_simons.Tpo $(DEPDIR)/libsnap_a-chern_simons.Po
#	source='chern_simons.cc' object='libsnap_a-chern_simons.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-chern_simons.o `test -f 'chern_simons.cc' || echo '$(srcdir)/'`chern_simons.cc

libsnap_a-chern_simons.obj: chern_simons.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-chern_simons.obj -MD -MP -MF $(DEPDIR)/libsnap_a-chern_simons.Tpo -c -o libsnap_a-chern_simons.obj `if test -f 'chern_simons.cc'; then $(CYGPATH_W) 'chern_simons.cc'; else $(CYGPATH_W) '$(srcdir)/chern_simons.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-chern_simons.Tpo $(DEPDIR)/libsnap_a-chern_simons.Po
#	source='chern_simons.cc' object='libsnap_a-chern_simons.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-chern_simons.obj `if test -f 'chern_simons.cc'; then $(CYGPATH_W) 'chern_simons.cc'; else $(CYGPATH_W) '$(srcdir)/chern_simons.cc'; fi`

libsnap_a-choose_generators.o: choose_generators.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-choose_generators.o -MD -MP -MF $(DEPDIR)/libsnap_a-choose_generators.Tpo -c -o libsnap_a-choose_generators.o `test -f 'choose_generators.cc' || echo '$(srcdir)/'`choose_generators.cc
	mv -f $(DEPDIR)/libsnap_a-choose_generators.Tpo $(DEPDIR)/libsnap_a-choose_generators.Po
#	source='choose_generators.cc' object='libsnap_a-choose_generators.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-choose_generators.o `test -f 'choose_generators.cc' || echo '$(srcdir)/'`choose_generators.cc

libsnap_a-choose_generators.obj: choose_generators.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-choose_generators.obj -MD -MP -MF $(DEPDIR)/libsnap_a-choose_generators.Tpo -c -o libsnap_a-choose_generators.obj `if test -f 'choose_generators.cc'; then $(CYGPATH_W) 'choose_generators.cc'; else $(CYGPATH_W) '$(srcdir)/choose_generators.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-choose_generators.Tpo $(DEPDIR)/libsnap_a-choose_generators.Po
#	source='choose_generators.cc' object='libsnap_a-choose_generators.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-choose_generators.obj `if test -f 'choose_generators.cc'; then $(CYGPATH_W) 'choose_generators.cc'; else $(CYGPATH_W) '$(srcdir)/choose_generators.cc'; fi`

libsnap_a-close_cusps.o: close_cusps.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-close_cusps.o -MD -MP -MF $(DEPDIR)/libsnap_a-close_cusps.Tpo -c -o libsnap_a-close_cusps.o `test -f 'close_cusps.cc' || echo '$(srcdir)/'`close_cusps.cc
	mv -f $(DEPDIR)/libsnap_a-close_cusps.Tpo $(DEPDIR)/libsnap_a-close_cusps.Po
#	source='close_cusps.cc' object='libsnap_a-close_cusps.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-close_cusps.o `test -f 'close_cusps.cc' || echo '$(srcdir)/'`close_cusps.cc

libsnap_a-close_cusps.obj: close_cusps.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-close_cusps.obj -MD -MP -MF $(DEPDIR)/libsnap_a-close_cusps.Tpo -c -o libsnap_a-close_cusps.obj `if test -f 'close_cusps.cc'; then $(CYGPATH_W) 'close_cusps.cc'; else $(CYGPATH_W) '$(srcdir)/close_cusps.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-close_cusps.Tpo $(DEPDIR)/libsnap_a-close_cusps.Po
#	source='close_cusps.cc' object='libsnap_a-close_cusps.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-close_cusps.obj `if test -f 'close_cusps.cc'; then $(CYGPATH_W) 'close_cusps.cc'; else $(CYGPATH_W) '$(srcdir)/close_cusps.cc'; fi`

libsnap_a-complex.o: complex.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-complex.o -MD -MP -MF $(DEPDIR)/libsnap_a-complex.Tpo -c -o libsnap_a-complex.o `test -f 'complex.cc' || echo '$(srcdir)/'`complex.cc
	mv -f $(DEPDIR)/libsnap_a-complex.Tpo $(DEPDIR)/libsnap_a-complex.Po
#	source='complex.cc' object='libsnap_a-complex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-complex.o `test -f 'complex.cc' || echo '$(srcdir)/'`complex.cc

libsnap_a-complex.obj: complex.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-complex.obj -MD -MP -MF $(DEPDIR)/libsnap_a-complex.Tpo -c -o libsnap_a-complex.obj `if test -f 'complex.cc'; then $(CYGPATH_W) 'complex.cc'; else $(CYGPATH_W) '$(srcdir)/complex.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-complex.Tpo $(DEPDIR)/libsnap_a-complex.Po
#	source='complex.cc' object='libsnap_a-complex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-complex.obj `if test -f 'complex.cc'; then $(CYGPATH_W) 'complex.cc'; else $(CYGPATH_W) '$(srcdir)/complex.cc'; fi`

libsnap_a-complex_length.o: complex_length.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-complex_length.o -MD -MP -MF $(DEPDIR)/libsnap_a-complex_length.Tpo -c -o libsnap_a-complex_length.o `test -f 'complex_length.cc' || echo '$(srcdir)/'`complex_length.cc
	mv -f $(DEPDIR)/libsnap_a-complex_length.Tpo $(DEPDIR)/libsnap_a-complex_length.Po
#	source='complex_length.cc' object='libsnap_a-complex_length.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-complex_length.o `test -f 'complex_length.cc' || echo '$(srcdir)/'`complex_length.cc

libsnap_a-complex_length.obj: complex_length.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-complex_length.obj -MD -MP -MF $(DEPDIR)/libsnap_a-complex_length.Tpo -c -o libsnap_a-complex_length.obj `if test -f 'complex_length.cc'; then $(CYGPATH_W) 'complex_length.cc'; else $(CYGPATH_W) '$(srcdir)/complex_length.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-complex_length.Tpo $(DEPDIR)/libsnap_a-complex_length.Po
#	source='complex_length.cc' object='libsnap_a-complex_length.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-complex_length.obj `if test -f 'complex_length.cc'; then $(CYGPATH_W) 'complex_length.cc'; else $(CYGPATH_W) '$(srcdir)/complex_length.cc'; fi`

libsnap_a-continued_fractions.o: continued_fractions.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-continued_fractions.o -MD -MP -MF $(DEPDIR)/libsnap_a-continued_fractions.Tpo -c -o libsnap_a-continued_fractions.o `test -f 'continued_fractions.cc' || echo '$(srcdir)/'`continued_fractions.cc
	mv -f $(DEPDIR)/libsnap_a-continued_fractions.Tpo $(DEPDIR)/libsnap_a-continued_fractions.Po
#	source='continued_fractions.cc' object='libsnap_a-continued_fractions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-continued_fractions.o `test -f 'continued_fractions.cc' || echo '$(srcdir)/'`continued_fractions.cc

libsnap_a-continued_fractions.obj: continued_fractions.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-continued_fractions.obj -MD -MP -MF $(DEPDIR)/libsnap_a-continued_fractions.Tpo -c -o libsnap_a-continued_fractions.obj `if test -f 'continued_fractions.cc'; then $(CYGPATH_W) 'continued_fractions.cc'; else $(CYGPATH_W) '$(srcdir)/continued_fractions.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-continued_fractions.Tpo $(DEPDIR)/libsnap_a-continued_fractions.Po
#	source='continued_fractions.cc' object='libsnap_a-continued_fractions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-continued_fractions.obj `if test -f 'continued_fractions.cc'; then $(CYGPATH_W) 'continued_fractions.cc'; else $(CYGPATH_W) '$(srcdir)/continued_fractions.cc'; fi`

libsnap_a-core_geodesics.o: core_geodesics.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-core_geodesics.o -MD -MP -MF $(DEPDIR)/libsnap_a-core_geodesics.Tpo -c -o libsnap_a-core_geodesics.o `test -f 'core_geodesics.cc' || echo '$(srcdir)/'`core_geodesics.cc
	mv -f $(DEPDIR)/libsnap_a-core_geodesics.Tpo $(DEPDIR)/libsnap_a-core_geodesics.Po
#	source='core_geodesics.cc' object='libsnap_a-core_geodesics.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-core_geodesics.o `test -f 'core_geodesics.cc' || echo '$(srcdir)/'`core_geodesics.cc

libsnap_a-core_geodesics.obj: core_geodesics.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-core_geodesics.obj -MD -MP -MF $(DEPDIR)/libsnap_a-core_geodesics.Tpo -c -o libsnap_a-core_geodesics.obj `if test -f 'core_geodesics.cc'; then $(CYGPATH_W) 'core_geodesics.cc'; else $(CYGPATH_W) '$(srcdir)/core_geodesics.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-core_geodesics.Tpo $(DEPDIR)/libsnap_a-core_geodesics.Po
#	source='core_geodesics.cc' object='libsnap_a-core_geodesics.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-core_geodesics.obj `if test -f 'core_geodesics.cc'; then $(CYGPATH_W) 'core_geodesics.cc'; else $(CYGPATH_W) '$(srcdir)/core_geodesics.cc'; fi`

libsnap_a-cover.o: cover.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-cover.o -MD -MP -MF $(DEPDIR)/libsnap_a-cover.Tpo -c -o libsnap_a-cover.o `test -f 'cover.cc' || echo '$(srcdir)/'`cover.cc
	mv -f $(DEPDIR)/libsnap_a-cover.Tpo $(DEPDIR)/libsnap_a-cover.Po
#	source='cover.cc' object='libsnap_a-cover.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-cover.o `test -f 'cover.cc' || echo '$(srcdir)/'`cover.cc

libsnap_a-cover.obj: cover.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-cover.obj -MD -MP -MF $(DEPDIR)/libsnap_a-cover.Tpo -c -o libsnap_a-cover.obj `if test -f 'cover.cc'; then $(CYGPATH_W) 'cover.cc'; else $(CYGPATH_W) '$(srcdir)/cover.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-cover.Tpo $(DEPDIR)/libsnap_a-cover.Po
#	source='cover.cc' object='libsnap_a-cover.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-cover.obj `if test -f 'cover.cc'; then $(CYGPATH_W) 'cover.cc'; else $(CYGPATH_W) '$(srcdir)/cover.cc'; fi`

libsnap_a-current_curve_basis.o: current_curve_basis.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-current_curve_basis.o -MD -MP -MF $(DEPDIR)/libsnap_a-current_curve_basis.Tpo -c -o libsnap_a-current_curve_basis.o `test -f 'current_curve_basis.cc' || echo '$(srcdir)/'`current_curve_basis.cc
	mv -f $(DEPDIR)/libsnap_a-current_curve_basis.Tpo $(DEPDIR)/libsnap_a-current_curve_basis.Po
#	source='current_curve_basis.cc' object='libsnap_a-current_curve_basis.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-current_curve_basis.o `test -f 'current_curve_basis.cc' || echo '$(srcdir)/'`current_curve_basis.cc

libsnap_a-current_curve_basis.obj: current_curve_basis.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-current_curve_basis.obj -MD -MP -MF $(DEPDIR)/libsnap_a-current_curve_basis.Tpo -c -o libsnap_a-current_curve_basis.obj `if test -f 'current_curve_basis.cc'; then $(CYGPATH_W) 'current_curve_basis.cc'; else $(CYGPATH_W) '$(srcdir)/current_curve_basis.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-current_curve_basis.Tpo $(DEPDIR)/libsnap_a-current_curve_basis.Po
#	source='current_curve_basis.cc' object='libsnap_a-current_curve_basis.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-current_curve_basis.obj `if test -f 'current_curve_basis.cc'; then $(CYGPATH_W) 'current_curve_basis.cc'; else $(CYGPATH_W) '$(srcdir)/current_curve_basis.cc'; fi`

libsnap_a-cusp_cross_sections.o: cusp_cross_sections.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-cusp_cross_sections.o -MD -MP -MF $(DEPDIR)/libsnap_a-cusp_cross_sections.Tpo -c -o libsnap_a-cusp_cross_sections.o `test -f 'cusp_cross_sections.cc' || echo '$(srcdir)/'`cusp_cross_sections.cc
	mv -f $(DEPDIR)/libsnap_a-cusp_cross_sections.Tpo $(DEPDIR)/libsnap_a-cusp_cross_sections.Po
#	source='cusp_cross_sections.cc' object='libsnap_a-cusp_cross_sections.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-cusp_cross_sections.o `test -f 'cusp_cross_sections.cc' || echo '$(srcdir)/'`cusp_cross_sections.cc

libsnap_a-cusp_cross_sections.obj: cusp_cross_sections.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-cusp_cross_sections.obj -MD -MP -MF $(DEPDIR)/libsnap_a-cusp_cross_sections.Tpo -c -o libsnap_a-cusp_cross_sections.obj `if test -f 'cusp_cross_sections.cc'; then $(CYGPATH_W) 'cusp_cross_sections.cc'; else $(CYGPATH_W) '$(srcdir)/cusp_cross_sections.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-cusp_cross_sections.Tpo $(DEPDIR)/libsnap_a-cusp_cross_sections.Po
#	source='cusp_cross_sections.cc' object='libsnap_a-cusp_cross_sections.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-cusp_cross_sections.obj `if test -f 'cusp_cross_sections.cc'; then $(CYGPATH_W) 'cusp_cross_sections.cc'; else $(CYGPATH_W) '$(srcdir)/cusp_cross_sections.cc'; fi`

libsnap_a-cusp_neighborhoods.o: cusp_neighborhoods.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-cusp_neighborhoods.o -MD -MP -MF $(DEPDIR)/libsnap_a-cusp_neighborhoods.Tpo -c -o libsnap_a-cusp_neighborhoods.o `test -f 'cusp_neighborhoods.cc' || echo '$(srcdir)/'`cusp_neighborhoods.cc
	mv -f $(DEPDIR)/libsnap_a-cusp_neighborhoods.Tpo $(DEPDIR)/libsnap_a-cusp_neighborhoods.Po
#	source='cusp_neighborhoods.cc' object='libsnap_a-cusp_neighborhoods.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-cusp_neighborhoods.o `test -f 'cusp_neighborhoods.cc' || echo '$(srcdir)/'`cusp_neighborhoods.cc

libsnap_a-cusp_neighborhoods.obj: cusp_neighborhoods.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-cusp_neighborhoods.obj -MD -MP -MF $(DEPDIR)/libsnap_a-cusp_neighborhoods.Tpo -c -o libsnap_a-cusp_neighborhoods.obj `if test -f 'cusp_neighborhoods.cc'; then $(CYGPATH_W) 'cusp_neighborhoods.cc'; else $(CYGPATH_W) '$(srcdir)/cusp_neighborhoods.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-cusp_neighborhoods.Tpo $(DEPDIR)/libsnap_a-cusp_neighborhoods.Po
#	source='cusp_neighborhoods.cc' object='libsnap_a-cusp_neighborhoods.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-cusp_neighborhoods.obj `if test -f 'cusp_neighborhoods.cc'; then $(CYGPATH_W) 'cusp_neighborhoods.cc'; else $(CYGPATH_W) '$(srcdir)/cusp_neighborhoods.cc'; fi`

libsnap_a-cusp_shapes.o: cusp_shapes.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-cusp_shapes.o -MD -MP -MF $(DEPDIR)/libsnap_a-cusp_shapes.Tpo -c -o libsnap_a-cusp_shapes.o `test -f 'cusp_shapes.cc' || echo '$(srcdir)/'`cusp_shapes.cc
	mv -f $(DEPDIR)/libsnap_a-cusp_shapes.Tpo $(DEPDIR)/libsnap_a-cusp_shapes.Po
#	source='cusp_shapes.cc' object='libsnap_a-cusp_shapes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-cusp_shapes.o `test -f 'cusp_shapes.cc' || echo '$(srcdir)/'`cusp_shapes.cc

libsnap_a-cusp_shapes.obj: cusp_shapes.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-cusp_shapes.obj -MD -MP -MF $(DEPDIR)/libsnap_a-cusp_shapes.Tpo -c -o libsnap_a-cusp_shapes.obj `if test -f 'cusp_shapes.cc'; then $(CYGPATH_W) 'cusp_shapes.cc'; else $(CYGPATH_W) '$(srcdir)/cusp_shapes.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-cusp_shapes.Tpo $(DEPDIR)/libsnap_a-cusp_shapes.Po
#	source='cusp_shapes.cc' object='libsnap_a-cusp_shapes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-cusp_shapes.obj `if test -f 'cusp_shapes.cc'; then $(CYGPATH_W) 'cusp_shapes.cc'; else $(CYGPATH_W) '$(srcdir)/cusp_shapes.cc'; fi`

libsnap_a-cusps.o: cusps.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-cusps.o -MD -MP -MF $(DEPDIR)/libsnap_a-cusps.Tpo -c -o libsnap_a-cusps.o `test -f 'cusps.cc' || echo '$(srcdir)/'`cusps.cc
	mv -f $(DEPDIR)/libsnap_a-cusps.Tpo $(DEPDIR)/libsnap_a-cusps.Po
#	source='cusps.cc' object='libsnap_a-cusps.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-cusps.o `test -f 'cusps.cc' || echo '$(srcdir)/'`cusps.cc

libsnap_a-cusps.obj: cusps.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-cusps.obj -MD -MP -MF $(DEPDIR)/libsnap_a-cusps.Tpo -c -o libsnap_a-cusps.obj `if test -f 'cusps.cc'; then $(CYGPATH_W) 'cusps.cc'; else $(CYGPATH_W) '$(srcdir)/cusps.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-cusps.Tpo $(DEPDIR)/libsnap_a-cusps.Po
#	source='cusps.cc' object='libsnap_a-cusps.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-cusps.obj `if test -f 'cusps.cc'; then $(CYGPATH_W) 'cusps.cc'; else $(CYGPATH_W) '$(srcdir)/cusps.cc'; fi`

libsnap_a-decode_new_DT.o: decode_new_DT.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-decode_new_DT.o -MD -MP -MF $(DEPDIR)/libsnap_a-decode_new_DT.Tpo -c -o libsnap_a-decode_new_DT.o `test -f 'decode_new_DT.cc' || echo '$(srcdir)/'`decode_new_DT.cc
	mv -f $(DEPDIR)/libsnap_a-decode_new_DT.Tpo $(DEPDIR)/libsnap_a-decode_new_DT.Po
#	source='decode_new_DT.cc' object='libsnap_a-decode_new_DT.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-decode_new_DT.o `test -f 'decode_new_DT.cc' || echo '$(srcdir)/'`decode_new_DT.cc

libsnap_a-decode_new_DT.obj: decode_new_DT.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-decode_new_DT.obj -MD -MP -MF $(DEPDIR)/libsnap_a-decode_new_DT.Tpo -c -o libsnap_a-decode_new_DT.obj `if test -f 'decode_new_DT.cc'; then $(CYGPATH_W) 'decode_new_DT.cc'; else $(CYGPATH_W) '$(srcdir)/decode_new_DT.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-decode_new_DT.Tpo $(DEPDIR)/libsnap_a-decode_new_DT.Po
#	source='decode_new_DT.cc' object='libsnap_a-decode_new_DT.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-decode_new_DT.obj `if test -f 'decode_new_DT.cc'; then $(CYGPATH_W) 'decode_new_DT.cc'; else $(CYGPATH_W) '$(srcdir)/decode_new_DT.cc'; fi`

libsnap_a-diagnostic.o: diagnostic.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-diagnostic.o -MD -MP -MF $(DEPDIR)/libsnap_a-diagnostic.Tpo -c -o libsnap_a-diagnostic.o `test -f 'diagnostic.cc' || echo '$(srcdir)/'`diagnostic.cc
	mv -f $(DEPDIR)/libsnap_a-diagnostic.Tpo $(DEPDIR)/libsnap_a-diagnostic.Po
#	source='diagnostic.cc' object='libsnap_a-diagnostic.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-diagnostic.o `test -f 'diagnostic.cc' || echo '$(srcdir)/'`diagnostic.cc

libsnap_a-diagnostic.obj: diagnostic.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-diagnostic.obj -MD -MP -MF $(DEPDIR)/libsnap_a-diagnostic.Tpo -c -o libsnap_a-diagnostic.obj `if test -f 'diagnostic.cc'; then $(CYGPATH_W) 'diagnostic.cc'; else $(CYGPATH_W) '$(srcdir)/diagnostic.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-diagnostic.Tpo $(DEPDIR)/libsnap_a-diagnostic.Po
#	source='diagnostic.cc' object='libsnap_a-diagnostic.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-diagnostic.obj `if test -f 'diagnostic.cc'; then $(CYGPATH_W) 'diagnostic.cc'; else $(CYGPATH_W) '$(srcdir)/diagnostic.cc'; fi`

libsnap_a-direct_product.o: direct_product.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-direct_product.o -MD -MP -MF $(DEPDIR)/libsnap_a-direct_product.Tpo -c -o libsnap_a-direct_product.o `test -f 'direct_product.cc' || echo '$(srcdir)/'`direct_product.cc
	mv -f $(DEPDIR)/libsnap_a-direct_product.Tpo $(DEPDIR)/libsnap_a-direct_product.Po
#	source='direct_product.cc' object='libsnap_a-direct_product.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-direct_product.o `test -f 'direct_product.cc' || echo '$(srcdir)/'`direct_product.cc

libsnap_a-direct_product.obj: direct_product.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-direct_product.obj -MD -MP -MF $(DEPDIR)/libsnap_a-direct_product.Tpo -c -o libsnap_a-direct_product.obj `if test -f 'direct_product.cc'; then $(CYGPATH_W) 'direct_product.cc'; else $(CYGPATH_W) '$(srcdir)/direct_product.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-direct_product.Tpo $(DEPDIR)/libsnap_a-direct_product.Po
#	source='direct_product.cc' object='libsnap_a-direct_product.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-direct_product.obj `if test -f 'direct_product.cc'; then $(CYGPATH_W) 'direct_product.cc'; else $(CYGPATH_W) '$(srcdir)/direct_product.cc'; fi`

libsnap_a-double_cover.o: double_cover.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-double_cover.o -MD -MP -MF $(DEPDIR)/libsnap_a-double_cover.Tpo -c -o libsnap_a-double_cover.o `test -f 'double_cover.cc' || echo '$(srcdir)/'`double_cover.cc
	mv -f $(DEPDIR)/libsnap_a-double_cover.Tpo $(DEPDIR)/libsnap_a-double_cover.Po
#	source='double_cover.cc' object='libsnap_a-double_cover.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-double_cover.o `test -f 'double_cover.cc' || echo '$(srcdir)/'`double_cover.cc

libsnap_a-double_cover.obj: double_cover.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-double_cover.obj -MD -MP -MF $(DEPDIR)/libsnap_a-double_cover.Tpo -c -o libsnap_a-double_cover.obj `if test -f 'double_cover.cc'; then $(CYGPATH_W) 'double_cover.cc'; else $(CYGPATH_W) '$(srcdir)/double_cover.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-double_cover.Tpo $(DEPDIR)/libsnap_a-double_cover.Po
#	source='double_cover.cc' object='libsnap_a-double_cover.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-double_cover.obj `if test -f 'double_cover.cc'; then $(CYGPATH_W) 'double_cover.cc'; else $(CYGPATH_W) '$(srcdir)/double_cover.cc'; fi`

libsnap_a-drilling.o: drilling.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-drilling.o -MD -MP -MF $(DEPDIR)/libsnap_a-drilling.Tpo -c -o libsnap_a-drilling.o `test -f 'drilling.cc' || echo '$(srcdir)/'`drilling.cc
	mv -f $(DEPDIR)/libsnap_a-drilling.Tpo $(DEPDIR)/libsnap_a-drilling.Po
#	source='drilling.cc' object='libsnap_a-drilling.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-drilling.o `test -f 'drilling.cc' || echo '$(srcdir)/'`drilling.cc

libsnap_a-drilling.obj: drilling.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-drilling.obj -MD -MP -MF $(DEPDIR)/libsnap_a-drilling.Tpo -c -o libsnap_a-drilling.obj `if test -f 'drilling.cc'; then $(CYGPATH_W) 'drilling.cc'; else $(CYGPATH_W) '$(srcdir)/drilling.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-drilling.Tpo $(DEPDIR)/libsnap_a-drilling.Po
#	source='drilling.cc' object='libsnap_a-drilling.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-drilling.obj `if test -f 'drilling.cc'; then $(CYGPATH_W) 'drilling.cc'; else $(CYGPATH_W) '$(srcdir)/drilling.cc'; fi`

libsnap_a-dual_curves.o: dual_curves.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-dual_curves.o -MD -MP -MF $(DEPDIR)/libsnap_a-dual_curves.Tpo -c -o libsnap_a-dual_curves.o `test -f 'dual_curves.cc' || echo '$(srcdir)/'`dual_curves.cc
	mv -f $(DEPDIR)/libsnap_a-dual_curves.Tpo $(DEPDIR)/libsnap_a-dual_curves.Po
#	source='dual_curves.cc' object='libsnap_a-dual_curves.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-dual_curves.o `test -f 'dual_curves.cc' || echo '$(srcdir)/'`dual_curves.cc

libsnap_a-dual_curves.obj: dual_curves.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-dual_curves.obj -MD -MP -MF $(DEPDIR)/libsnap_a-dual_curves.Tpo -c -o libsnap_a-dual_curves.obj `if test -f 'dual_curves.cc'; then $(CYGPATH_W) 'dual_curves.cc'; else $(CYGPATH_W) '$(srcdir)/dual_curves.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-dual_curves.Tpo $(DEPDIR)/libsnap_a-dual_curves.Po
#	source='dual_curves.cc' object='libsnap_a-dual_curves.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-dual_curves.obj `if test -f 'dual_curves.cc'; then $(CYGPATH_W) 'dual_curves.cc'; else $(CYGPATH_W) '$(srcdir)/dual_curves.cc'; fi`

libsnap_a-edge_classes.o: edge_classes.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-edge_classes.o -MD -MP -MF $(DEPDIR)/libsnap_a-edge_classes.Tpo -c -o libsnap_a-edge_classes.o `test -f 'edge_classes.cc' || echo '$(srcdir)/'`edge_classes.cc
	mv -f $(DEPDIR)/libsnap_a-edge_classes.Tpo $(DEPDIR)/libsnap_a-edge_classes.Po
#	source='edge_classes.cc' object='libsnap_a-edge_classes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-edge_classes.o `test -f 'edge_classes.cc' || echo '$(srcdir)/'`edge_classes.cc

libsnap_a-edge_classes.obj: edge_classes.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-edge_classes.obj -MD -MP -MF $(DEPDIR)/libsnap_a-edge_classes.Tpo -c -o libsnap_a-edge_classes.obj `if test -f 'edge_classes.cc'; then $(CYGPATH_W) 'edge_classes.cc'; else $(CYGPATH_W) '$(srcdir)/edge_classes.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-edge_classes.Tpo $(DEPDIR)/libsnap_a-edge_classes.Po
#	source='edge_classes.cc' object='libsnap_a-edge_classes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-edge_classes.obj `if test -f 'edge_classes.cc'; then $(CYGPATH_W) 'edge_classes.cc'; else $(CYGPATH_W) '$(srcdir)/edge_classes.cc'; fi`

libsnap_a-elements_generate_group.o: elements_generate_group.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-elements_generate_group.o -MD -MP -MF $(DEPDIR)/libsnap_a-elements_generate_group.Tpo -c -o libsnap_a-elements_generate_group.o `test -f 'elements_generate_group.cc' || echo '$(srcdir)/'`elements_generate_group.cc
	mv -f $(DEPDIR)/libsnap_a-elements_generate_group.Tpo $(DEPDIR)/libsnap_a-elements_generate_group.Po
#	source='elements_generate_group.cc' object='libsnap_a-elements_generate_group.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-elements_generate_group.o `test -f 'elements_generate_group.cc' || echo '$(srcdir)/'`elements_generate_group.cc

libsnap_a-elements_generate_group.obj: elements_generate_group.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-elements_generate_group.obj -MD -MP -MF $(DEPDIR)/libsnap_a-elements_generate_group.Tpo -c -o libsnap_a-elements_generate_group.obj `if test -f 'elements_generate_group.cc'; then $(CYGPATH_W) 'elements_generate_group.cc'; else $(CYGPATH_W) '$(srcdir)/elements_generate_group.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-elements_generate_group.Tpo $(DEPDIR)/libsnap_a-elements_generate_group.Po
#	source='elements_generate_group.cc' object='libsnap_a-elements_generate_group.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-elements_generate_group.obj `if test -f 'elements_generate_group.cc'; then $(CYGPATH_W) 'elements_generate_group.cc'; else $(CYGPATH_W) '$(srcdir)/elements_generate_group.cc'; fi`

libsnap_a-filling.o: filling.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-filling.o -MD -MP -MF $(DEPDIR)/libsnap_a-filling.Tpo -c -o libsnap_a-filling.o `test -f 'filling.cc' || echo '$(srcdir)/'`filling.cc
	mv -f $(DEPDIR)/libsnap_a-filling.Tpo $(DEPDIR)/libsnap_a-filling.Po
#	source='filling.cc' object='libsnap_a-filling.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-filling.o `test -f 'filling.cc' || echo '$(srcdir)/'`filling.cc

libsnap_a-filling.obj: filling.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-filling.obj -MD -MP -MF $(DEPDIR)/libsnap_a-filling.Tpo -c -o libsnap_a-filling.obj `if test -f 'filling.cc'; then $(CYGPATH_W) 'filling.cc'; else $(CYGPATH_W) '$(srcdir)/filling.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-filling.Tpo $(DEPDIR)/libsnap_a-filling.Po
#	source='filling.cc' object='libsnap_a-filling.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-filling.obj `if test -f 'filling.cc'; then $(CYGPATH_W) 'filling.cc'; else $(CYGPATH_W) '$(srcdir)/filling.cc'; fi`

libsnap_a-find_cusp.o: find_cusp.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-find_cusp.o -MD -MP -MF $(DEPDIR)/libsnap_a-find_cusp.Tpo -c -o libsnap_a-find_cusp.o `test -f 'find_cusp.cc' || echo '$(srcdir)/'`find_cusp.cc
	mv -f $(DEPDIR)/libsnap_a-find_cusp.Tpo $(DEPDIR)/libsnap_a-find_cusp.Po
#	source='find_cusp.cc' object='libsnap_a-find_cusp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-find_cusp.o `test -f 'find_cusp.cc' || echo '$(srcdir)/'`find_cusp.cc

libsnap_a-find_cusp.obj: find_cusp.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-find_cusp.obj -MD -MP -MF $(DEPDIR)/libsnap_a-find_cusp.Tpo -c -o libsnap_a-find_cusp.obj `if test -f 'find_cusp.cc'; then $(CYGPATH_W) 'find_cusp.cc'; else $(CYGPATH_W) '$(srcdir)/find_cusp.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-find_cusp.Tpo $(DEPDIR)/libsnap_a-find_cusp.Po
#	source='find_cusp.cc' object='libsnap_a-find_cusp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-find_cusp.obj `if test -f 'find_cusp.cc'; then $(CYGPATH_W) 'find_cusp.cc'; else $(CYGPATH_W) '$(srcdir)/find_cusp.cc'; fi`

libsnap_a-finite_vertices.o: finite_vertices.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-finite_vertices.o -MD -MP -MF $(DEPDIR)/libsnap_a-finite_vertices.Tpo -c -o libsnap_a-finite_vertices.o `test -f 'finite_vertices.cc' || echo '$(srcdir)/'`finite_vertices.cc
	mv -f $(DEPDIR)/libsnap_a-finite_vertices.Tpo $(DEPDIR)/libsnap_a-finite_vertices.Po
#	source='finite_vertices.cc' object='libsnap_a-finite_vertices.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-finite_vertices.o `test -f 'finite_vertices.cc' || echo '$(srcdir)/'`finite_vertices.cc

libsnap_a-finite_vertices.obj: finite_vertices.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-finite_vertices.obj -MD -MP -MF $(DEPDIR)/libsnap_a-finite_vertices.Tpo -c -o libsnap_a-finite_vertices.obj `if test -f 'finite_vertices.cc'; then $(CYGPATH_W) 'finite_vertices.cc'; else $(CYGPATH_W) '$(srcdir)/finite_vertices.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-finite_vertices.Tpo $(DEPDIR)/libsnap_a-finite_vertices.Po
#	source='finite_vertices.cc' object='libsnap_a-finite_vertices.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-finite_vertices.obj `if test -f 'finite_vertices.cc'; then $(CYGPATH_W) 'finite_vertices.cc'; else $(CYGPATH_W) '$(srcdir)/finite_vertices.cc'; fi`

libsnap_a-fundamental_group.o: fundamental_group.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-fundamental_group.o -MD -MP -MF $(DEPDIR)/libsnap_a-fundamental_group.Tpo -c -o libsnap_a-fundamental_group.o `test -f 'fundamental_group.cc' || echo '$(srcdir)/'`fundamental_group.cc
	mv -f $(DEPDIR)/libsnap_a-fundamental_group.Tpo $(DEPDIR)/libsnap_a-fundamental_group.Po
#	source='fundamental_group.cc' object='libsnap_a-fundamental_group.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-fundamental_group.o `test -f 'fundamental_group.cc' || echo '$(srcdir)/'`fundamental_group.cc

libsnap_a-fundamental_group.obj: fundamental_group.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-fundamental_group.obj -MD -MP -MF $(DEPDIR)/libsnap_a-fundamental_group.Tpo -c -o libsnap_a-fundamental_group.obj `if test -f 'fundamental_group.cc'; then $(CYGPATH_W) 'fundamental_group.cc'; else $(CYGPATH_W) '$(srcdir)/fundamental_group.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-fundamental_group.Tpo $(DEPDIR)/libsnap_a-fundamental_group.Po
#	source='fundamental_group.cc' object='libsnap_a-fundamental_group.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-fundamental_group.obj `if test -f 'fundamental_group.cc'; then $(CYGPATH_W) 'fundamental_group.cc'; else $(CYGPATH_W) '$(srcdir)/fundamental_group.cc'; fi`

libsnap_a-gcd.o: gcd.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-gcd.o -MD -MP -MF $(DEPDIR)/libsnap_a-gcd.Tpo -c -o libsnap_a-gcd.o `test -f 'gcd.cc' || echo '$(srcdir)/'`gcd.cc
	mv -f $(DEPDIR)/libsnap_a-gcd.Tpo $(DEPDIR)/libsnap_a-gcd.Po
#	source='gcd.cc' object='libsnap_a-gcd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-gcd.o `test -f 'gcd.cc' || echo '$(srcdir)/'`gcd.cc

libsnap_a-gcd.obj: gcd.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-gcd.obj -MD -MP -MF $(DEPDIR)/libsnap_a-gcd.Tpo -c -o libsnap_a-gcd.obj `if test -f 'gcd.cc'; then $(CYGPATH_W) 'gcd.cc'; else $(CYGPATH_W) '$(srcdir)/gcd.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-gcd.Tpo $(DEPDIR)/libsnap_a-gcd.Po
#	source='gcd.cc' object='libsnap_a-gcd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-gcd.obj `if test -f 'gcd.cc'; then $(CYGPATH_W) 'gcd.cc'; else $(CYGPATH_W) '$(srcdir)/gcd.cc'; fi`

libsnap_a-gluing_equations.o: gluing_equations.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-gluing_equations.o -MD -MP -MF $(DEPDIR)/libsnap_a-gluing_equations.Tpo -c -o libsnap_a-gluing_equations.o `test -f 'gluing_equations.cc' || echo '$(srcdir)/'`gluing_equations.cc
	mv -f $(DEPDIR)/libsnap_a-gluing_equations.Tpo $(DEPDIR)/libsnap_a-gluing_equations.Po
#	source='gluing_equations.cc' object='libsnap_a-gluing_equations.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-gluing_equations.o `test -f 'gluing_equations.cc' || echo '$(srcdir)/'`gluing_equations.cc

libsnap_a-gluing_equations.obj: gluing_equations.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-gluing_equations.obj -MD -MP -MF $(DEPDIR)/libsnap_a-gluing_equations.Tpo -c -o libsnap_a-gluing_equations.obj `if test -f 'gluing_equations.cc'; then $(CYGPATH_W) 'gluing_equations.cc'; else $(CYGPATH_W) '$(srcdir)/gluing_equations.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-gluing_equations.Tpo $(DEPDIR)/libsnap_a-gluing_equations.Po
#	source='gluing_equations.cc' object='libsnap_a-gluing_equations.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-gluing_equations.obj `if test -f 'gluing_equations.cc'; then $(CYGPATH_W) 'gluing_equations.cc'; else $(CYGPATH_W) '$(srcdir)/gluing_equations.cc'; fi`

libsnap_a-holonomy.o: holonomy.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-holonomy.o -MD -MP -MF $(DEPDIR)/libsnap_a-holonomy.Tpo -c -o libsnap_a-holonomy.o `test -f 'holonomy.cc' || echo '$(srcdir)/'`holonomy.cc
	mv -f $(DEPDIR)/libsnap_a-holonomy.Tpo $(DEPDIR)/libsnap_a-holonomy.Po
#	source='holonomy.cc' object='libsnap_a-holonomy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-holonomy.o `test -f 'holonomy.cc' || echo '$(srcdir)/'`holonomy.cc

libsnap_a-holonomy.obj: holonomy.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-holonomy.obj -MD -MP -MF $(DEPDIR)/libsnap_a-holonomy.Tpo -c -o libsnap_a-holonomy.obj `if test -f 'holonomy.cc'; then $(CYGPATH_W) 'holonomy.cc'; else $(CYGPATH_W) '$(srcdir)/holonomy.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-holonomy.Tpo $(DEPDIR)/libsnap_a-holonomy.Po
#	source='holonomy.cc' object='libsnap_a-holonomy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-holonomy.obj `if test -f 'holonomy.cc'; then $(CYGPATH_W) 'holonomy.cc'; else $(CYGPATH_W) '$(srcdir)/holonomy.cc'; fi`

libsnap_a-homology.o: homology.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-homology.o -MD -MP -MF $(DEPDIR)/libsnap_a-homology.Tpo -c -o libsnap_a-homology.o `test -f 'homology.cc' || echo '$(srcdir)/'`homology.cc
	mv -f $(DEPDIR)/libsnap_a-homology.Tpo $(DEPDIR)/libsnap_a-homology.Po
#	source='homology.cc' object='libsnap_a-homology.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-homology.o `test -f 'homology.cc' || echo '$(srcdir)/'`homology.cc

libsnap_a-homology.obj: homology.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-homology.obj -MD -MP -MF $(DEPDIR)/libsnap_a-homology.Tpo -c -o libsnap_a-homology.obj `if test -f 'homology.cc'; then $(CYGPATH_W) 'homology.cc'; else $(CYGPATH_W) '$(srcdir)/homology.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-homology.Tpo $(DEPDIR)/libsnap_a-homology.Po
#	source='homology.cc' object='libsnap_a-homology.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-homology.obj `if test -f 'homology.cc'; then $(CYGPATH_W) 'homology.cc'; else $(CYGPATH_W) '$(srcdir)/homology.cc'; fi`

libsnap_a-hyperbolic_structure.o: hyperbolic_structure.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-hyperbolic_structure.o -MD -MP -MF $(DEPDIR)/libsnap_a-hyperbolic_structure.Tpo -c -o libsnap_a-hyperbolic_structure.o `test -f 'hyperbolic_structure.cc' || echo '$(srcdir)/'`hyperbolic_structure.cc
	mv -f $(DEPDIR)/libsnap_a-hyperbolic_structure.Tpo $(DEPDIR)/libsnap_a-hyperbolic_structure.Po
#	source='hyperbolic_structure.cc' object='libsnap_a-hyperbolic_structure.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-hyperbolic_structure.o `test -f 'hyperbolic_structure.cc' || echo '$(srcdir)/'`hyperbolic_structure.cc

libsnap_a-hyperbolic_structure.obj: hyperbolic_structure.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-hyperbolic_structure.obj -MD -MP -MF $(DEPDIR)/libsnap_a-hyperbolic_structure.Tpo -c -o libsnap_a-hyperbolic_structure.obj `if test -f 'hyperbolic_structure.cc'; then $(CYGPATH_W) 'hyperbolic_structure.cc'; else $(CYGPATH_W) '$(srcdir)/hyperbolic_structure.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-hyperbolic_structure.Tpo $(DEPDIR)/libsnap_a-hyperbolic_structure.Po
#	source='hyperbolic_structure.cc' object='libsnap_a-hyperbolic_structure.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-hyperbolic_structure.obj `if test -f 'hyperbolic_structure.cc'; then $(CYGPATH_W) 'hyperbolic_structure.cc'; else $(CYGPATH_W) '$(srcdir)/hyperbolic_structure.cc'; fi`

libsnap_a-identify_solution_type.o: identify_solution_type.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-identify_solution_type.o -MD -MP -MF $(DEPDIR)/libsnap_a-identify_solution_type.Tpo -c -o libsnap_a-identify_solution_type.o `test -f 'identify_solution_type.cc' || echo '$(srcdir)/'`identify_solution_type.cc
	mv -f $(DEPDIR)/libsnap_a-identify_solution_type.Tpo $(DEPDIR)/libsnap_a-identify_solution_type.Po
#	source='identify_solution_type.cc' object='libsnap_a-identify_solution_type.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-identify_solution_type.o `test -f 'identify_solution_type.cc' || echo '$(srcdir)/'`identify_solution_type.cc

libsnap_a-identify_solution_type.obj: identify_solution_type.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-identify_solution_type.obj -MD -MP -MF $(DEPDIR)/libsnap_a-identify_solution_type.Tpo -c -o libsnap_a-identify_solution_type.obj `if test -f 'identify_solution_type.cc'; then $(CYGPATH_W) 'identify_solution_type.cc'; else $(CYGPATH_W) '$(srcdir)/identify_solution_type.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-identify_solution_type.Tpo $(DEPDIR)/libsnap_a-identify_solution_type.Po
#	source='identify_solution_type.cc' object='libsnap_a-identify_solution_type.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-identify_solution_type.obj `if test -f 'identify_solution_type.cc'; then $(CYGPATH_W) 'identify_solution_type.cc'; else $(CYGPATH_W) '$(srcdir)/identify_solution_type.cc'; fi`

libsnap_a-index_to_hue.o: index_to_hue.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-index_to_hue.o -MD -MP -MF $(DEPDIR)/libsnap_a-index_to_hue.Tpo -c -o libsnap_a-index_to_hue.o `test -f 'index_to_hue.cc' || echo '$(srcdir)/'`index_to_hue.cc
	mv -f $(DEPDIR)/libsnap_a-index_to_hue.Tpo $(DEPDIR)/libsnap_a-index_to_hue.Po
#	source='index_to_hue.cc' object='libsnap_a-index_to_hue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-index_to_hue.o `test -f 'index_to_hue.cc' || echo '$(srcdir)/'`index_to_hue.cc

libsnap_a-index_to_hue.obj: index_to_hue.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-index_to_hue.obj -MD -MP -MF $(DEPDIR)/libsnap_a-index_to_hue.Tpo -c -o libsnap_a-index_to_hue.obj `if test -f 'index_to_hue.cc'; then $(CYGPATH_W) 'index_to_hue.cc'; else $(CYGPATH_W) '$(srcdir)/index_to_hue.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-index_to_hue.Tpo $(DEPDIR)/libsnap_a-index_to_hue.Po
#	source='index_to_hue.cc' object='libsnap_a-index_to_hue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-index_to_hue.obj `if test -f 'index_to_hue.cc'; then $(CYGPATH_W) 'index_to_hue.cc'; else $(CYGPATH_W) '$(srcdir)/index_to_hue.cc'; fi`

libsnap_a-interface.o: interface.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-interface.o -MD -MP -MF $(DEPDIR)/libsnap_a-interface.Tpo -c -o libsnap_a-interface.o `test -f 'interface.cc' || echo '$(srcdir)/'`interface.cc
	mv -f $(DEPDIR)/libsnap_a-interface.Tpo $(DEPDIR)/libsnap_a-interface.Po
#	source='interface.cc' object='libsnap_a-interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-interface.o `test -f 'interface.cc' || echo '$(srcdir)/'`interface.cc

libsnap_a-interface.obj: interface.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-interface.obj -MD -MP -MF $(DEPDIR)/libsnap_a-interface.Tpo -c -o libsnap_a-interface.obj `if test -f 'interface.cc'; then $(CYGPATH_W) 'interface.cc'; else $(CYGPATH_W) '$(srcdir)/interface.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-interface.Tpo $(DEPDIR)/libsnap_a-interface.Po
#	source='interface.cc' object='libsnap_a-interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-interface.obj `if test -f 'interface.cc'; then $(CYGPATH_W) 'interface.cc'; else $(CYGPATH_W) '$(srcdir)/interface.cc'; fi`

libsnap_a-intersection_numbers.o: intersection_numbers.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-intersection_numbers.o -MD -MP -MF $(DEPDIR)/libsnap_a-intersection_numbers.Tpo -c -o libsnap_a-intersection_numbers.o `test -f 'intersection_numbers.cc' || echo '$(srcdir)/'`intersection_numbers.cc
	mv -f $(DEPDIR)/libsnap_a-intersection_numbers.Tpo $(DEPDIR)/libsnap_a-intersection_numbers.Po
#	source='intersection_numbers.cc' object='libsnap_a-intersection_numbers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-intersection_numbers.o `test -f 'intersection_numbers.cc' || echo '$(srcdir)/'`intersection_numbers.cc

libsnap_a-intersection_numbers.obj: intersection_numbers.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-intersection_numbers.obj -MD -MP -MF $(DEPDIR)/libsnap_a-intersection_numbers.Tpo -c -o libsnap_a-intersection_numbers.obj `if test -f 'intersection_numbers.cc'; then $(CYGPATH_W) 'intersection_numbers.cc'; else $(CYGPATH_W) '$(srcdir)/intersection_numbers.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-intersection_numbers.Tpo $(DEPDIR)/libsnap_a-intersection_numbers.Po
#	source='intersection_numbers.cc' object='libsnap_a-intersection_numbers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-intersection_numbers.obj `if test -f 'intersection_numbers.cc'; then $(CYGPATH_W) 'intersection_numbers.cc'; else $(CYGPATH_W) '$(srcdir)/intersection_numbers.cc'; fi`

libsnap_a-isometry.o: isometry.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-isometry.o -MD -MP -MF $(DEPDIR)/libsnap_a-isometry.Tpo -c -o libsnap_a-isometry.o `test -f 'isometry.cc' || echo '$(srcdir)/'`isometry.cc
	mv -f $(DEPDIR)/libsnap_a-isometry.Tpo $(DEPDIR)/libsnap_a-isometry.Po
#	source='isometry.cc' object='libsnap_a-isometry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-isometry.o `test -f 'isometry.cc' || echo '$(srcdir)/'`isometry.cc

libsnap_a-isometry.obj: isometry.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-isometry.obj -MD -MP -MF $(DEPDIR)/libsnap_a-isometry.Tpo -c -o libsnap_a-isometry.obj `if test -f 'isometry.cc'; then $(CYGPATH_W) 'isometry.cc'; else $(CYGPATH_W) '$(srcdir)/isometry.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-isometry.Tpo $(DEPDIR)/libsnap_a-isometry.Po
#	source='isometry.cc' object='libsnap_a-isometry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-isometry.obj `if test -f 'isometry.cc'; then $(CYGPATH_W) 'isometry.cc'; else $(CYGPATH_W) '$(srcdir)/isometry.cc'; fi`

libsnap_a-isometry_closed.o: isometry_closed.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-isometry_closed.o -MD -MP -MF $(DEPDIR)/libsnap_a-isometry_closed.Tpo -c -o libsnap_a-isometry_closed.o `test -f 'isometry_closed.cc' || echo '$(srcdir)/'`isometry_closed.cc
	mv -f $(DEPDIR)/libsnap_a-isometry_closed.Tpo $(DEPDIR)/libsnap_a-isometry_closed.Po
#	source='isometry_closed.cc' object='libsnap_a-isometry_closed.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-isometry_closed.o `test -f 'isometry_closed.cc' || echo '$(srcdir)/'`isometry_closed.cc

libsnap_a-isometry_closed.obj: isometry_closed.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-isometry_closed.obj -MD -MP -MF $(DEPDIR)/libsnap_a-isometry_closed.Tpo -c -o libsnap_a-isometry_closed.obj `if test -f 'isometry_closed.cc'; then $(CYGPATH_W) 'isometry_closed.cc'; else $(CYGPATH_W) '$(srcdir)/isometry_closed.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-isometry_closed.Tpo $(DEPDIR)/libsnap_a-isometry_closed.Po
#	source='isometry_closed.cc' object='libsnap_a-isometry_closed.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-isometry_closed.obj `if test -f 'isometry_closed.cc'; then $(CYGPATH_W) 'isometry_closed.cc'; else $(CYGPATH_W) '$(srcdir)/isometry_closed.cc'; fi`

libsnap_a-isometry_cusped.o: isometry_cusped.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-isometry_cusped.o -MD -MP -MF $(DEPDIR)/libsnap_a-isometry_cusped.Tpo -c -o libsnap_a-isometry_cusped.o `test -f 'isometry_cusped.cc' || echo '$(srcdir)/'`isometry_cusped.cc
	mv -f $(DEPDIR)/libsnap_a-isometry_cusped.Tpo $(DEPDIR)/libsnap_a-isometry_cusped.Po
#	source='isometry_cusped.cc' object='libsnap_a-isometry_cusped.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-isometry_cusped.o `test -f 'isometry_cusped.cc' || echo '$(srcdir)/'`isometry_cusped.cc

libsnap_a-isometry_cusped.obj: isometry_cusped.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-isometry_cusped.obj -MD -MP -MF $(DEPDIR)/libsnap_a-isometry_cusped.Tpo -c -o libsnap_a-isometry_cusped.obj `if test -f 'isometry_cusped.cc'; then $(CYGPATH_W) 'isometry_cusped.cc'; else $(CYGPATH_W) '$(srcdir)/isometry_cusped.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-isometry_cusped.Tpo $(DEPDIR)/libsnap_a-isometry_cusped.Po
#	source='isometry_cusped.cc' object='libsnap_a-isometry_cusped.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-isometry_cusped.obj `if test -f 'isometry_cusped.cc'; then $(CYGPATH_W) 'isometry_cusped.cc'; else $(CYGPATH_W) '$(srcdir)/isometry_cusped.cc'; fi`

libsnap_a-length_spectrum.o: length_spectrum.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-length_spectrum.o -MD -MP -MF $(DEPDIR)/libsnap_a-length_spectrum.Tpo -c -o libsnap_a-length_spectrum.o `test -f 'length_spectrum.cc' || echo '$(srcdir)/'`length_spectrum.cc
	mv -f $(DEPDIR)/libsnap_a-length_spectrum.Tpo $(DEPDIR)/libsnap_a-length_spectrum.Po
#	source='length_spectrum.cc' object='libsnap_a-length_spectrum.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-length_spectrum.o `test -f 'length_spectrum.cc' || echo '$(srcdir)/'`length_spectrum.cc

libsnap_a-length_spectrum.obj: length_spectrum.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-length_spectrum.obj -MD -MP -MF $(DEPDIR)/libsnap_a-length_spectrum.Tpo -c -o libsnap_a-length_spectrum.obj `if test -f 'length_spectrum.cc'; then $(CYGPATH_W) 'length_spectrum.cc'; else $(CYGPATH_W) '$(srcdir)/length_spectrum.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-length_spectrum.Tpo $(DEPDIR)/libsnap_a-length_spectrum.Po
#	source='length_spectrum.cc' object='libsnap_a-length_spectrum.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-length_spectrum.obj `if test -f 'length_spectrum.cc'; then $(CYGPATH_W) 'length_spectrum.cc'; else $(CYGPATH_W) '$(srcdir)/length_spectrum.cc'; fi`

libsnap_a-link_complement.o: link_complement.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-link_complement.o -MD -MP -MF $(DEPDIR)/libsnap_a-link_complement.Tpo -c -o libsnap_a-link_complement.o `test -f 'link_complement.cc' || echo '$(srcdir)/'`link_complement.cc
	mv -f $(DEPDIR)/libsnap_a-link_complement.Tpo $(DEPDIR)/libsnap_a-link_complement.Po
#	source='link_complement.cc' object='libsnap_a-link_complement.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-link_complement.o `test -f 'link_complement.cc' || echo '$(srcdir)/'`link_complement.cc

libsnap_a-link_complement.obj: link_complement.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-link_complement.obj -MD -MP -MF $(DEPDIR)/libsnap_a-link_complement.Tpo -c -o libsnap_a-link_complement.obj `if test -f 'link_complement.cc'; then $(CYGPATH_W) 'link_complement.cc'; else $(CYGPATH_W) '$(srcdir)/link_complement.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-link_complement.Tpo $(DEPDIR)/libsnap_a-link_complement.Po
#	source='link_complement.cc' object='libsnap_a-link_complement.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-link_complement.obj `if test -f 'link_complement.cc'; then $(CYGPATH_W) 'link_complement.cc'; else $(CYGPATH_W) '$(srcdir)/link_complement.cc'; fi`

libsnap_a-matrix_conversion.o: matrix_conversion.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-matrix_conversion.o -MD -MP -MF $(DEPDIR)/libsnap_a-matrix_conversion.Tpo -c -o libsnap_a-matrix_conversion.o `test -f 'matrix_conversion.cc' || echo '$(srcdir)/'`matrix_conversion.cc
	mv -f $(DEPDIR)/libsnap_a-matrix_conversion.Tpo $(DEPDIR)/libsnap_a-matrix_conversion.Po
#	source='matrix_conversion.cc' object='libsnap_a-matrix_conversion.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-matrix_conversion.o `test -f 'matrix_conversion.cc' || echo '$(srcdir)/'`matrix_conversion.cc

libsnap_a-matrix_conversion.obj: matrix_conversion.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-matrix_conversion.obj -MD -MP -MF $(DEPDIR)/libsnap_a-matrix_conversion.Tpo -c -o libsnap_a-matrix_conversion.obj `if test -f 'matrix_conversion.cc'; then $(CYGPATH_W) 'matrix_conversion.cc'; else $(CYGPATH_W) '$(srcdir)/matrix_conversion.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-matrix_conversion.Tpo $(DEPDIR)/libsnap_a-matrix_conversion.Po
#	source='matrix_conversion.cc' object='libsnap_a-matrix_conversion.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-matrix_conversion.obj `if test -f 'matrix_conversion.cc'; then $(CYGPATH_W) 'matrix_conversion.cc'; else $(CYGPATH_W) '$(srcdir)/matrix_conversion.cc'; fi`

libsnap_a-matrix_generators.o: matrix_generators.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-matrix_generators.o -MD -MP -MF $(DEPDIR)/libsnap_a-matrix_generators.Tpo -c -o libsnap_a-matrix_generators.o `test -f 'matrix_generators.cc' || echo '$(srcdir)/'`matrix_generators.cc
	mv -f $(DEPDIR)/libsnap_a-matrix_generators.Tpo $(DEPDIR)/libsnap_a-matrix_generators.Po
#	source='matrix_generators.cc' object='libsnap_a-matrix_generators.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-matrix_generators.o `test -f 'matrix_generators.cc' || echo '$(srcdir)/'`matrix_generators.cc

libsnap_a-matrix_generators.obj: matrix_generators.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-matrix_generators.obj -MD -MP -MF $(DEPDIR)/libsnap_a-matrix_generators.Tpo -c -o libsnap_a-matrix_generators.obj `if test -f 'matrix_generators.cc'; then $(CYGPATH_W) 'matrix_generators.cc'; else $(CYGPATH_W) '$(srcdir)/matrix_generators.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-matrix_generators.Tpo $(DEPDIR)/libsnap_a-matrix_generators.Po
#	source='matrix_generators.cc' object='libsnap_a-matrix_generators.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-matrix_generators.obj `if test -f 'matrix_generators.cc'; then $(CYGPATH_W) 'matrix_generators.cc'; else $(CYGPATH_W) '$(srcdir)/matrix_generators.cc'; fi`

libsnap_a-my_malloc.o: my_malloc.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-my_malloc.o -MD -MP -MF $(DEPDIR)/libsnap_a-my_malloc.Tpo -c -o libsnap_a-my_malloc.o `test -f 'my_malloc.cc' || echo '$(srcdir)/'`my_malloc.cc
	mv -f $(DEPDIR)/libsnap_a-my_malloc.Tpo $(DEPDIR)/libsnap_a-my_malloc.Po
#	source='my_malloc.cc' object='libsnap_a-my_malloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-my_malloc.o `test -f 'my_malloc.cc' || echo '$(srcdir)/'`my_malloc.cc

libsnap_a-my_malloc.obj: my_malloc.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-my_malloc.obj -MD -MP -MF $(DEPDIR)/libsnap_a-my_malloc.Tpo -c -o libsnap_a-my_malloc.obj `if test -f 'my_malloc.cc'; then $(CYGPATH_W) 'my_malloc.cc'; else $(CYGPATH_W) '$(srcdir)/my_malloc.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-my_malloc.Tpo $(DEPDIR)/libsnap_a-my_malloc.Po
#	source='my_malloc.cc' object='libsnap_a-my_malloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-my_malloc.obj `if test -f 'my_malloc.cc'; then $(CYGPATH_W) 'my_malloc.cc'; else $(CYGPATH_W) '$(srcdir)/my_malloc.cc'; fi`

libsnap_a-normal_surface_construction.o: normal_surface_construction.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-normal_surface_construction.o -MD -MP -MF $(DEPDIR)/libsnap_a-normal_surface_construction.Tpo -c -o libsnap_a-normal_surface_construction.o `test -f 'normal_surface_construction.cc' || echo '$(srcdir)/'`normal_surface_construction.cc
	mv -f $(DEPDIR)/libsnap_a-normal_surface_construction.Tpo $(DEPDIR)/libsnap_a-normal_surface_construction.Po
#	source='normal_surface_construction.cc' object='libsnap_a-normal_surface_construction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-normal_surface_construction.o `test -f 'normal_surface_construction.cc' || echo '$(srcdir)/'`normal_surface_construction.cc

libsnap_a-normal_surface_construction.obj: normal_surface_construction.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-normal_surface_construction.obj -MD -MP -MF $(DEPDIR)/libsnap_a-normal_surface_construction.Tpo -c -o libsnap_a-normal_surface_construction.obj `if test -f 'normal_surface_construction.cc'; then $(CYGPATH_W) 'normal_surface_construction.cc'; else $(CYGPATH_W) '$(srcdir)/normal_surface_construction.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-normal_surface_construction.Tpo $(DEPDIR)/libsnap_a-normal_surface_construction.Po
#	source='normal_surface_construction.cc' object='libsnap_a-normal_surface_construction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-normal_surface_construction.obj `if test -f 'normal_surface_construction.cc'; then $(CYGPATH_W) 'normal_surface_construction.cc'; else $(CYGPATH_W) '$(srcdir)/normal_surface_construction.cc'; fi`

libsnap_a-normal_surface_recognition.o: normal_surface_recognition.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-normal_surface_recognition.o -MD -MP -MF $(DEPDIR)/libsnap_a-normal_surface_recognition.Tpo -c -o libsnap_a-normal_surface_recognition.o `test -f 'normal_surface_recognition.cc' || echo '$(srcdir)/'`normal_surface_recognition.cc
	mv -f $(DEPDIR)/libsnap_a-normal_surface_recognition.Tpo $(DEPDIR)/libsnap_a-normal_surface_recognition.Po
#	source='normal_surface_recognition.cc' object='libsnap_a-normal_surface_recognition.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-normal_surface_recognition.o `test -f 'normal_surface_recognition.cc' || echo '$(srcdir)/'`normal_surface_recognition.cc

libsnap_a-normal_surface_recognition.obj: normal_surface_recognition.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-normal_surface_recognition.obj -MD -MP -MF $(DEPDIR)/libsnap_a-normal_surface_recognition.Tpo -c -o libsnap_a-normal_surface_recognition.obj `if test -f 'normal_surface_recognition.cc'; then $(CYGPATH_W) 'normal_surface_recognition.cc'; else $(CYGPATH_W) '$(srcdir)/normal_surface_recognition.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-normal_surface_recognition.Tpo $(DEPDIR)/libsnap_a-normal_surface_recognition.Po
#	source='normal_surface_recognition.cc' object='libsnap_a-normal_surface_recognition.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-normal_surface_recognition.obj `if test -f 'normal_surface_recognition.cc'; then $(CYGPATH_W) 'normal_surface_recognition.cc'; else $(CYGPATH_W) '$(srcdir)/normal_surface_recognition.cc'; fi`

libsnap_a-normal_surface_splitting.o: normal_surface_splitting.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-normal_surface_splitting.o -MD -MP -MF $(DEPDIR)/libsnap_a-normal_surface_splitting.Tpo -c -o libsnap_a-normal_surface_splitting.o `test -f 'normal_surface_splitting.cc' || echo '$(srcdir)/'`normal_surface_splitting.cc
	mv -f $(DEPDIR)/libsnap_a-normal_surface_splitting.Tpo $(DEPDIR)/libsnap_a-normal_surface_splitting.Po
#	source='normal_surface_splitting.cc' object='libsnap_a-normal_surface_splitting.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-normal_surface_splitting.o `test -f 'normal_surface_splitting.cc' || echo '$(srcdir)/'`normal_surface_splitting.cc

libsnap_a-normal_surface_splitting.obj: normal_surface_splitting.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-normal_surface_splitting.obj -MD -MP -MF $(DEPDIR)/libsnap_a-normal_surface_splitting.Tpo -c -o libsnap_a-normal_surface_splitting.obj `if test -f 'normal_surface_splitting.cc'; then $(CYGPATH_W) 'normal_surface_splitting.cc'; else $(CYGPATH_W) '$(srcdir)/normal_surface_splitting.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-normal_surface_splitting.Tpo $(DEPDIR)/libsnap_a-normal_surface_splitting.Po
#	source='normal_surface_splitting.cc' object='libsnap_a-normal_surface_splitting.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-normal_surface_splitting.obj `if test -f 'normal_surface_splitting.cc'; then $(CYGPATH_W) 'normal_surface_splitting.cc'; else $(CYGPATH_W) '$(srcdir)/normal_surface_splitting.cc'; fi`

libsnap_a-o31_matrices.o: o31_matrices.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-o31_matrices.o -MD -MP -MF $(DEPDIR)/libsnap_a-o31_matrices.Tpo -c -o libsnap_a-o31_matrices.o `test -f 'o31_matrices.cc' || echo '$(srcdir)/'`o31_matrices.cc
	mv -f $(DEPDIR)/libsnap_a-o31_matrices.Tpo $(DEPDIR)/libsnap_a-o31_matrices.Po
#	source='o31_matrices.cc' object='libsnap_a-o31_matrices.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-o31_matrices.o `test -f 'o31_matrices.cc' || echo '$(srcdir)/'`o31_matrices.cc

libsnap_a-o31_matrices.obj: o31_matrices.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-o31_matrices.obj -MD -MP -MF $(DEPDIR)/libsnap_a-o31_matrices.Tpo -c -o libsnap_a-o31_matrices.obj `if test -f 'o31_matrices.cc'; then $(CYGPATH_W) 'o31_matrices.cc'; else $(CYGPATH_W) '$(srcdir)/o31_matrices.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-o31_matrices.Tpo $(DEPDIR)/libsnap_a-o31_matrices.Po
#	source='o31_matrices.cc' object='libsnap_a-o31_matrices.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-o31_matrices.obj `if test -f 'o31_matrices.cc'; then $(CYGPATH_W) 'o31_matrices.cc'; else $(CYGPATH_W) '$(srcdir)/o31_matrices.cc'; fi`

libsnap_a-orient.o: orient.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-orient.o -MD -MP -MF $(DEPDIR)/libsnap_a-orient.Tpo -c -o libsnap_a-orient.o `test -f 'orient.cc' || echo '$(srcdir)/'`orient.cc
	mv -f $(DEPDIR)/libsnap_a-orient.Tpo $(DEPDIR)/libsnap_a-orient.Po
#	source='orient.cc' object='libsnap_a-orient.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-orient.o `test -f 'orient.cc' || echo '$(srcdir)/'`orient.cc

libsnap_a-orient.obj: orient.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-orient.obj -MD -MP -MF $(DEPDIR)/libsnap_a-orient.Tpo -c -o libsnap_a-orient.obj `if test -f 'orient.cc'; then $(CYGPATH_W) 'orient.cc'; else $(CYGPATH_W) '$(srcdir)/orient.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-orient.Tpo $(DEPDIR)/libsnap_a-orient.Po
#	source='orient.cc' object='libsnap_a-orient.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-orient.obj `if test -f 'orient.cc'; then $(CYGPATH_W) 'orient.cc'; else $(CYGPATH_W) '$(srcdir)/orient.cc'; fi`

libsnap_a-peripheral_curves.o: peripheral_curves.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-peripheral_curves.o -MD -MP -MF $(DEPDIR)/libsnap_a-peripheral_curves.Tpo -c -o libsnap_a-peripheral_curves.o `test -f 'peripheral_curves.cc' || echo '$(srcdir)/'`peripheral_curves.cc
	mv -f $(DEPDIR)/libsnap_a-peripheral_curves.Tpo $(DEPDIR)/libsnap_a-peripheral_curves.Po
#	source='peripheral_curves.cc' object='libsnap_a-peripheral_curves.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-peripheral_curves.o `test -f 'peripheral_curves.cc' || echo '$(srcdir)/'`peripheral_curves.cc

libsnap_a-peripheral_curves.obj: peripheral_curves.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-peripheral_curves.obj -MD -MP -MF $(DEPDIR)/libsnap_a-peripheral_curves.Tpo -c -o libsnap_a-peripheral_curves.obj `if test -f 'peripheral_curves.cc'; then $(CYGPATH_W) 'peripheral_curves.cc'; else $(CYGPATH_W) '$(srcdir)/peripheral_curves.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-peripheral_curves.Tpo $(DEPDIR)/libsnap_a-peripheral_curves.Po
#	source='peripheral_curves.cc' object='libsnap_a-peripheral_curves.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-peripheral_curves.obj `if test -f 'peripheral_curves.cc'; then $(CYGPATH_W) 'peripheral_curves.cc'; else $(CYGPATH_W) '$(srcdir)/peripheral_curves.cc'; fi`

libsnap_a-polyhedral_group.o: polyhedral_group.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-polyhedral_group.o -MD -MP -MF $(DEPDIR)/libsnap_a-polyhedral_group.Tpo -c -o libsnap_a-polyhedral_group.o `test -f 'polyhedral_group.cc' || echo '$(srcdir)/'`polyhedral_group.cc
	mv -f $(DEPDIR)/libsnap_a-polyhedral_group.Tpo $(DEPDIR)/libsnap_a-polyhedral_group.Po
#	source='polyhedral_group.cc' object='libsnap_a-polyhedral_group.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-polyhedral_group.o `test -f 'polyhedral_group.cc' || echo '$(srcdir)/'`polyhedral_group.cc

libsnap_a-polyhedral_group.obj: polyhedral_group.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-polyhedral_group.obj -MD -MP -MF $(DEPDIR)/libsnap_a-polyhedral_group.Tpo -c -o libsnap_a-polyhedral_group.obj `if test -f 'polyhedral_group.cc'; then $(CYGPATH_W) 'polyhedral_group.cc'; else $(CYGPATH_W) '$(srcdir)/polyhedral_group.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-polyhedral_group.Tpo $(DEPDIR)/libsnap_a-polyhedral_group.Po
#	source='polyhedral_group.cc' object='libsnap_a-polyhedral_group.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-polyhedral_group.obj `if test -f 'polyhedral_group.cc'; then $(CYGPATH_W) 'polyhedral_group.cc'; else $(CYGPATH_W) '$(srcdir)/polyhedral_group.cc'; fi`

libsnap_a-positioned_tet.o: positioned_tet.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-positioned_tet.o -MD -MP -MF $(DEPDIR)/libsnap_a-positioned_tet.Tpo -c -o libsnap_a-positioned_tet.o `test -f 'positioned_tet.cc' || echo '$(srcdir)/'`positioned_tet.cc
	mv -f $(DEPDIR)/libsnap_a-positioned_tet.Tpo $(DEPDIR)/libsnap_a-positioned_tet.Po
#	source='positioned_tet.cc' object='libsnap_a-positioned_tet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-positioned_tet.o `test -f 'positioned_tet.cc' || echo '$(srcdir)/'`positioned_tet.cc

libsnap_a-positioned_tet.obj: positioned_tet.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-positioned_tet.obj -MD -MP -MF $(DEPDIR)/libsnap_a-positioned_tet.Tpo -c -o libsnap_a-positioned_tet.obj `if test -f 'positioned_tet.cc'; then $(CYGPATH_W) 'positioned_tet.cc'; else $(CYGPATH_W) '$(srcdir)/positioned_tet.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-positioned_tet.Tpo $(DEPDIR)/libsnap_a-positioned_tet.Po
#	source='positioned_tet.cc' object='libsnap_a-positioned_tet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-positioned_tet.obj `if test -f 'positioned_tet.cc'; then $(CYGPATH_W) 'positioned_tet.cc'; else $(CYGPATH_W) '$(srcdir)/positioned_tet.cc'; fi`

libsnap_a-precision.o: precision.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-precision.o -MD -MP -MF $(DEPDIR)/libsnap_a-precision.Tpo -c -o libsnap_a-precision.o `test -f 'precision.cc' || echo '$(srcdir)/'`precision.cc
	mv -f $(DEPDIR)/libsnap_a-precision.Tpo $(DEPDIR)/libsnap_a-precision.Po
#	source='precision.cc' object='libsnap_a-precision.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-precision.o `test -f 'precision.cc' || echo '$(srcdir)/'`precision.cc

libsnap_a-precision.obj: precision.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-precision.obj -MD -MP -MF $(DEPDIR)/libsnap_a-precision.Tpo -c -o libsnap_a-precision.obj `if test -f 'precision.cc'; then $(CYGPATH_W) 'precision.cc'; else $(CYGPATH_W) '$(srcdir)/precision.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-precision.Tpo $(DEPDIR)/libsnap_a-precision.Po
#	source='precision.cc' object='libsnap_a-precision.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-precision.obj `if test -f 'precision.cc'; then $(CYGPATH_W) 'precision.cc'; else $(CYGPATH_W) '$(srcdir)/precision.cc'; fi`

libsnap_a-punctured_torus_bundles.o: punctured_torus_bundles.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-punctured_torus_bundles.o -MD -MP -MF $(DEPDIR)/libsnap_a-punctured_torus_bundles.Tpo -c -o libsnap_a-punctured_torus_bundles.o `test -f 'punctured_torus_bundles.cc' || echo '$(srcdir)/'`punctured_torus_bundles.cc
	mv -f $(DEPDIR)/libsnap_a-punctured_torus_bundles.Tpo $(DEPDIR)/libsnap_a-punctured_torus_bundles.Po
#	source='punctured_torus_bundles.cc' object='libsnap_a-punctured_torus_bundles.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-punctured_torus_bundles.o `test -f 'punctured_torus_bundles.cc' || echo '$(srcdir)/'`punctured_torus_bundles.cc

libsnap_a-punctured_torus_bundles.obj: punctured_torus_bundles.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-punctured_torus_bundles.obj -MD -MP -MF $(DEPDIR)/libsnap_a-punctured_torus_bundles.Tpo -c -o libsnap_a-punctured_torus_bundles.obj `if test -f 'punctured_torus_bundles.cc'; then $(CYGPATH_W) 'punctured_torus_bundles.cc'; else $(CYGPATH_W) '$(srcdir)/punctured_torus_bundles.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-punctured_torus_bundles.Tpo $(DEPDIR)/libsnap_a-punctured_torus_bundles.Po
#	source='punctured_torus_bundles.cc' object='libsnap_a-punctured_torus_bundles.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-punctured_torus_bundles.obj `if test -f 'punctured_torus_bundles.cc'; then $(CYGPATH_W) 'punctured_torus_bundles.cc'; else $(CYGPATH_W) '$(srcdir)/punctured_torus_bundles.cc'; fi`

libsnap_a-quotients.o: quotients.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-quotients.o -MD -MP -MF $(DEPDIR)/libsnap_a-quotients.Tpo -c -o libsnap_a-quotients.o `test -f 'quotients.cc' || echo '$(srcdir)/'`quotients.cc
	mv -f $(DEPDIR)/libsnap_a-quotients.Tpo $(DEPDIR)/libsnap_a-quotients.Po
#	source='quotients.cc' object='libsnap_a-quotients.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-quotients.o `test -f 'quotients.cc' || echo '$(srcdir)/'`quotients.cc

libsnap_a-quotients.obj: quotients.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-quotients.obj -MD -MP -MF $(DEPDIR)/libsnap_a-quotients.Tpo -c -o libsnap_a-quotients.obj `if test -f 'quotients.cc'; then $(CYGPATH_W) 'quotients.cc'; else $(CYGPATH_W) '$(srcdir)/quotients.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-quotients.Tpo $(DEPDIR)/libsnap_a-quotients.Po
#	source='quotients.cc' object='libsnap_a-quotients.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-quotients.obj `if test -f 'quotients.cc'; then $(CYGPATH_W) 'quotients.cc'; else $(CYGPATH_W) '$(srcdir)/quotients.cc'; fi`

libsnap_a-rehydrate_census.o: rehydrate_census.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-rehydrate_census.o -MD -MP -MF $(DEPDIR)/libsnap_a-rehydrate_census.Tpo -c -o libsnap_a-rehydrate_census.o `test -f 'rehydrate_census.cc' || echo '$(srcdir)/'`rehydrate_census.cc
	mv -f $(DEPDIR)/libsnap_a-rehydrate_census.Tpo $(DEPDIR)/libsnap_a-rehydrate_census.Po
#	source='rehydrate_census.cc' object='libsnap_a-rehydrate_census.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-rehydrate_census.o `test -f 'rehydrate_census.cc' || echo '$(srcdir)/'`rehydrate_census.cc

libsnap_a-rehydrate_census.obj: rehydrate_census.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-rehydrate_census.obj -MD -MP -MF $(DEPDIR)/libsnap_a-rehydrate_census.Tpo -c -o libsnap_a-rehydrate_census.obj `if test -f 'rehydrate_census.cc'; then $(CYGPATH_W) 'rehydrate_census.cc'; else $(CYGPATH_W) '$(srcdir)/rehydrate_census.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-rehydrate_census.Tpo $(DEPDIR)/libsnap_a-rehydrate_census.Po
#	source='rehydrate_census.cc' object='libsnap_a-rehydrate_census.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-rehydrate_census.obj `if test -f 'rehydrate_census.cc'; then $(CYGPATH_W) 'rehydrate_census.cc'; else $(CYGPATH_W) '$(srcdir)/rehydrate_census.cc'; fi`

libsnap_a-representations.o: representations.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-representations.o -MD -MP -MF $(DEPDIR)/libsnap_a-representations.Tpo -c -o libsnap_a-representations.o `test -f 'representations.cc' || echo '$(srcdir)/'`representations.cc
	mv -f $(DEPDIR)/libsnap_a-representations.Tpo $(DEPDIR)/libsnap_a-representations.Po
#	source='representations.cc' object='libsnap_a-representations.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-representations.o `test -f 'representations.cc' || echo '$(srcdir)/'`representations.cc

libsnap_a-representations.obj: representations.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-representations.obj -MD -MP -MF $(DEPDIR)/libsnap_a-representations.Tpo -c -o libsnap_a-representations.obj `if test -f 'representations.cc'; then $(CYGPATH_W) 'representations.cc'; else $(CYGPATH_W) '$(srcdir)/representations.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-representations.Tpo $(DEPDIR)/libsnap_a-representations.Po
#	source='representations.cc' object='libsnap_a-representations.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-representations.obj `if test -f 'representations.cc'; then $(CYGPATH_W) 'representations.cc'; else $(CYGPATH_W) '$(srcdir)/representations.cc'; fi`

libsnap_a-shingling.o: shingling.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-shingling.o -MD -MP -MF $(DEPDIR)/libsnap_a-shingling.Tpo -c -o libsnap_a-shingling.o `test -f 'shingling.cc' || echo '$(srcdir)/'`shingling.cc
	mv -f $(DEPDIR)/libsnap_a-shingling.Tpo $(DEPDIR)/libsnap_a-shingling.Po
#	source='shingling.cc' object='libsnap_a-shingling.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-shingling.o `test -f 'shingling.cc' || echo '$(srcdir)/'`shingling.cc

libsnap_a-shingling.obj: shingling.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-shingling.obj -MD -MP -MF $(DEPDIR)/libsnap_a-shingling.Tpo -c -o libsnap_a-shingling.obj `if test -f 'shingling.cc'; then $(CYGPATH_W) 'shingling.cc'; else $(CYGPATH_W) '$(srcdir)/shingling.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-shingling.Tpo $(DEPDIR)/libsnap_a-shingling.Po
#	source='shingling.cc' object='libsnap_a-shingling.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-shingling.obj `if test -f 'shingling.cc'; then $(CYGPATH_W) 'shingling.cc'; else $(CYGPATH_W) '$(srcdir)/shingling.cc'; fi`

libsnap_a-shortest_cusp_basis.o: shortest_cusp_basis.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-shortest_cusp_basis.o -MD -MP -MF $(DEPDIR)/libsnap_a-shortest_cusp_basis.Tpo -c -o libsnap_a-shortest_cusp_basis.o `test -f 'shortest_cusp_basis.cc' || echo '$(srcdir)/'`shortest_cusp_basis.cc
	mv -f $(DEPDIR)/libsnap_a-shortest_cusp_basis.Tpo $(DEPDIR)/libsnap_a-shortest_cusp_basis.Po
#	source='shortest_cusp_basis.cc' object='libsnap_a-shortest_cusp_basis.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-shortest_cusp_basis.o `test -f 'shortest_cusp_basis.cc' || echo '$(srcdir)/'`shortest_cusp_basis.cc

libsnap_a-shortest_cusp_basis.obj: shortest_cusp_basis.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-shortest_cusp_basis.obj -MD -MP -MF $(DEPDIR)/libsnap_a-shortest_cusp_basis.Tpo -c -o libsnap_a-shortest_cusp_basis.obj `if test -f 'shortest_cusp_basis.cc'; then $(CYGPATH_W) 'shortest_cusp_basis.cc'; else $(CYGPATH_W) '$(srcdir)/shortest_cusp_basis.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-shortest_cusp_basis.Tpo $(DEPDIR)/libsnap_a-shortest_cusp_basis.Po
#	source='shortest_cusp_basis.cc' object='libsnap_a-shortest_cusp_basis.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-shortest_cusp_basis.obj `if test -f 'shortest_cusp_basis.cc'; then $(CYGPATH_W) 'shortest_cusp_basis.cc'; else $(CYGPATH_W) '$(srcdir)/shortest_cusp_basis.cc'; fi`

libsnap_a-simplify_triangulation.o: simplify_triangulation.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-simplify_triangulation.o -MD -MP -MF $(DEPDIR)/libsnap_a-simplify_triangulation.Tpo -c -o libsnap_a-simplify_triangulation.o `test -f 'simplify_triangulation.cc' || echo '$(srcdir)/'`simplify_triangulation.cc
	mv -f $(DEPDIR)/libsnap_a-simplify_triangulation.Tpo $(DEPDIR)/libsnap_a-simplify_triangulation.Po
#	source='simplify_triangulation.cc' object='libsnap_a-simplify_triangulation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-simplify_triangulation.o `test -f 'simplify_triangulation.cc' || echo '$(srcdir)/'`simplify_triangulation.cc

libsnap_a-simplify_triangulation.obj: simplify_triangulation.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-simplify_triangulation.obj -MD -MP -MF $(DEPDIR)/libsnap_a-simplify_triangulation.Tpo -c -o libsnap_a-simplify_triangulation.obj `if test -f 'simplify_triangulation.cc'; then $(CYGPATH_W) 'simplify_triangulation.cc'; else $(CYGPATH_W) '$(srcdir)/simplify_triangulation.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-simplify_triangulation.Tpo $(DEPDIR)/libsnap_a-simplify_triangulation.Po
#	source='simplify_triangulation.cc' object='libsnap_a-simplify_triangulation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-simplify_triangulation.obj `if test -f 'simplify_triangulation.cc'; then $(CYGPATH_W) 'simplify_triangulation.cc'; else $(CYGPATH_W) '$(srcdir)/simplify_triangulation.cc'; fi`

libsnap_a-sl2c_matrices.o: sl2c_matrices.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-sl2c_matrices.o -MD -MP -MF $(DEPDIR)/libsnap_a-sl2c_matrices.Tpo -c -o libsnap_a-sl2c_matrices.o `test -f 'sl2c_matrices.cc' || echo '$(srcdir)/'`sl2c_matrices.cc
	mv -f $(DEPDIR)/libsnap_a-sl2c_matrices.Tpo $(DEPDIR)/libsnap_a-sl2c_matrices.Po
#	source='sl2c_matrices.cc' object='libsnap_a-sl2c_matrices.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-sl2c_matrices.o `test -f 'sl2c_matrices.cc' || echo '$(srcdir)/'`sl2c_matrices.cc

libsnap_a-sl2c_matrices.obj: sl2c_matrices.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-sl2c_matrices.obj -MD -MP -MF $(DEPDIR)/libsnap_a-sl2c_matrices.Tpo -c -o libsnap_a-sl2c_matrices.obj `if test -f 'sl2c_matrices.cc'; then $(CYGPATH_W) 'sl2c_matrices.cc'; else $(CYGPATH_W) '$(srcdir)/sl2c_matrices.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-sl2c_matrices.Tpo $(DEPDIR)/libsnap_a-sl2c_matrices.Po
#	source='sl2c_matrices.cc' object='libsnap_a-sl2c_matrices.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-sl2c_matrices.obj `if test -f 'sl2c_matrices.cc'; then $(CYGPATH_W) 'sl2c_matrices.cc'; else $(CYGPATH_W) '$(srcdir)/sl2c_matrices.cc'; fi`

libsnap_a-solve_equations.o: solve_equations.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-solve_equations.o -MD -MP -MF $(DEPDIR)/libsnap_a-solve_equations.Tpo -c -o libsnap_a-solve_equations.o `test -f 'solve_equations.cc' || echo '$(srcdir)/'`solve_equations.cc
	mv -f $(DEPDIR)/libsnap_a-solve_equations.Tpo $(DEPDIR)/libsnap_a-solve_equations.Po
#	source='solve_equations.cc' object='libsnap_a-solve_equations.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-solve_equations.o `test -f 'solve_equations.cc' || echo '$(srcdir)/'`solve_equations.cc

libsnap_a-solve_equations.obj: solve_equations.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-solve_equations.obj -MD -MP -MF $(DEPDIR)/libsnap_a-solve_equations.Tpo -c -o libsnap_a-solve_equations.obj `if test -f 'solve_equations.cc'; then $(CYGPATH_W) 'solve_equations.cc'; else $(CYGPATH_W) '$(srcdir)/solve_equations.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-solve_equations.Tpo $(DEPDIR)/libsnap_a-solve_equations.Po
#	source='solve_equations.cc' object='libsnap_a-solve_equations.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-solve_equations.obj `if test -f 'solve_equations.cc'; then $(CYGPATH_W) 'solve_equations.cc'; else $(CYGPATH_W) '$(srcdir)/solve_equations.cc'; fi`

libsnap_a-subdivide.o: subdivide.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-subdivide.o -MD -MP -MF $(DEPDIR)/libsnap_a-subdivide.Tpo -c -o libsnap_a-subdivide.o `test -f 'subdivide.cc' || echo '$(srcdir)/'`subdivide.cc
	mv -f $(DEPDIR)/libsnap_a-subdivide.Tpo $(DEPDIR)/libsnap_a-subdivide.Po
#	source='subdivide.cc' object='libsnap_a-subdivide.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-subdivide.o `test -f 'subdivide.cc' || echo '$(srcdir)/'`subdivide.cc

libsnap_a-subdivide.obj: subdivide.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-subdivide.obj -MD -MP -MF $(DEPDIR)/libsnap_a-subdivide.Tpo -c -o libsnap_a-subdivide.obj `if test -f 'subdivide.cc'; then $(CYGPATH_W) 'subdivide.cc'; else $(CYGPATH_W) '$(srcdir)/subdivide.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-subdivide.Tpo $(DEPDIR)/libsnap_a-subdivide.Po
#	source='subdivide.cc' object='libsnap_a-subdivide.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-subdivide.obj `if test -f 'subdivide.cc'; then $(CYGPATH_W) 'subdivide.cc'; else $(CYGPATH_W) '$(srcdir)/subdivide.cc'; fi`

libsnap_a-symmetric_group.o: symmetric_group.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-symmetric_group.o -MD -MP -MF $(DEPDIR)/libsnap_a-symmetric_group.Tpo -c -o libsnap_a-symmetric_group.o `test -f 'symmetric_group.cc' || echo '$(srcdir)/'`symmetric_group.cc
	mv -f $(DEPDIR)/libsnap_a-symmetric_group.Tpo $(DEPDIR)/libsnap_a-symmetric_group.Po
#	source='symmetric_group.cc' object='libsnap_a-symmetric_group.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-symmetric_group.o `test -f 'symmetric_group.cc' || echo '$(srcdir)/'`symmetric_group.cc

libsnap_a-symmetric_group.obj: symmetric_group.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-symmetric_group.obj -MD -MP -MF $(DEPDIR)/libsnap_a-symmetric_group.Tpo -c -o libsnap_a-symmetric_group.obj `if test -f 'symmetric_group.cc'; then $(CYGPATH_W) 'symmetric_group.cc'; else $(CYGPATH_W) '$(srcdir)/symmetric_group.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-symmetric_group.Tpo $(DEPDIR)/libsnap_a-symmetric_group.Po
#	source='symmetric_group.cc' object='libsnap_a-symmetric_group.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-symmetric_group.obj `if test -f 'symmetric_group.cc'; then $(CYGPATH_W) 'symmetric_group.cc'; else $(CYGPATH_W) '$(srcdir)/symmetric_group.cc'; fi`

libsnap_a-symmetry_group.o: symmetry_group.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-symmetry_group.o -MD -MP -MF $(DEPDIR)/libsnap_a-symmetry_group.Tpo -c -o libsnap_a-symmetry_group.o `test -f 'symmetry_group.cc' || echo '$(srcdir)/'`symmetry_group.cc
	mv -f $(DEPDIR)/libsnap_a-symmetry_group.Tpo $(DEPDIR)/libsnap_a-symmetry_group.Po
#	source='symmetry_group.cc' object='libsnap_a-symmetry_group.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-symmetry_group.o `test -f 'symmetry_group.cc' || echo '$(srcdir)/'`symmetry_group.cc

libsnap_a-symmetry_group.obj: symmetry_group.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-symmetry_group.obj -MD -MP -MF $(DEPDIR)/libsnap_a-symmetry_group.Tpo -c -o libsnap_a-symmetry_group.obj `if test -f 'symmetry_group.cc'; then $(CYGPATH_W) 'symmetry_group.cc'; else $(CYGPATH_W) '$(srcdir)/symmetry_group.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-symmetry_group.Tpo $(DEPDIR)/libsnap_a-symmetry_group.Po
#	source='symmetry_group.cc' object='libsnap_a-symmetry_group.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-symmetry_group.obj `if test -f 'symmetry_group.cc'; then $(CYGPATH_W) 'symmetry_group.cc'; else $(CYGPATH_W) '$(srcdir)/symmetry_group.cc'; fi`

libsnap_a-symmetry_group_closed.o: symmetry_group_closed.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-symmetry_group_closed.o -MD -MP -MF $(DEPDIR)/libsnap_a-symmetry_group_closed.Tpo -c -o libsnap_a-symmetry_group_closed.o `test -f 'symmetry_group_closed.cc' || echo '$(srcdir)/'`symmetry_group_closed.cc
	mv -f $(DEPDIR)/libsnap_a-symmetry_group_closed.Tpo $(DEPDIR)/libsnap_a-symmetry_group_closed.Po
#	source='symmetry_group_closed.cc' object='libsnap_a-symmetry_group_closed.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-symmetry_group_closed.o `test -f 'symmetry_group_closed.cc' || echo '$(srcdir)/'`symmetry_group_closed.cc

libsnap_a-symmetry_group_closed.obj: symmetry_group_closed.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-symmetry_group_closed.obj -MD -MP -MF $(DEPDIR)/libsnap_a-symmetry_group_closed.Tpo -c -o libsnap_a-symmetry_group_closed.obj `if test -f 'symmetry_group_closed.cc'; then $(CYGPATH_W) 'symmetry_group_closed.cc'; else $(CYGPATH_W) '$(srcdir)/symmetry_group_closed.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-symmetry_group_closed.Tpo $(DEPDIR)/libsnap_a-symmetry_group_closed.Po
#	source='symmetry_group_closed.cc' object='libsnap_a-symmetry_group_closed.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-symmetry_group_closed.obj `if test -f 'symmetry_group_closed.cc'; then $(CYGPATH_W) 'symmetry_group_closed.cc'; else $(CYGPATH_W) '$(srcdir)/symmetry_group_closed.cc'; fi`

libsnap_a-symmetry_group_cusped.o: symmetry_group_cusped.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-symmetry_group_cusped.o -MD -MP -MF $(DEPDIR)/libsnap_a-symmetry_group_cusped.Tpo -c -o libsnap_a-symmetry_group_cusped.o `test -f 'symmetry_group_cusped.cc' || echo '$(srcdir)/'`symmetry_group_cusped.cc
	mv -f $(DEPDIR)/libsnap_a-symmetry_group_cusped.Tpo $(DEPDIR)/libsnap_a-symmetry_group_cusped.Po
#	source='symmetry_group_cusped.cc' object='libsnap_a-symmetry_group_cusped.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-symmetry_group_cusped.o `test -f 'symmetry_group_cusped.cc' || echo '$(srcdir)/'`symmetry_group_cusped.cc

libsnap_a-symmetry_group_cusped.obj: symmetry_group_cusped.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-symmetry_group_cusped.obj -MD -MP -MF $(DEPDIR)/libsnap_a-symmetry_group_cusped.Tpo -c -o libsnap_a-symmetry_group_cusped.obj `if test -f 'symmetry_group_cusped.cc'; then $(CYGPATH_W) 'symmetry_group_cusped.cc'; else $(CYGPATH_W) '$(srcdir)/symmetry_group_cusped.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-symmetry_group_cusped.Tpo $(DEPDIR)/libsnap_a-symmetry_group_cusped.Po
#	source='symmetry_group_cusped.cc' object='libsnap_a-symmetry_group_cusped.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-symmetry_group_cusped.obj `if test -f 'symmetry_group_cusped.cc'; then $(CYGPATH_W) 'symmetry_group_cusped.cc'; else $(CYGPATH_W) '$(srcdir)/symmetry_group_cusped.cc'; fi`

libsnap_a-symmetry_group_info.o: symmetry_group_info.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-symmetry_group_info.o -MD -MP -MF $(DEPDIR)/libsnap_a-symmetry_group_info.Tpo -c -o libsnap_a-symmetry_group_info.o `test -f 'symmetry_group_info.cc' || echo '$(srcdir)/'`symmetry_group_info.cc
	mv -f $(DEPDIR)/libsnap_a-symmetry_group_info.Tpo $(DEPDIR)/libsnap_a-symmetry_group_info.Po
#	source='symmetry_group_info.cc' object='libsnap_a-symmetry_group_info.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-symmetry_group_info.o `test -f 'symmetry_group_info.cc' || echo '$(srcdir)/'`symmetry_group_info.cc

libsnap_a-symmetry_group_info.obj: symmetry_group_info.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-symmetry_group_info.obj -MD -MP -MF $(DEPDIR)/libsnap_a-symmetry_group_info.Tpo -c -o libsnap_a-symmetry_group_info.obj `if test -f 'symmetry_group_info.cc'; then $(CYGPATH_W) 'symmetry_group_info.cc'; else $(CYGPATH_W) '$(srcdir)/symmetry_group_info.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-symmetry_group_info.Tpo $(DEPDIR)/libsnap_a-symmetry_group_info.Po
#	source='symmetry_group_info.cc' object='libsnap_a-symmetry_group_info.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-symmetry_group_info.obj `if test -f 'symmetry_group_info.cc'; then $(CYGPATH_W) 'symmetry_group_info.cc'; else $(CYGPATH_W) '$(srcdir)/symmetry_group_info.cc'; fi`

libsnap_a-tables.o: tables.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-tables.o -MD -MP -MF $(DEPDIR)/libsnap_a-tables.Tpo -c -o libsnap_a-tables.o `test -f 'tables.cc' || echo '$(srcdir)/'`tables.cc
	mv -f $(DEPDIR)/libsnap_a-tables.Tpo $(DEPDIR)/libsnap_a-tables.Po
#	source='tables.cc' object='libsnap_a-tables.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-tables.o `test -f 'tables.cc' || echo '$(srcdir)/'`tables.cc

libsnap_a-tables.obj: tables.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-tables.obj -MD -MP -MF $(DEPDIR)/libsnap_a-tables.Tpo -c -o libsnap_a-tables.obj `if test -f 'tables.cc'; then $(CYGPATH_W) 'tables.cc'; else $(CYGPATH_W) '$(srcdir)/tables.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-tables.Tpo $(DEPDIR)/libsnap_a-tables.Po
#	source='tables.cc' object='libsnap_a-tables.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-tables.obj `if test -f 'tables.cc'; then $(CYGPATH_W) 'tables.cc'; else $(CYGPATH_W) '$(srcdir)/tables.cc'; fi`

libsnap_a-terse_triangulation.o: terse_triangulation.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-terse_triangulation.o -MD -MP -MF $(DEPDIR)/libsnap_a-terse_triangulation.Tpo -c -o libsnap_a-terse_triangulation.o `test -f 'terse_triangulation.cc' || echo '$(srcdir)/'`terse_triangulation.cc
	mv -f $(DEPDIR)/libsnap_a-terse_triangulation.Tpo $(DEPDIR)/libsnap_a-terse_triangulation.Po
#	source='terse_triangulation.cc' object='libsnap_a-terse_triangulation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-terse_triangulation.o `test -f 'terse_triangulation.cc' || echo '$(srcdir)/'`terse_triangulation.cc

libsnap_a-terse_triangulation.obj: terse_triangulation.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-terse_triangulation.obj -MD -MP -MF $(DEPDIR)/libsnap_a-terse_triangulation.Tpo -c -o libsnap_a-terse_triangulation.obj `if test -f 'terse_triangulation.cc'; then $(CYGPATH_W) 'terse_triangulation.cc'; else $(CYGPATH_W) '$(srcdir)/terse_triangulation.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-terse_triangulation.Tpo $(DEPDIR)/libsnap_a-terse_triangulation.Po
#	source='terse_triangulation.cc' object='libsnap_a-terse_triangulation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-terse_triangulation.obj `if test -f 'terse_triangulation.cc'; then $(CYGPATH_W) 'terse_triangulation.cc'; else $(CYGPATH_W) '$(srcdir)/terse_triangulation.cc'; fi`

libsnap_a-tersest_triangulation.o: tersest_triangulation.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-tersest_triangulation.o -MD -MP -MF $(DEPDIR)/libsnap_a-tersest_triangulation.Tpo -c -o libsnap_a-tersest_triangulation.o `test -f 'tersest_triangulation.cc' || echo '$(srcdir)/'`tersest_triangulation.cc
	mv -f $(DEPDIR)/libsnap_a-tersest_triangulation.Tpo $(DEPDIR)/libsnap_a-tersest_triangulation.Po
#	source='tersest_triangulation.cc' object='libsnap_a-tersest_triangulation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-tersest_triangulation.o `test -f 'tersest_triangulation.cc' || echo '$(srcdir)/'`tersest_triangulation.cc

libsnap_a-tersest_triangulation.obj: tersest_triangulation.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-tersest_triangulation.obj -MD -MP -MF $(DEPDIR)/libsnap_a-tersest_triangulation.Tpo -c -o libsnap_a-tersest_triangulation.obj `if test -f 'tersest_triangulation.cc'; then $(CYGPATH_W) 'tersest_triangulation.cc'; else $(CYGPATH_W) '$(srcdir)/tersest_triangulation.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-tersest_triangulation.Tpo $(DEPDIR)/libsnap_a-tersest_triangulation.Po
#	source='tersest_triangulation.cc' object='libsnap_a-tersest_triangulation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-tersest_triangulation.obj `if test -f 'tersest_triangulation.cc'; then $(CYGPATH_W) 'tersest_triangulation.cc'; else $(CYGPATH_W) '$(srcdir)/tersest_triangulation.cc'; fi`

libsnap_a-tet_shapes.o: tet_shapes.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-tet_shapes.o -MD -MP -MF $(DEPDIR)/libsnap_a-tet_shapes.Tpo -c -o libsnap_a-tet_shapes.o `test -f 'tet_shapes.cc' || echo '$(srcdir)/'`tet_shapes.cc
	mv -f $(DEPDIR)/libsnap_a-tet_shapes.Tpo $(DEPDIR)/libsnap_a-tet_shapes.Po
#	source='tet_shapes.cc' object='libsnap_a-tet_shapes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-tet_shapes.o `test -f 'tet_shapes.cc' || echo '$(srcdir)/'`tet_shapes.cc

libsnap_a-tet_shapes.obj: tet_shapes.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-tet_shapes.obj -MD -MP -MF $(DEPDIR)/libsnap_a-tet_shapes.Tpo -c -o libsnap_a-tet_shapes.obj `if test -f 'tet_shapes.cc'; then $(CYGPATH_W) 'tet_shapes.cc'; else $(CYGPATH_W) '$(srcdir)/tet_shapes.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-tet_shapes.Tpo $(DEPDIR)/libsnap_a-tet_shapes.Po
#	source='tet_shapes.cc' object='libsnap_a-tet_shapes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-tet_shapes.obj `if test -f 'tet_shapes.cc'; then $(CYGPATH_W) 'tet_shapes.cc'; else $(CYGPATH_W) '$(srcdir)/tet_shapes.cc'; fi`

libsnap_a-tidy_peripheral_curves.o: tidy_peripheral_curves.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-tidy_peripheral_curves.o -MD -MP -MF $(DEPDIR)/libsnap_a-tidy_peripheral_curves.Tpo -c -o libsnap_a-tidy_peripheral_curves.o `test -f 'tidy_peripheral_curves.cc' || echo '$(srcdir)/'`tidy_peripheral_curves.cc
	mv -f $(DEPDIR)/libsnap_a-tidy_peripheral_curves.Tpo $(DEPDIR)/libsnap_a-tidy_peripheral_curves.Po
#	source='tidy_peripheral_curves.cc' object='libsnap_a-tidy_peripheral_curves.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-tidy_peripheral_curves.o `test -f 'tidy_peripheral_curves.cc' || echo '$(srcdir)/'`tidy_peripheral_curves.cc

libsnap_a-tidy_peripheral_curves.obj: tidy_peripheral_curves.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-tidy_peripheral_curves.obj -MD -MP -MF $(DEPDIR)/libsnap_a-tidy_peripheral_curves.Tpo -c -o libsnap_a-tidy_peripheral_curves.obj `if test -f 'tidy_peripheral_curves.cc'; then $(CYGPATH_W) 'tidy_peripheral_curves.cc'; else $(CYGPATH_W) '$(srcdir)/tidy_peripheral_curves.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-tidy_peripheral_curves.Tpo $(DEPDIR)/libsnap_a-tidy_peripheral_curves.Po
#	source='tidy_peripheral_curves.cc' object='libsnap_a-tidy_peripheral_curves.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-tidy_peripheral_curves.obj `if test -f 'tidy_peripheral_curves.cc'; then $(CYGPATH_W) 'tidy_peripheral_curves.cc'; else $(CYGPATH_W) '$(srcdir)/tidy_peripheral_curves.cc'; fi`

libsnap_a-transcendentals.o: transcendentals.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-transcendentals.o -MD -MP -MF $(DEPDIR)/libsnap_a-transcendentals.Tpo -c -o libsnap_a-transcendentals.o `test -f 'transcendentals.cc' || echo '$(srcdir)/'`transcendentals.cc
	mv -f $(DEPDIR)/libsnap_a-transcendentals.Tpo $(DEPDIR)/libsnap_a-transcendentals.Po
#	source='transcendentals.cc' object='libsnap_a-transcendentals.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-transcendentals.o `test -f 'transcendentals.cc' || echo '$(srcdir)/'`transcendentals.cc

libsnap_a-transcendentals.obj: transcendentals.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-transcendentals.obj -MD -MP -MF $(DEPDIR)/libsnap_a-transcendentals.Tpo -c -o libsnap_a-transcendentals.obj `if test -f 'transcendentals.cc'; then $(CYGPATH_W) 'transcendentals.cc'; else $(CYGPATH_W) '$(srcdir)/transcendentals.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-transcendentals.Tpo $(DEPDIR)/libsnap_a-transcendentals.Po
#	source='transcendentals.cc' object='libsnap_a-transcendentals.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-transcendentals.obj `if test -f 'transcendentals.cc'; then $(CYGPATH_W) 'transcendentals.cc'; else $(CYGPATH_W) '$(srcdir)/transcendentals.cc'; fi`

libsnap_a-triangulations.o: triangulations.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-triangulations.o -MD -MP -MF $(DEPDIR)/libsnap_a-triangulations.Tpo -c -o libsnap_a-triangulations.o `test -f 'triangulations.cc' || echo '$(srcdir)/'`triangulations.cc
	mv -f $(DEPDIR)/libsnap_a-triangulations.Tpo $(DEPDIR)/libsnap_a-triangulations.Po
#	source='triangulations.cc' object='libsnap_a-triangulations.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-triangulations.o `test -f 'triangulations.cc' || echo '$(srcdir)/'`triangulations.cc

libsnap_a-triangulations.obj: triangulations.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-triangulations.obj -MD -MP -MF $(DEPDIR)/libsnap_a-triangulations.Tpo -c -o libsnap_a-triangulations.obj `if test -f 'triangulations.cc'; then $(CYGPATH_W) 'triangulations.cc'; else $(CYGPATH_W) '$(srcdir)/triangulations.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-triangulations.Tpo $(DEPDIR)/libsnap_a-triangulations.Po
#	source='triangulations.cc' object='libsnap_a-triangulations.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-triangulations.obj `if test -f 'triangulations.cc'; then $(CYGPATH_W) 'triangulations.cc'; else $(CYGPATH_W) '$(srcdir)/triangulations.cc'; fi`

libsnap_a-two_bridge.o: two_bridge.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-two_bridge.o -MD -MP -MF $(DEPDIR)/libsnap_a-two_bridge.Tpo -c -o libsnap_a-two_bridge.o `test -f 'two_bridge.cc' || echo '$(srcdir)/'`two_bridge.cc
	mv -f $(DEPDIR)/libsnap_a-two_bridge.Tpo $(DEPDIR)/libsnap_a-two_bridge.Po
#	source='two_bridge.cc' object='libsnap_a-two_bridge.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-two_bridge.o `test -f 'two_bridge.cc' || echo '$(srcdir)/'`two_bridge.cc

libsnap_a-two_bridge.obj: two_bridge.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-two_bridge.obj -MD -MP -MF $(DEPDIR)/libsnap_a-two_bridge.Tpo -c -o libsnap_a-two_bridge.obj `if test -f 'two_bridge.cc'; then $(CYGPATH_W) 'two_bridge.cc'; else $(CYGPATH_W) '$(srcdir)/two_bridge.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-two_bridge.Tpo $(DEPDIR)/libsnap_a-two_bridge.Po
#	source='two_bridge.cc' object='libsnap_a-two_bridge.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-two_bridge.obj `if test -f 'two_bridge.cc'; then $(CYGPATH_W) 'two_bridge.cc'; else $(CYGPATH_W) '$(srcdir)/two_bridge.cc'; fi`

libsnap_a-unix_io.o: unix_io.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-unix_io.o -MD -MP -MF $(DEPDIR)/libsnap_a-unix_io.Tpo -c -o libsnap_a-unix_io.o `test -f 'unix_io.cc' || echo '$(srcdir)/'`unix_io.cc
	mv -f $(DEPDIR)/libsnap_a-unix_io.Tpo $(DEPDIR)/libsnap_a-unix_io.Po
#	source='unix_io.cc' object='libsnap_a-unix_io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-unix_io.o `test -f 'unix_io.cc' || echo '$(srcdir)/'`unix_io.cc

libsnap_a-unix_io.obj: unix_io.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-unix_io.obj -MD -MP -MF $(DEPDIR)/libsnap_a-unix_io.Tpo -c -o libsnap_a-unix_io.obj `if test -f 'unix_io.cc'; then $(CYGPATH_W) 'unix_io.cc'; else $(CYGPATH_W) '$(srcdir)/unix_io.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-unix_io.Tpo $(DEPDIR)/libsnap_a-unix_io.Po
#	source='unix_io.cc' object='libsnap_a-unix_io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-unix_io.obj `if test -f 'unix_io.cc'; then $(CYGPATH_W) 'unix_io.cc'; else $(CYGPATH_W) '$(srcdir)/unix_io.cc'; fi`

libsnap_a-update_shapes.o: update_shapes.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-update_shapes.o -MD -MP -MF $(DEPDIR)/libsnap_a-update_shapes.Tpo -c -o libsnap_a-update_shapes.o `test -f 'update_shapes.cc' || echo '$(srcdir)/'`update_shapes.cc
	mv -f $(DEPDIR)/libsnap_a-update_shapes.Tpo $(DEPDIR)/libsnap_a-update_shapes.Po
#	source='update_shapes.cc' object='libsnap_a-update_shapes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-update_shapes.o `test -f 'update_shapes.cc' || echo '$(srcdir)/'`update_shapes.cc

libsnap_a-update_shapes.obj: update_shapes.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-update_shapes.obj -MD -MP -MF $(DEPDIR)/libsnap_a-update_shapes.Tpo -c -o libsnap_a-update_shapes.obj `if test -f 'update_shapes.cc'; then $(CYGPATH_W) 'update_shapes.cc'; else $(CYGPATH_W) '$(srcdir)/update_shapes.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-update_shapes.Tpo $(DEPDIR)/libsnap_a-update_shapes.Po
#	source='update_shapes.cc' object='libsnap_a-update_shapes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-update_shapes.obj `if test -f 'update_shapes.cc'; then $(CYGPATH_W) 'update_shapes.cc'; else $(CYGPATH_W) '$(srcdir)/update_shapes.cc'; fi`

libsnap_a-volume.o: volume.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-volume.o -MD -MP -MF $(DEPDIR)/libsnap_a-volume.Tpo -c -o libsnap_a-volume.o `test -f 'volume.cc' || echo '$(srcdir)/'`volume.cc
	mv -f $(DEPDIR)/libsnap_a-volume.Tpo $(DEPDIR)/libsnap_a-volume.Po
#	source='volume.cc' object='libsnap_a-volume.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-volume.o `test -f 'volume.cc' || echo '$(srcdir)/'`volume.cc

libsnap_a-volume.obj: volume.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-volume.obj -MD -MP -MF $(DEPDIR)/libsnap_a-volume.Tpo -c -o libsnap_a-volume.obj `if test -f 'volume.cc'; then $(CYGPATH_W) 'volume.cc'; else $(CYGPATH_W) '$(srcdir)/volume.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-volume.Tpo $(DEPDIR)/libsnap_a-volume.Po
#	source='volume.cc' object='libsnap_a-volume.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-volume.obj `if test -f 'volume.cc'; then $(CYGPATH_W) 'volume.cc'; else $(CYGPATH_W) '$(srcdir)/volume.cc'; fi`

libsnap_a-Alg_matrices.o: Alg_matrices.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Alg_matrices.o -MD -MP -MF $(DEPDIR)/libsnap_a-Alg_matrices.Tpo -c -o libsnap_a-Alg_matrices.o `test -f 'Alg_matrices.cc' || echo '$(srcdir)/'`Alg_matrices.cc
	mv -f $(DEPDIR)/libsnap_a-Alg_matrices.Tpo $(DEPDIR)/libsnap_a-Alg_matrices.Po
#	source='Alg_matrices.cc' object='libsnap_a-Alg_matrices.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Alg_matrices.o `test -f 'Alg_matrices.cc' || echo '$(srcdir)/'`Alg_matrices.cc

libsnap_a-Alg_matrices.obj: Alg_matrices.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Alg_matrices.obj -MD -MP -MF $(DEPDIR)/libsnap_a-Alg_matrices.Tpo -c -o libsnap_a-Alg_matrices.obj `if test -f 'Alg_matrices.cc'; then $(CYGPATH_W) 'Alg_matrices.cc'; else $(CYGPATH_W) '$(srcdir)/Alg_matrices.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-Alg_matrices.Tpo $(DEPDIR)/libsnap_a-Alg_matrices.Po
#	source='Alg_matrices.cc' object='libsnap_a-Alg_matrices.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Alg_matrices.obj `if test -f 'Alg_matrices.cc'; then $(CYGPATH_W) 'Alg_matrices.cc'; else $(CYGPATH_W) '$(srcdir)/Alg_matrices.cc'; fi`

libsnap_a-Dirichlet2D.o: Dirichlet2D.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Dirichlet2D.o -MD -MP -MF $(DEPDIR)/libsnap_a-Dirichlet2D.Tpo -c -o libsnap_a-Dirichlet2D.o `test -f 'Dirichlet2D.cc' || echo '$(srcdir)/'`Dirichlet2D.cc
	mv -f $(DEPDIR)/libsnap_a-Dirichlet2D.Tpo $(DEPDIR)/libsnap_a-Dirichlet2D.Po
#	source='Dirichlet2D.cc' object='libsnap_a-Dirichlet2D.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Dirichlet2D.o `test -f 'Dirichlet2D.cc' || echo '$(srcdir)/'`Dirichlet2D.cc

libsnap_a-Dirichlet2D.obj: Dirichlet2D.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Dirichlet2D.obj -MD -MP -MF $(DEPDIR)/libsnap_a-Dirichlet2D.Tpo -c -o libsnap_a-Dirichlet2D.obj `if test -f 'Dirichlet2D.cc'; then $(CYGPATH_W) 'Dirichlet2D.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet2D.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-Dirichlet2D.Tpo $(DEPDIR)/libsnap_a-Dirichlet2D.Po
#	source='Dirichlet2D.cc' object='libsnap_a-Dirichlet2D.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Dirichlet2D.obj `if test -f 'Dirichlet2D.cc'; then $(CYGPATH_W) 'Dirichlet2D.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet2D.cc'; fi`

libsnap_a-Dirichlet2D_construction.o: Dirichlet2D_construction.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Dirichlet2D_construction.o -MD -MP -MF $(DEPDIR)/libsnap_a-Dirichlet2D_construction.Tpo -c -o libsnap_a-Dirichlet2D_construction.o `test -f 'Dirichlet2D_construction.cc' || echo '$(srcdir)/'`Dirichlet2D_construction.cc
	mv -f $(DEPDIR)/libsnap_a-Dirichlet2D_construction.Tpo $(DEPDIR)/libsnap_a-Dirichlet2D_construction.Po
#	source='Dirichlet2D_construction.cc' object='libsnap_a-Dirichlet2D_construction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Dirichlet2D_construction.o `test -f 'Dirichlet2D_construction.cc' || echo '$(srcdir)/'`Dirichlet2D_construction.cc

libsnap_a-Dirichlet2D_construction.obj: Dirichlet2D_construction.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Dirichlet2D_construction.obj -MD -MP -MF $(DEPDIR)/libsnap_a-Dirichlet2D_construction.Tpo -c -o libsnap_a-Dirichlet2D_construction.obj `if test -f 'Dirichlet2D_construction.cc'; then $(CYGPATH_W) 'Dirichlet2D_construction.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet2D_construction.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-Dirichlet2D_construction.Tpo $(DEPDIR)/libsnap_a-Dirichlet2D_construction.Po
#	source='Dirichlet2D_construction.cc' object='libsnap_a-Dirichlet2D_construction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Dirichlet2D_construction.obj `if test -f 'Dirichlet2D_construction.cc'; then $(CYGPATH_W) 'Dirichlet2D_construction.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet2D_construction.cc'; fi`

libsnap_a-Dirichlet2D_extras.o: Dirichlet2D_extras.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Dirichlet2D_extras.o -MD -MP -MF $(DEPDIR)/libsnap_a-Dirichlet2D_extras.Tpo -c -o libsnap_a-Dirichlet2D_extras.o `test -f 'Dirichlet2D_extras.cc' || echo '$(srcdir)/'`Dirichlet2D_extras.cc
	mv -f $(DEPDIR)/libsnap_a-Dirichlet2D_extras.Tpo $(DEPDIR)/libsnap_a-Dirichlet2D_extras.Po
#	source='Dirichlet2D_extras.cc' object='libsnap_a-Dirichlet2D_extras.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Dirichlet2D_extras.o `test -f 'Dirichlet2D_extras.cc' || echo '$(srcdir)/'`Dirichlet2D_extras.cc

libsnap_a-Dirichlet2D_extras.obj: Dirichlet2D_extras.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Dirichlet2D_extras.obj -MD -MP -MF $(DEPDIR)/libsnap_a-Dirichlet2D_extras.Tpo -c -o libsnap_a-Dirichlet2D_extras.obj `if test -f 'Dirichlet2D_extras.cc'; then $(CYGPATH_W) 'Dirichlet2D_extras.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet2D_extras.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-Dirichlet2D_extras.Tpo $(DEPDIR)/libsnap_a-Dirichlet2D_extras.Po
#	source='Dirichlet2D_extras.cc' object='libsnap_a-Dirichlet2D_extras.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Dirichlet2D_extras.obj `if test -f 'Dirichlet2D_extras.cc'; then $(CYGPATH_W) 'Dirichlet2D_extras.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet2D_extras.cc'; fi`

libsnap_a-Dirichlet_basepoint2D.o: Dirichlet_basepoint2D.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Dirichlet_basepoint2D.o -MD -MP -MF $(DEPDIR)/libsnap_a-Dirichlet_basepoint2D.Tpo -c -o libsnap_a-Dirichlet_basepoint2D.o `test -f 'Dirichlet_basepoint2D.cc' || echo '$(srcdir)/'`Dirichlet_basepoint2D.cc
	mv -f $(DEPDIR)/libsnap_a-Dirichlet_basepoint2D.Tpo $(DEPDIR)/libsnap_a-Dirichlet_basepoint2D.Po
#	source='Dirichlet_basepoint2D.cc' object='libsnap_a-Dirichlet_basepoint2D.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Dirichlet_basepoint2D.o `test -f 'Dirichlet_basepoint2D.cc' || echo '$(srcdir)/'`Dirichlet_basepoint2D.cc

libsnap_a-Dirichlet_basepoint2D.obj: Dirichlet_basepoint2D.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Dirichlet_basepoint2D.obj -MD -MP -MF $(DEPDIR)/libsnap_a-Dirichlet_basepoint2D.Tpo -c -o libsnap_a-Dirichlet_basepoint2D.obj `if test -f 'Dirichlet_basepoint2D.cc'; then $(CYGPATH_W) 'Dirichlet_basepoint2D.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet_basepoint2D.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-Dirichlet_basepoint2D.Tpo $(DEPDIR)/libsnap_a-Dirichlet_basepoint2D.Po
#	source='Dirichlet_basepoint2D.cc' object='libsnap_a-Dirichlet_basepoint2D.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Dirichlet_basepoint2D.obj `if test -f 'Dirichlet_basepoint2D.cc'; then $(CYGPATH_W) 'Dirichlet_basepoint2D.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet_basepoint2D.cc'; fi`

libsnap_a-Dirichlet_precision2D.o: Dirichlet_precision2D.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Dirichlet_precision2D.o -MD -MP -MF $(DEPDIR)/libsnap_a-Dirichlet_precision2D.Tpo -c -o libsnap_a-Dirichlet_precision2D.o `test -f 'Dirichlet_precision2D.cc' || echo '$(srcdir)/'`Dirichlet_precision2D.cc
	mv -f $(DEPDIR)/libsnap_a-Dirichlet_precision2D.Tpo $(DEPDIR)/libsnap_a-Dirichlet_precision2D.Po
#	source='Dirichlet_precision2D.cc' object='libsnap_a-Dirichlet_precision2D.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Dirichlet_precision2D.o `test -f 'Dirichlet_precision2D.cc' || echo '$(srcdir)/'`Dirichlet_precision2D.cc

libsnap_a-Dirichlet_precision2D.obj: Dirichlet_precision2D.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-Dirichlet_precision2D.obj -MD -MP -MF $(DEPDIR)/libsnap_a-Dirichlet_precision2D.Tpo -c -o libsnap_a-Dirichlet_precision2D.obj `if test -f 'Dirichlet_precision2D.cc'; then $(CYGPATH_W) 'Dirichlet_precision2D.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet_precision2D.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-Dirichlet_precision2D.Tpo $(DEPDIR)/libsnap_a-Dirichlet_precision2D.Po
#	source='Dirichlet_precision2D.cc' object='libsnap_a-Dirichlet_precision2D.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-Dirichlet_precision2D.obj `if test -f 'Dirichlet_precision2D.cc'; then $(CYGPATH_W) 'Dirichlet_precision2D.cc'; else $(CYGPATH_W) '$(srcdir)/Dirichlet_precision2D.cc'; fi`

libsnap_a-SL2RMatrix.o: SL2RMatrix.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-SL2RMatrix.o -MD -MP -MF $(DEPDIR)/libsnap_a-SL2RMatrix.Tpo -c -o libsnap_a-SL2RMatrix.o `test -f 'SL2RMatrix.cc' || echo '$(srcdir)/'`SL2RMatrix.cc
	mv -f $(DEPDIR)/libsnap_a-SL2RMatrix.Tpo $(DEPDIR)/libsnap_a-SL2RMatrix.Po
#	source='SL2RMatrix.cc' object='libsnap_a-SL2RMatrix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-SL2RMatrix.o `test -f 'SL2RMatrix.cc' || echo '$(srcdir)/'`SL2RMatrix.cc

libsnap_a-SL2RMatrix.obj: SL2RMatrix.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-SL2RMatrix.obj -MD -MP -MF $(DEPDIR)/libsnap_a-SL2RMatrix.Tpo -c -o libsnap_a-SL2RMatrix.obj `if test -f 'SL2RMatrix.cc'; then $(CYGPATH_W) 'SL2RMatrix.cc'; else $(CYGPATH_W) '$(srcdir)/SL2RMatrix.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-SL2RMatrix.Tpo $(DEPDIR)/libsnap_a-SL2RMatrix.Po
#	source='SL2RMatrix.cc' object='libsnap_a-SL2RMatrix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-SL2RMatrix.obj `if test -f 'SL2RMatrix.cc'; then $(CYGPATH_W) 'SL2RMatrix.cc'; else $(CYGPATH_W) '$(srcdir)/SL2RMatrix.cc'; fi`

libsnap_a-dt2snap.o: dt2snap.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-dt2snap.o -MD -MP -MF $(DEPDIR)/libsnap_a-dt2snap.Tpo -c -o libsnap_a-dt2snap.o `test -f 'dt2snap.cc' || echo '$(srcdir)/'`dt2snap.cc
	mv -f $(DEPDIR)/libsnap_a-dt2snap.Tpo $(DEPDIR)/libsnap_a-dt2snap.Po
#	source='dt2snap.cc' object='libsnap_a-dt2snap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-dt2snap.o `test -f 'dt2snap.cc' || echo '$(srcdir)/'`dt2snap.cc

libsnap_a-dt2snap.obj: dt2snap.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-dt2snap.obj -MD -MP -MF $(DEPDIR)/libsnap_a-dt2snap.Tpo -c -o libsnap_a-dt2snap.obj `if test -f 'dt2snap.cc'; then $(CYGPATH_W) 'dt2snap.cc'; else $(CYGPATH_W) '$(srcdir)/dt2snap.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-dt2snap.Tpo $(DEPDIR)/libsnap_a-dt2snap.Po
#	source='dt2snap.cc' object='libsnap_a-dt2snap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-dt2snap.obj `if test -f 'dt2snap.cc'; then $(CYGPATH_W) 'dt2snap.cc'; else $(CYGPATH_W) '$(srcdir)/dt2snap.cc'; fi`

libsnap_a-crossing_signs.o: crossing_signs.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-crossing_signs.o -MD -MP -MF $(DEPDIR)/libsnap_a-crossing_signs.Tpo -c -o libsnap_a-crossing_signs.o `test -f 'crossing_signs.cc' || echo '$(srcdir)/'`crossing_signs.cc
	mv -f $(DEPDIR)/libsnap_a-crossing_signs.Tpo $(DEPDIR)/libsnap_a-crossing_signs.Po
#	source='crossing_signs.cc' object='libsnap_a-crossing_signs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-crossing_signs.o `test -f 'crossing_signs.cc' || echo '$(srcdir)/'`crossing_signs.cc

libsnap_a-crossing_signs.obj: crossing_signs.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-crossing_signs.obj -MD -MP -MF $(DEPDIR)/libsnap_a-crossing_signs.Tpo -c -o libsnap_a-crossing_signs.obj `if test -f 'crossing_signs.cc'; then $(CYGPATH_W) 'crossing_signs.cc'; else $(CYGPATH_W) '$(srcdir)/crossing_signs.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-crossing_signs.Tpo $(DEPDIR)/libsnap_a-crossing_signs.Po
#	source='crossing_signs.cc' object='libsnap_a-crossing_signs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-crossing_signs.obj `if test -f 'crossing_signs.cc'; then $(CYGPATH_W) 'crossing_signs.cc'; else $(CYGPATH_W) '$(srcdir)/crossing_signs.cc'; fi`

libsnap_a-link_diagram.o: link_diagram.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-link_diagram.o -MD -MP -MF $(DEPDIR)/libsnap_a-link_diagram.Tpo -c -o libsnap_a-link_diagram.o `test -f 'link_diagram.cc' || echo '$(srcdir)/'`link_diagram.cc
	mv -f $(DEPDIR)/libsnap_a-link_diagram.Tpo $(DEPDIR)/libsnap_a-link_diagram.Po
#	source='link_diagram.cc' object='libsnap_a-link_diagram.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-link_diagram.o `test -f 'link_diagram.cc' || echo '$(srcdir)/'`link_diagram.cc

libsnap_a-link_diagram.obj: link_diagram.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -MT libsnap_a-link_diagram.obj -MD -MP -MF $(DEPDIR)/libsnap_a-link_diagram.Tpo -c -o libsnap_a-link_diagram.obj `if test -f 'link_diagram.cc'; then $(CYGPATH_W) 'link_diagram.cc'; else $(CYGPATH_W) '$(srcdir)/link_diagram.cc'; fi`
	mv -f $(DEPDIR)/libsnap_a-link_diagram.Tpo $(DEPDIR)/libsnap_a-link_diagram.Po
#	source='link_diagram.cc' object='libsnap_a-link_diagram.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsnap_a_CXXFLAGS) $(CXXFLAGS) -c -o libsnap_a-link_diagram.obj `if test -f 'link_diagram.cc'; then $(CYGPATH_W) 'link_diagram.cc'; else $(CYGPATH_W) '$(srcdir)/link_diagram.cc'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
